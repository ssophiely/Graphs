{"ast":null,"code":"const attemptsLimit = 1000;\nconst radius = 20;\nexport function generateCoordinates(canvas, circles) {\n  let attempts = 0;\n  while (attempts < attemptsLimit) {\n    attempts++;\n    const x = Math.random() * (canvas.width - 2 * radius - 1) + radius;\n    const y = Math.random() * (canvas.height - 2 * radius) + radius;\n    const newCircle = {\n      x,\n      y,\n      radius\n    };\n    if (!isOverlapping(newCircle, circles)) {\n      return [x, y];\n    }\n  }\n  return [null, null];\n}\nfunction isOverlapping(newCircle, circles) {\n  for (const circle of circles) {\n    const dx = newCircle.x - circle.x;\n    const dy = newCircle.y - circle.y;\n    const distance = Math.sqrt(dx * dx + dy * dy);\n    if (distance < newCircle.radius + circle.radius) {\n      return true; // круги перекрываются\n    }\n  }\n  return false; // круги не перекрываются\n}","map":{"version":3,"names":["attemptsLimit","radius","generateCoordinates","canvas","circles","attempts","x","Math","random","width","y","height","newCircle","isOverlapping","circle","dx","dy","distance","sqrt"],"sources":["D:/Users/admin/Desktop/graph_app/src/funcs/generateCoords.js"],"sourcesContent":["const attemptsLimit = 1000;\r\nconst radius = 20;\r\n\r\nexport function generateCoordinates(canvas, circles) {\r\n  let attempts = 0;\r\n\r\n  while (attempts < attemptsLimit) {\r\n    attempts++;\r\n    const x = Math.random() * (canvas.width - 2 * radius-1) + radius;\r\n    const y = Math.random() * (canvas.height - 2 * radius) + radius;\r\n\r\n    const newCircle = { x, y, radius };\r\n\r\n    if (!isOverlapping(newCircle, circles)) {\r\n      return [x, y];\r\n    }\r\n  }\r\n\r\n  return [null, null];\r\n}\r\n\r\nfunction isOverlapping(newCircle, circles) {\r\n  for (const circle of circles) {\r\n    const dx = newCircle.x - circle.x;\r\n    const dy = newCircle.y - circle.y;\r\n    const distance = Math.sqrt(dx * dx + dy * dy);\r\n    if (distance < newCircle.radius + circle.radius) {\r\n      return true; // круги перекрываются\r\n    }\r\n  }\r\n  return false; // круги не перекрываются\r\n}\r\n"],"mappings":"AAAA,MAAMA,aAAa,GAAG,IAAI;AAC1B,MAAMC,MAAM,GAAG,EAAE;AAEjB,OAAO,SAASC,mBAAmBA,CAACC,MAAM,EAAEC,OAAO,EAAE;EACnD,IAAIC,QAAQ,GAAG,CAAC;EAEhB,OAAOA,QAAQ,GAAGL,aAAa,EAAE;IAC/BK,QAAQ,EAAE;IACV,MAAMC,CAAC,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,IAAIL,MAAM,CAACM,KAAK,GAAG,CAAC,GAAGR,MAAM,GAAC,CAAC,CAAC,GAAGA,MAAM;IAChE,MAAMS,CAAC,GAAGH,IAAI,CAACC,MAAM,CAAC,CAAC,IAAIL,MAAM,CAACQ,MAAM,GAAG,CAAC,GAAGV,MAAM,CAAC,GAAGA,MAAM;IAE/D,MAAMW,SAAS,GAAG;MAAEN,CAAC;MAAEI,CAAC;MAAET;IAAO,CAAC;IAElC,IAAI,CAACY,aAAa,CAACD,SAAS,EAAER,OAAO,CAAC,EAAE;MACtC,OAAO,CAACE,CAAC,EAAEI,CAAC,CAAC;IACf;EACF;EAEA,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC;AACrB;AAEA,SAASG,aAAaA,CAACD,SAAS,EAAER,OAAO,EAAE;EACzC,KAAK,MAAMU,MAAM,IAAIV,OAAO,EAAE;IAC5B,MAAMW,EAAE,GAAGH,SAAS,CAACN,CAAC,GAAGQ,MAAM,CAACR,CAAC;IACjC,MAAMU,EAAE,GAAGJ,SAAS,CAACF,CAAC,GAAGI,MAAM,CAACJ,CAAC;IACjC,MAAMO,QAAQ,GAAGV,IAAI,CAACW,IAAI,CAACH,EAAE,GAAGA,EAAE,GAAGC,EAAE,GAAGA,EAAE,CAAC;IAC7C,IAAIC,QAAQ,GAAGL,SAAS,CAACX,MAAM,GAAGa,MAAM,CAACb,MAAM,EAAE;MAC/C,OAAO,IAAI,CAAC,CAAC;IACf;EACF;EACA,OAAO,KAAK,CAAC,CAAC;AAChB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}