{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\admin\\\\Desktop\\\\graph_app\\\\src\\\\components\\\\graph\\\\GraphComponent.jsx\",\n  _s = $RefreshSig$();\n// import { Graph } from \"react-d3-graph\";\n\n// function GraphComponent() {\n//   const data = {\n//     nodes: [{ id: \"Harry\" }, { id: \"Sally\" }, { id: \"Alice\" }],\n//     links: [\n//       { source: \"Harry\", target: \"Sally\", weight: 5 , ma},\n//       { source: \"Harry\", target: \"Alice\" },\n//       { source: \"Sally\", target: \"Harry\", weight: 5 },\n//     ],\n//   };\n\n//   // the graph configuration, just override the ones you need\n//   const myConfig = {\n//     nodeHighlightBehavior: true,\n//     node: {\n//       color: \"black\",\n//       size: 220,\n//       highlightStrokeColor: \"red\",\n//     },\n//     link: {\n//       highlightColor: \"yellow\",\n//       renderLabel: true,\n//       labelProperty: \"weight\",\n//       markerHeight: 5,\n//       markerWidth: 3,\n//       type: \"CURVE_SMOOTH\"\n//     },\n//   };\n\n//   const onClickNode = function (nodeId) {\n//     window.alert(`Clicked node ${nodeId}`);\n//   };\n\n//   const onClickLink = function (source, target) {\n//     window.alert(`Clicked link between ${source} and ${target}`);\n//   };\n\n//   return (\n//     <Graph\n//       id=\"graphId\"\n//       data={data}\n//       config={myConfig}\n//       onClickNode={onClickNode}\n//       onClickLink={onClickLink}\n//     />\n//   );\n// }\n\n// export default GraphComponent;\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function GraphComponent({\n  headers,\n  data\n}) {\n  _s();\n  const canvasRef = useRef(null);\n  const [isDragging, setIsDragging] = useState(false);\n  const [selectedVertex, setSelectedVertex] = useState(null);\n  const [vertexes, setVertexes] = useState([]);\n  const [offset, setOffset] = useState({\n    x: 0,\n    y: 0\n  });\n  const drawCircle = (vert, ctx) => {\n    console.log(\"dtaw\", vert, ctx);\n    ctx.beginPath();\n    ctx.arc(vert.x, vert.y, 20, 0, Math.PI * 2); // придумать расположение\n    ctx.fillStyle = \"blue\";\n    ctx.fill();\n    ctx.closePath();\n  };\n  useEffect(() => {\n    let newVertexes = headers.filter(h => {\n      var list = vertexes.map(e => e.label);\n      return !list.includes(h);\n    }).map(e => {\n      return {\n        label: e,\n        x: 100,\n        y: 100\n      };\n    });\n    setVertexes([...vertexes, newVertexes]);\n    console.log(headers, newVertexes);\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    vertexes.forEach(v => {\n      console.log();\n      drawCircle(v, ctx);\n    });\n  }, [headers, data]);\n  const handleMouseUp = () => {\n    setIsDragging(false);\n    setSelectedVertex(null);\n  };\n  const handleMouseDown = e => {\n    const mousePos = getMousePos(canvasRef.current, e);\n    const clickedCircle = vertexes.find(circle => {\n      return (mousePos.x - circle.x) * 2 + (mousePos.y - circle.y) * 2 <= circle.radius ** 2;\n    });\n    if (clickedCircle) {\n      setIsDragging(true);\n      setSelectedVertex(clickedCircle);\n      setOffset({\n        x: mousePos.x - clickedCircle.x,\n        y: mousePos.y - clickedCircle.y\n      });\n    }\n  };\n  const handleMouseMove = e => {\n    if (isDragging && selectedVertex) {\n      const mousePos = getMousePos(canvasRef.current, e);\n      const newCircles = vertexes.map(circle => {\n        if (circle === selectedVertex) {\n          const newX = mousePos.x - offset.x;\n          const newY = mousePos.y - offset.y;\n\n          // Проверка границ\n          const radius = circle.radius;\n          if (newX - radius < 0) return {\n            ...circle,\n            x: radius\n          };\n          if (newY - radius < 0) return {\n            ...circle,\n            y: radius\n          };\n          if (newX + radius > canvasRef.current.width) return {\n            ...circle,\n            x: canvasRef.current.width - radius\n          };\n          if (newY + radius > canvasRef.current.height) return {\n            ...circle,\n            y: canvasRef.current.height - radius\n          };\n          return {\n            ...circle,\n            x: newX,\n            y: newY\n          };\n        }\n        return circle;\n      });\n      setVertexes(newCircles);\n    }\n  };\n  const getMousePos = (canvas, evt) => {\n    const rect = canvas.getBoundingClientRect();\n    return {\n      x: evt.clientX - rect.left,\n      y: evt.clientY - rect.top\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    width: \"800\",\n    height: \"600\",\n    onMouseDown: handleMouseDown,\n    onMouseMove: handleMouseMove,\n    onMouseUp: handleMouseUp\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n}\n_s(GraphComponent, \"EhMz348dh5MtFKxkeyDCDRixfak=\");\n_c = GraphComponent;\nvar _c;\n$RefreshReg$(_c, \"GraphComponent\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","GraphComponent","headers","data","_s","canvasRef","isDragging","setIsDragging","selectedVertex","setSelectedVertex","vertexes","setVertexes","offset","setOffset","x","y","drawCircle","vert","ctx","console","log","beginPath","arc","Math","PI","fillStyle","fill","closePath","newVertexes","filter","h","list","map","e","label","includes","canvas","current","getContext","clearRect","width","height","forEach","v","handleMouseUp","handleMouseDown","mousePos","getMousePos","clickedCircle","find","circle","radius","handleMouseMove","newCircles","newX","newY","evt","rect","getBoundingClientRect","clientX","left","clientY","top","ref","onMouseDown","onMouseMove","onMouseUp","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Users/admin/Desktop/graph_app/src/components/graph/GraphComponent.jsx"],"sourcesContent":["// import { Graph } from \"react-d3-graph\";\r\n\r\n// function GraphComponent() {\r\n//   const data = {\r\n//     nodes: [{ id: \"Harry\" }, { id: \"Sally\" }, { id: \"Alice\" }],\r\n//     links: [\r\n//       { source: \"Harry\", target: \"Sally\", weight: 5 , ma},\r\n//       { source: \"Harry\", target: \"Alice\" },\r\n//       { source: \"Sally\", target: \"Harry\", weight: 5 },\r\n//     ],\r\n//   };\r\n\r\n//   // the graph configuration, just override the ones you need\r\n//   const myConfig = {\r\n//     nodeHighlightBehavior: true,\r\n//     node: {\r\n//       color: \"black\",\r\n//       size: 220,\r\n//       highlightStrokeColor: \"red\",\r\n//     },\r\n//     link: {\r\n//       highlightColor: \"yellow\",\r\n//       renderLabel: true,\r\n//       labelProperty: \"weight\",\r\n//       markerHeight: 5,\r\n//       markerWidth: 3,\r\n//       type: \"CURVE_SMOOTH\"\r\n//     },\r\n//   };\r\n\r\n//   const onClickNode = function (nodeId) {\r\n//     window.alert(`Clicked node ${nodeId}`);\r\n//   };\r\n\r\n//   const onClickLink = function (source, target) {\r\n//     window.alert(`Clicked link between ${source} and ${target}`);\r\n//   };\r\n\r\n//   return (\r\n//     <Graph\r\n//       id=\"graphId\"\r\n//       data={data}\r\n//       config={myConfig}\r\n//       onClickNode={onClickNode}\r\n//       onClickLink={onClickLink}\r\n//     />\r\n//   );\r\n// }\r\n\r\n// export default GraphComponent;\r\n\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\n\r\nexport default function GraphComponent({ headers, data }) {\r\n  const canvasRef = useRef(null);\r\n\r\n  const [isDragging, setIsDragging] = useState(false);\r\n  const [selectedVertex, setSelectedVertex] = useState(null);\r\n  const [vertexes, setVertexes] = useState([]);\r\n  const [offset, setOffset] = useState({ x: 0, y: 0 });\r\n\r\n  const drawCircle = (vert, ctx) => {\r\n    console.log(\"dtaw\", vert, ctx);\r\n    ctx.beginPath();\r\n    ctx.arc(vert.x, vert.y, 20, 0, Math.PI * 2); // придумать расположение\r\n    ctx.fillStyle = \"blue\";\r\n    ctx.fill();\r\n    ctx.closePath();\r\n  };\r\n\r\n  useEffect(() => {\r\n    let newVertexes = headers\r\n      .filter((h) => {\r\n        var list = vertexes.map((e) => e.label);\r\n        return !list.includes(h);\r\n      })\r\n      .map((e) => {\r\n        return { label: e, x: 100, y: 100 };\r\n      });\r\n    setVertexes([...vertexes, newVertexes]);\r\n\r\n    console.log(headers, newVertexes);\r\n\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext(\"2d\");\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n    vertexes.forEach((v) => {console.log();drawCircle(v, ctx)});\r\n  }, [headers, data]);\r\n\r\n  const handleMouseUp = () => {\r\n    setIsDragging(false);\r\n    setSelectedVertex(null);\r\n  };\r\n\r\n  const handleMouseDown = (e) => {\r\n    const mousePos = getMousePos(canvasRef.current, e);\r\n    const clickedCircle = vertexes.find((circle) => {\r\n      return (\r\n        (mousePos.x - circle.x) * 2 + (mousePos.y - circle.y) * 2 <=\r\n        circle.radius ** 2\r\n      );\r\n    });\r\n\r\n    if (clickedCircle) {\r\n      setIsDragging(true);\r\n      setSelectedVertex(clickedCircle);\r\n      setOffset({\r\n        x: mousePos.x - clickedCircle.x,\r\n        y: mousePos.y - clickedCircle.y,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleMouseMove = (e) => {\r\n    if (isDragging && selectedVertex) {\r\n      const mousePos = getMousePos(canvasRef.current, e);\r\n      const newCircles = vertexes.map((circle) => {\r\n        if (circle === selectedVertex) {\r\n          const newX = mousePos.x - offset.x;\r\n          const newY = mousePos.y - offset.y;\r\n\r\n          // Проверка границ\r\n          const radius = circle.radius;\r\n          if (newX - radius < 0) return { ...circle, x: radius };\r\n          if (newY - radius < 0) return { ...circle, y: radius };\r\n          if (newX + radius > canvasRef.current.width)\r\n            return { ...circle, x: canvasRef.current.width - radius };\r\n          if (newY + radius > canvasRef.current.height)\r\n            return { ...circle, y: canvasRef.current.height - radius };\r\n\r\n          return { ...circle, x: newX, y: newY };\r\n        }\r\n        return circle;\r\n      });\r\n\r\n      setVertexes(newCircles);\r\n    }\r\n  };\r\n\r\n  const getMousePos = (canvas, evt) => {\r\n    const rect = canvas.getBoundingClientRect();\r\n    return {\r\n      x: evt.clientX - rect.left,\r\n      y: evt.clientY - rect.top,\r\n    };\r\n  };\r\n\r\n  return (\r\n    <canvas\r\n      ref={canvasRef}\r\n      width=\"800\"\r\n      height=\"600\"\r\n      onMouseDown={handleMouseDown}\r\n      onMouseMove={handleMouseMove}\r\n      onMouseUp={handleMouseUp}\r\n    />\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}