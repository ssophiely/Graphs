{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\admin\\\\Desktop\\\\graph_app\\\\src\\\\components\\\\ExportImportComponent.jsx\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ExportImportComponent({\n  headers,\n  data,\n  start,\n  end,\n  setHeaders,\n  setData,\n  setStart,\n  setEnd\n}) {\n  function handleExport() {\n    var obj = new Object();\n    obj.headers = headers;\n    obj.data = data;\n    obj.startVertex = start;\n    obj.endVertex = end;\n    var json = JSON.stringify(obj);\n    const blob = new Blob([json], {\n      type: \"application/json\"\n    });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement(\"a\");\n    link.href = url;\n    link.download = \"data.graph\";\n    document.body.appendChild(link);\n    link.click();\n\n    // Очистка\n    document.body.removeChild(link);\n    URL.revokeObjectURL(url);\n  }\n  function handleImport(e) {\n    console.log(e.target);\n    if (e.target.files) {\n      const file = e.target.files[0];\n      const reader = new FileReader();\n      reader.onload = e => {\n        try {\n          console.log(e.target);\n          const jsonData = JSON.parse(e.target.result);\n          console.log(jsonData);\n        } catch (error) {\n          console.error(\"Ошибка при разборе JSON:\", error);\n        }\n      };\n      reader.readAsText(file); // Читаем файл как текст\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"button_group\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"create_matrix_btn exp \",\n      id: \"exp\",\n      onClick: handleExport,\n      children: \"\\u042D\\u043A\\u0441\\u043F\\u043E\\u0440\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"import\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"file\",\n        type: \"file\",\n        name: \"file\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"create_matrix_btn imp\",\n        id: \"exp\",\n        onClick: e => handleImport(e),\n        children: \"\\u0418\\u043C\\u043F\\u043E\\u0440\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_c = ExportImportComponent;\nvar _c;\n$RefreshReg$(_c, \"ExportImportComponent\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ExportImportComponent","headers","data","start","end","setHeaders","setData","setStart","setEnd","handleExport","obj","Object","startVertex","endVertex","json","JSON","stringify","blob","Blob","type","url","URL","createObjectURL","link","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","handleImport","e","console","log","target","files","file","reader","FileReader","onload","jsonData","parse","result","error","readAsText","className","children","id","onClick","fileName","_jsxFileName","lineNumber","columnNumber","name","_c","$RefreshReg$"],"sources":["D:/Users/admin/Desktop/graph_app/src/components/ExportImportComponent.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport default function ExportImportComponent({\r\n  headers,\r\n  data,\r\n  start,\r\n  end,\r\n  setHeaders,\r\n  setData,\r\n  setStart,\r\n  setEnd,\r\n}) {\r\n  function handleExport() {\r\n    var obj = new Object();\r\n    obj.headers = headers;\r\n    obj.data = data;\r\n    obj.startVertex = start;\r\n    obj.endVertex = end;\r\n\r\n    var json = JSON.stringify(obj);\r\n    const blob = new Blob([json], { type: \"application/json\" });\r\n    const url = URL.createObjectURL(blob);\r\n\r\n    const link = document.createElement(\"a\");\r\n    link.href = url;\r\n    link.download = \"data.graph\";\r\n    document.body.appendChild(link);\r\n    link.click();\r\n\r\n    // Очистка\r\n    document.body.removeChild(link);\r\n    URL.revokeObjectURL(url);\r\n  }\r\n\r\n  function handleImport(e) {\r\n    console.log(e.target)\r\n    if (e.target.files) {\r\n      const file = e.target.files[0];\r\n      const reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        try {\r\n            console.log(e.target)\r\n          const jsonData = JSON.parse(e.target.result);\r\n          console.log(jsonData);\r\n        } catch (error) {\r\n          console.error(\"Ошибка при разборе JSON:\", error);\r\n        }\r\n      };\r\n      reader.readAsText(file); // Читаем файл как текст\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"button_group\">\r\n      <button\r\n        className=\"create_matrix_btn exp \"\r\n        id=\"exp\"\r\n        onClick={handleExport}\r\n      >\r\n        Экспортировать\r\n      </button>\r\n      <div id=\"import\">\r\n        <input id=\"file\" type=\"file\" name=\"file\" />\r\n        <button\r\n          className=\"create_matrix_btn imp\"\r\n          id=\"exp\"\r\n          onClick={(e)=>handleImport(e)}\r\n        >\r\n          Импортировать\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}