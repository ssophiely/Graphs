{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\admin\\\\Desktop\\\\\\u0433\\u0440\\u0430\\u0444\\u044B\\\\graph_app\\\\src\\\\components\\\\graph_info\\\\Matrix.jsx\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Matrix = ({\n  columnHeaders,\n  rowHeaders,\n  data,\n  onChange\n}) => {\n  // // Заголовки столбцов и строк\n  // let columnHeaders = vertexNames.slice(0, count);\n  // let rowHeaders = [...columnHeaders];\n\n  // const [data, setData] = useState(\n  //   [...Array(count)].map((e) => Array(count).fill(\"\"))\n  // );\n  // console.log(columnHeaders, rowHeaders, data);\n  // // Обработчик изменения значения в ячейке\n  // const handleChange = (rowIndex, colIndex, value) => {\n  //   const newData = data.map((row, rIdx) => {\n  //     if (rIdx === rowIndex) {\n  //       const newRow = [...row];\n  //       newRow[colIndex] = value;\n  //       return newRow;\n  //     }\n  //     return row;\n  //   });\n  //   setData(newData);\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    border: \"1\",\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), columnHeaders.map((header, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n          children: header\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: data.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: rowHeaders[rowIndex]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), row.map((cell, colIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: cell,\n            disabled: rowIndex === colIndex ? true : false,\n            onChange: e => onChange(rowIndex, colIndex, e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this)\n        }, colIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, this))]\n      }, rowIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_c = Matrix;\nexport default Matrix;\nvar _c;\n$RefreshReg$(_c, \"Matrix\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Matrix","columnHeaders","rowHeaders","data","onChange","border","children","fileName","_jsxFileName","lineNumber","columnNumber","map","header","index","row","rowIndex","cell","colIndex","type","value","disabled","e","target","_c","$RefreshReg$"],"sources":["D:/Users/admin/Desktop/графы/graph_app/src/components/graph_info/Matrix.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst Matrix = ({ columnHeaders, rowHeaders, data, onChange }) => {\r\n  // // Заголовки столбцов и строк\r\n  // let columnHeaders = vertexNames.slice(0, count);\r\n  // let rowHeaders = [...columnHeaders];\r\n\r\n  // const [data, setData] = useState(\r\n  //   [...Array(count)].map((e) => Array(count).fill(\"\"))\r\n  // );\r\n  // console.log(columnHeaders, rowHeaders, data);\r\n  // // Обработчик изменения значения в ячейке\r\n  // const handleChange = (rowIndex, colIndex, value) => {\r\n  //   const newData = data.map((row, rIdx) => {\r\n  //     if (rIdx === rowIndex) {\r\n  //       const newRow = [...row];\r\n  //       newRow[colIndex] = value;\r\n  //       return newRow;\r\n  //     }\r\n  //     return row;\r\n  //   });\r\n  //   setData(newData);\r\n  // };\r\n\r\n  return (\r\n    <table border=\"1\">\r\n      <thead>\r\n        <tr>\r\n          <th></th>\r\n          {/* Пустая ячейка для заголовка строки */}\r\n          {columnHeaders.map((header, index) => (\r\n            <th key={index}>{header}</th>\r\n          ))}\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {data.map((row, rowIndex) => (\r\n          <tr key={rowIndex}>\r\n            <td>{rowHeaders[rowIndex]}</td>\r\n            {row.map((cell, colIndex) => (\r\n              <td key={colIndex}>\r\n                <input\r\n                  type=\"text\"\r\n                  value={cell}\r\n                  disabled={rowIndex === colIndex ? true : false}\r\n                  onChange={(e) => onChange(rowIndex, colIndex, e.target.value)}\r\n                />\r\n              </td>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default Matrix;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,MAAM,GAAGA,CAAC;EAAEC,aAAa;EAAEC,UAAU;EAAEC,IAAI;EAAEC;AAAS,CAAC,KAAK;EAChE;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACEL,OAAA;IAAOM,MAAM,EAAC,GAAG;IAAAC,QAAA,gBACfP,OAAA;MAAAO,QAAA,eACEP,OAAA;QAAAO,QAAA,gBACEP,OAAA;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EAERT,aAAa,CAACU,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBAC/Bd,OAAA;UAAAO,QAAA,EAAiBM;QAAM,GAAdC,KAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAc,CAC7B,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACRX,OAAA;MAAAO,QAAA,EACGH,IAAI,CAACQ,GAAG,CAAC,CAACG,GAAG,EAAEC,QAAQ,kBACtBhB,OAAA;QAAAO,QAAA,gBACEP,OAAA;UAAAO,QAAA,EAAKJ,UAAU,CAACa,QAAQ;QAAC;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,EAC9BI,GAAG,CAACH,GAAG,CAAC,CAACK,IAAI,EAAEC,QAAQ,kBACtBlB,OAAA;UAAAO,QAAA,eACEP,OAAA;YACEmB,IAAI,EAAC,MAAM;YACXC,KAAK,EAAEH,IAAK;YACZI,QAAQ,EAAEL,QAAQ,KAAKE,QAAQ,GAAG,IAAI,GAAG,KAAM;YAC/Cb,QAAQ,EAAGiB,CAAC,IAAKjB,QAAQ,CAACW,QAAQ,EAAEE,QAAQ,EAAEI,CAAC,CAACC,MAAM,CAACH,KAAK;UAAE;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/D;QAAC,GANKO,QAAQ;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAOb,CACL,CAAC;MAAA,GAXKK,QAAQ;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAYb,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEZ,CAAC;AAACa,EAAA,GApDIvB,MAAM;AAsDZ,eAAeA,MAAM;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}