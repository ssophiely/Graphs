{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\admin\\\\Desktop\\\\graph_app\\\\src\\\\components\\\\graph\\\\GraphComponent.jsx\",\n  _s = $RefreshSig$();\nimport { d3 } from \"react-d3-graph\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GraphComponent() {\n  _s();\n  // const data = {\n  //   nodes: [{ id: \"Harry\" }, { id: \"Sally\" }, { id: \"Alice\" }],\n  //   links: [\n  //     { source: \"Harry\", target: \"Sally\", weight: 5 },\n  //     { source: \"Harry\", target: \"Alice\" },\n  //     { source: \"Sally\", target: \"Harry\", weight: 5 },\n  //   ],\n  // };\n\n  // // the graph configuration, just override the ones you need\n  // const myConfig = {\n  //   nodeHighlightBehavior: true,\n  //   node: {\n  //     color: \"black\",\n  //     size: 220,\n  //     highlightStrokeColor: \"red\",\n  //   },\n  //   link: {\n  //     highlightColor: \"yellow\",\n  //     renderLabel: true,\n  //     labelProperty: 'weight',\n  //   },\n  // };\n\n  // const onClickNode = function (nodeId) {\n  //   window.alert(`Clicked node ${nodeId}`);\n  // };\n\n  // const onClickLink = function (source, target) {\n  //   window.alert(`Clicked link between ${source} and ${target}`);\n  // };\n\n  // return (\n  //   <Graph\n  //     id=\"graphId\"\n  //     data={data}\n  //     config={myConfig}\n  //     onClickNode={onClickNode}\n  //     onClickLink={onClickLink}\n  //   />\n  // );\n  const nodes = [{\n    id: 'A'\n  }, {\n    id: 'B'\n  }, {\n    id: 'C'\n  }];\n  const links = [{\n    source: 'A',\n    target: 'B',\n    value: 10\n  }, {\n    source: 'B',\n    target: 'C',\n    value: 15\n  }, {\n    source: 'C',\n    target: 'A',\n    value: 20\n  }];\n  const svgRef = useRef();\n  useEffect(() => {\n    const svg = d3.select(svgRef.current).attr(\"width\", 600).attr(\"height\", 400);\n\n    // Удаляем старые элементы\n    svg.selectAll('*').remove();\n\n    // Создаем линейный генератор для ребер\n    const link = svg.append('g').attr('class', 'links').selectAll('line').data(links).enter().append('line').attr('stroke-width', d => Math.sqrt(d.value));\n\n    // Создаем узлы\n    const node = svg.append('g').attr('class', 'nodes').selectAll('circle').data(nodes).enter().append('circle').attr('r', 5).attr('fill', 'blue');\n\n    // Обновляем положение узлов и ребер\n    const simulation = d3.forceSimulation(nodes).force('link', d3.forceLink().id(d => d.id).distance(50).strength(1)).force('charge', d3.forceManyBody().strength(-30)).force('center', d3.forceCenter(300, 200));\n    simulation.on('tick', () => {\n      link.attr('x1', d => d.source.x).attr('y1', d => d.source.y).attr('x2', d => d.target.x).attr('y2', d => d.target.y);\n      node.attr('cx', d => d.x).attr('cy', d => d.y);\n\n      // Отрисовка веса ребер\n      svg.selectAll('.link-weight').remove(); // Удаляем старые веса\n      svg.selectAll('.link-weight').data(links).enter().append('text').attr('class', 'link-weight').attr('x', d => (d.source.x + d.target.x) / 2).attr('y', d => (d.source.y + d.target.y) / 2).attr('text-anchor', 'middle').text(d => d.value);\n    });\n  }, [nodes, links]);\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    ref: svgRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n}\n_s(GraphComponent, \"89Ty783ABEwsfMbSOeu9vscWF34=\");\n_c = GraphComponent;\nexport default GraphComponent;\nvar _c;\n$RefreshReg$(_c, \"GraphComponent\");","map":{"version":3,"names":["d3","jsxDEV","_jsxDEV","GraphComponent","_s","nodes","id","links","source","target","value","svgRef","useRef","useEffect","svg","select","current","attr","selectAll","remove","link","append","data","enter","d","Math","sqrt","node","simulation","forceSimulation","force","forceLink","distance","strength","forceManyBody","forceCenter","on","x","y","text","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Users/admin/Desktop/graph_app/src/components/graph/GraphComponent.jsx"],"sourcesContent":["import { d3 } from \"react-d3-graph\";\r\n\r\nfunction GraphComponent() {\r\n  // const data = {\r\n  //   nodes: [{ id: \"Harry\" }, { id: \"Sally\" }, { id: \"Alice\" }],\r\n  //   links: [\r\n  //     { source: \"Harry\", target: \"Sally\", weight: 5 },\r\n  //     { source: \"Harry\", target: \"Alice\" },\r\n  //     { source: \"Sally\", target: \"Harry\", weight: 5 },\r\n  //   ],\r\n  // };\r\n\r\n  // // the graph configuration, just override the ones you need\r\n  // const myConfig = {\r\n  //   nodeHighlightBehavior: true,\r\n  //   node: {\r\n  //     color: \"black\",\r\n  //     size: 220,\r\n  //     highlightStrokeColor: \"red\",\r\n  //   },\r\n  //   link: {\r\n  //     highlightColor: \"yellow\",\r\n  //     renderLabel: true,\r\n  //     labelProperty: 'weight',\r\n  //   },\r\n  // };\r\n\r\n  // const onClickNode = function (nodeId) {\r\n  //   window.alert(`Clicked node ${nodeId}`);\r\n  // };\r\n\r\n  // const onClickLink = function (source, target) {\r\n  //   window.alert(`Clicked link between ${source} and ${target}`);\r\n  // };\r\n\r\n  // return (\r\n  //   <Graph\r\n  //     id=\"graphId\"\r\n  //     data={data}\r\n  //     config={myConfig}\r\n  //     onClickNode={onClickNode}\r\n  //     onClickLink={onClickLink}\r\n  //   />\r\n  // );\r\n  const nodes = [\r\n    { id: 'A' },\r\n    { id: 'B' },\r\n    { id: 'C' }\r\n  ];\r\n  \r\n  const links = [\r\n    { source: 'A', target: 'B', value: 10 },\r\n    { source: 'B', target: 'C', value: 15 },\r\n    { source: 'C', target: 'A', value: 20 }\r\n  ];\r\n  const svgRef = useRef();\r\n\r\n  useEffect(() => {\r\n    const svg = d3.select(svgRef.current)\r\n      .attr(\"width\", 600)\r\n      .attr(\"height\", 400);\r\n\r\n    // Удаляем старые элементы\r\n    svg.selectAll('*').remove();\r\n\r\n    // Создаем линейный генератор для ребер\r\n    const link = svg.append('g').attr('class', 'links')\r\n      .selectAll('line')\r\n      .data(links)\r\n      .enter().append('line')\r\n      .attr('stroke-width', d => Math.sqrt(d.value));\r\n\r\n    // Создаем узлы\r\n    const node = svg.append('g').attr('class', 'nodes')\r\n      .selectAll('circle')\r\n      .data(nodes)\r\n      .enter().append('circle')\r\n      .attr('r', 5)\r\n      .attr('fill', 'blue');\r\n\r\n    // Обновляем положение узлов и ребер\r\n    const simulation = d3.forceSimulation(nodes)\r\n      .force('link', d3.forceLink().id(d => d.id).distance(50).strength(1))\r\n      .force('charge', d3.forceManyBody().strength(-30))\r\n      .force('center', d3.forceCenter(300, 200));\r\n\r\n    simulation\r\n      .on('tick', () => {\r\n        link\r\n          .attr('x1', d => d.source.x)\r\n          .attr('y1', d => d.source.y)\r\n          .attr('x2', d => d.target.x)\r\n          .attr('y2', d => d.target.y);\r\n\r\n        node\r\n          .attr('cx', d => d.x)\r\n          .attr('cy', d => d.y);\r\n\r\n        // Отрисовка веса ребер\r\n        svg.selectAll('.link-weight').remove(); // Удаляем старые веса\r\n        svg.selectAll('.link-weight')\r\n          .data(links)\r\n          .enter().append('text')\r\n          .attr('class', 'link-weight')\r\n          .attr('x', d => (d.source.x + d.target.x) / 2)\r\n          .attr('y', d => (d.source.y + d.target.y) / 2)\r\n          .attr('text-anchor', 'middle')\r\n          .text(d => d.value);\r\n      });\r\n  }, [nodes, links]);\r\n\r\n  return (\r\n    <svg ref={svgRef}></svg>\r\n  );\r\n}\r\n\r\nexport default GraphComponent;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}