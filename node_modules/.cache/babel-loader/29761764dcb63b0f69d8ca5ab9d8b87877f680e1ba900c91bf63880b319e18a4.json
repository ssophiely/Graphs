{"ast":null,"code":"// отрисовка элементов ------------------------------------------------------------------------\n// рисуем круг\nconst drawCircle = (vert, ctx) => {\n  ctx.beginPath();\n  ctx.arc(vert.x, vert.y, 20, 0, Math.PI * 2);\n  ctx.fillStyle = vert.fillStyle;\n  ctx.lineWidth = 2;\n  ctx.fill();\n  ctx.fillStyle = \"black\";\n  ctx.font = \"bold 16px Serif\";\n  ctx.fillText(vert.label, vert.x - 10, vert.y);\n  ctx.closePath();\n};\n\n// рисуем стрелку\nconst drawArrow = (circle1, circle2, weight, ctx) => {\n  if (weight === 0) {\n    return;\n  }\n  if (circle1 && circle2) {\n    const dx = circle2.x - circle1.x;\n    const dy = circle2.y - circle1.y;\n    const angle = Math.atan2(dy, dx);\n\n    // Позиции конечных точек стрелки\n    const startX = circle1.x + Math.cos(angle) * circle1.radius;\n    const startY = circle1.y + Math.sin(angle) * circle1.radius;\n    const endX = circle2.x - Math.cos(angle) * circle2.radius;\n    const endY = circle2.y - Math.sin(angle) * circle2.radius;\n\n    // Рисуем дугу\n    ctx.beginPath();\n    ctx.strokeStyle = \"grey\";\n    ctx.lineWidth = 1;\n    ctx.moveTo(startX, startY);\n    ctx.quadraticCurveTo((startX + endX) / 2, startY, endX, endY); // искажение для формирования дуги\n    ctx.stroke();\n\n    // Рисуем стрелку\n    const arrowSize = 10;\n    ctx.save();\n    ctx.translate(endX, endY);\n    ctx.rotate(angle);\n    ctx.beginPath();\n    ctx.moveTo(-arrowSize, -arrowSize / 2);\n    ctx.lineTo(0, 0);\n    ctx.lineTo(-arrowSize, arrowSize / 2);\n    ctx.fillStyle = \"grey\";\n    ctx.fill();\n    ctx.restore();\n\n    // текст\n    ctx.font = \"bold 22px Serif\";\n    ctx.fillStyle = \"grey\";\n    const controlX = (startX + endX) / 2;\n    const controlY = startY;\n    const offset = 40;\n    const textX = endX - offset * (endX - controlX) / Math.hypot(endX - controlX, endY - controlY);\n    const textY = endY - offset * (endY - controlY) / Math.hypot(endX - controlX, endY - controlY);\n    ctx.fillText(weight, textX, textY);\n  }\n};\nexport { drawArrow, drawCircle };","map":{"version":3,"names":["drawCircle","vert","ctx","beginPath","arc","x","y","Math","PI","fillStyle","lineWidth","fill","font","fillText","label","closePath","drawArrow","circle1","circle2","weight","dx","dy","angle","atan2","startX","cos","radius","startY","sin","endX","endY","strokeStyle","moveTo","quadraticCurveTo","stroke","arrowSize","save","translate","rotate","lineTo","restore","controlX","controlY","offset","textX","hypot","textY"],"sources":["D:/Users/admin/Desktop/graph_app/src/funcs/drawing.js"],"sourcesContent":["// отрисовка элементов ------------------------------------------------------------------------\r\n// рисуем круг\r\nconst drawCircle = (vert, ctx) => {\r\n  ctx.beginPath();\r\n  ctx.arc(vert.x, vert.y, 20, 0, Math.PI * 2);\r\n  ctx.fillStyle = vert.fillStyle;\r\n  ctx.lineWidth = 2;\r\n  ctx.fill();\r\n\r\n  ctx.fillStyle = \"black\";\r\n  ctx.font = \"bold 16px Serif\";\r\n  ctx.fillText(vert.label, vert.x - 10, vert.y);\r\n  ctx.closePath();\r\n};\r\n\r\n// рисуем стрелку\r\nconst drawArrow = (circle1, circle2, weight, ctx) => {\r\n  if (weight === 0) {\r\n    return;\r\n  }\r\n  if (circle1 && circle2) {\r\n    const dx = circle2.x - circle1.x;\r\n    const dy = circle2.y - circle1.y;\r\n    const angle = Math.atan2(dy, dx);\r\n\r\n    // Позиции конечных точек стрелки\r\n    const startX = circle1.x + Math.cos(angle) * circle1.radius;\r\n    const startY = circle1.y + Math.sin(angle) * circle1.radius;\r\n    const endX = circle2.x - Math.cos(angle) * circle2.radius;\r\n    const endY = circle2.y - Math.sin(angle) * circle2.radius;\r\n\r\n    // Рисуем дугу\r\n    ctx.beginPath();\r\n    ctx.strokeStyle = \"grey\";\r\n    ctx.lineWidth = 1;\r\n    ctx.moveTo(startX, startY);\r\n    ctx.quadraticCurveTo((startX + endX) / 2, startY, endX, endY); // искажение для формирования дуги\r\n    ctx.stroke();\r\n\r\n    // Рисуем стрелку\r\n    const arrowSize = 10;\r\n    ctx.save();\r\n    ctx.translate(endX, endY);\r\n    ctx.rotate(angle);\r\n    ctx.beginPath();\r\n    ctx.moveTo(-arrowSize, -arrowSize / 2);\r\n    ctx.lineTo(0, 0);\r\n    ctx.lineTo(-arrowSize, arrowSize / 2);\r\n    ctx.fillStyle = \"grey\";\r\n    ctx.fill();\r\n    ctx.restore();\r\n\r\n    // текст\r\n    ctx.font = \"bold 22px Serif\";\r\n    ctx.fillStyle = \"grey\";\r\n\r\n    const controlX = (startX + endX) / 2;\r\n    const controlY = startY;\r\n    const offset = 40;\r\n    const textX =\r\n      endX -\r\n      (offset * (endX - controlX)) /\r\n        Math.hypot(endX - controlX, endY - controlY);\r\n    const textY =\r\n      endY -\r\n      (offset * (endY - controlY)) /\r\n        Math.hypot(endX - controlX, endY - controlY);\r\n    ctx.fillText(weight, textX, textY);\r\n  }\r\n};\r\n\r\nexport { drawArrow, drawCircle };\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}