{"ast":null,"code":"// отрисовка элементов ------------------------------------------------------------------------\n// рисуем круг\nconst drawCircle = (vert, ctx) => {\n  ctx.beginPath();\n  ctx.arc(vert.x, vert.y, 20, 0, Math.PI * 2);\n  ctx.fillStyle = vert.fillStyle;\n  ctx.lineWidth = 2;\n  ctx.fill();\n  ctx.fillStyle = \"black\";\n  ctx.font = \"13px Serif\";\n  //   ctx.fillText(vert.label, vert.x , vert.y - vert.radius - 4);\n  ctx.closePath();\n};\n\n// рисуем стрелку\nconst drawArrow = (circle1, circle2, weight, ctx) => {\n  if (weight === 0) {\n    return;\n  }\n  if (circle1 && circle2) {\n    const dx = circle2.x - circle1.x;\n    const dy = circle2.y - circle1.y;\n    const angle = Math.atan2(dy, dx);\n\n    // Позиции конечных точек стрелки\n    const startX = circle1.x + Math.cos(angle) * circle1.radius;\n    const startY = circle1.y + Math.sin(angle) * circle1.radius;\n    const endX = circle2.x - Math.cos(angle) * circle2.radius;\n    const endY = circle2.y - Math.sin(angle) * circle2.radius;\n\n    // Рисуем дугу\n    ctx.beginPath();\n    ctx.strokeStyle = \"grey\";\n    ctx.moveTo(startX, startY);\n    ctx.quadraticCurveTo((startX + endX) / 2, startY, endX, endY); // искажение для формирования дуги\n    ctx.stroke();\n\n    // Рисуем стрелку\n    const arrowSize = 15;\n    ctx.save();\n    ctx.translate(endX, endY);\n    ctx.rotate(angle);\n    ctx.beginPath();\n    ctx.moveTo(-arrowSize, -arrowSize / 2);\n    ctx.lineTo(0, 0);\n    ctx.lineTo(-arrowSize, arrowSize / 2);\n    ctx.fillStyle = \"grey\";\n    ctx.fill();\n    ctx.restore();\n    ctx.font = \"bold 25px Serif\";\n    ctx.fillStyle = \"#FF8C00\";\n    const toX = circle2.x + 100 * Math.cos(angle);\n    const toY = circle2.y + 100 * Math.sin(angle);\n    const midWeightX = (circle1.x + toX) / 2 + (circle1.y - circle2.y) / 10;\n    const midWeightY = (circle1.y + toY) / 2 + (circle2.x - circle1.x) / 10;\n    ctx.fillText(weight, midWeightX, midWeightY);\n  }\n};\nexport { drawArrow, drawCircle };","map":{"version":3,"names":["drawCircle","vert","ctx","beginPath","arc","x","y","Math","PI","fillStyle","lineWidth","fill","font","closePath","drawArrow","circle1","circle2","weight","dx","dy","angle","atan2","startX","cos","radius","startY","sin","endX","endY","strokeStyle","moveTo","quadraticCurveTo","stroke","arrowSize","save","translate","rotate","lineTo","restore","toX","toY","midWeightX","midWeightY","fillText"],"sources":["D:/Users/admin/Desktop/graph_app/src/funcs/drawing.js"],"sourcesContent":["// отрисовка элементов ------------------------------------------------------------------------\r\n// рисуем круг\r\nconst drawCircle = (vert, ctx) => {\r\n  ctx.beginPath();\r\n  ctx.arc(vert.x, vert.y, 20, 0, Math.PI * 2);\r\n  ctx.fillStyle = vert.fillStyle;\r\n  ctx.lineWidth = 2;\r\n  ctx.fill();\r\n\r\n  ctx.fillStyle = \"black\";\r\n  ctx.font = \"13px Serif\";\r\n//   ctx.fillText(vert.label, vert.x , vert.y - vert.radius - 4);\r\n  ctx.closePath();\r\n};\r\n\r\n// рисуем стрелку\r\nconst drawArrow = (circle1, circle2, weight, ctx) => {\r\n  if (weight === 0) {\r\n    return;\r\n  }\r\n  if (circle1 && circle2) {\r\n    const dx = circle2.x - circle1.x;\r\n    const dy = circle2.y - circle1.y;\r\n    const angle = Math.atan2(dy, dx);\r\n\r\n    // Позиции конечных точек стрелки\r\n    const startX = circle1.x + Math.cos(angle) * circle1.radius;\r\n    const startY = circle1.y + Math.sin(angle) * circle1.radius;\r\n    const endX = circle2.x - Math.cos(angle) * circle2.radius;\r\n    const endY = circle2.y - Math.sin(angle) * circle2.radius;\r\n\r\n    // Рисуем дугу\r\n    ctx.beginPath();\r\n    ctx.strokeStyle = \"grey\";\r\n    ctx.moveTo(startX, startY);\r\n    ctx.quadraticCurveTo((startX + endX) / 2, startY, endX, endY); // искажение для формирования дуги\r\n    ctx.stroke();\r\n\r\n    // Рисуем стрелку\r\n    const arrowSize = 15;\r\n    ctx.save();\r\n    ctx.translate(endX, endY);\r\n    ctx.rotate(angle);\r\n    ctx.beginPath();\r\n    ctx.moveTo(-arrowSize, -arrowSize / 2);\r\n    ctx.lineTo(0, 0);\r\n    ctx.lineTo(-arrowSize, arrowSize / 2);\r\n    ctx.fillStyle = \"grey\";\r\n    ctx.fill();\r\n    ctx.restore();\r\n\r\n    ctx.font = \"bold 25px Serif\";\r\n    ctx.fillStyle = \"#FF8C00\";\r\n\r\n    const toX = circle2.x + 100 * Math.cos(angle);\r\n    const toY = circle2.y + 100 * Math.sin(angle);\r\n    const midWeightX = (circle1.x + toX) / 2 + (circle1.y - circle2.y) / 10;\r\n    const midWeightY = (circle1.y + toY) / 2 + (circle2.x - circle1.x) / 10;\r\n    ctx.fillText(weight, midWeightX, midWeightY);\r\n  }\r\n};\r\n\r\nexport {drawArrow, drawCircle}"],"mappings":"AAAA;AACA;AACA,MAAMA,UAAU,GAAGA,CAACC,IAAI,EAAEC,GAAG,KAAK;EAChCA,GAAG,CAACC,SAAS,CAAC,CAAC;EACfD,GAAG,CAACE,GAAG,CAACH,IAAI,CAACI,CAAC,EAAEJ,IAAI,CAACK,CAAC,EAAE,EAAE,EAAE,CAAC,EAAEC,IAAI,CAACC,EAAE,GAAG,CAAC,CAAC;EAC3CN,GAAG,CAACO,SAAS,GAAGR,IAAI,CAACQ,SAAS;EAC9BP,GAAG,CAACQ,SAAS,GAAG,CAAC;EACjBR,GAAG,CAACS,IAAI,CAAC,CAAC;EAEVT,GAAG,CAACO,SAAS,GAAG,OAAO;EACvBP,GAAG,CAACU,IAAI,GAAG,YAAY;EACzB;EACEV,GAAG,CAACW,SAAS,CAAC,CAAC;AACjB,CAAC;;AAED;AACA,MAAMC,SAAS,GAAGA,CAACC,OAAO,EAAEC,OAAO,EAAEC,MAAM,EAAEf,GAAG,KAAK;EACnD,IAAIe,MAAM,KAAK,CAAC,EAAE;IAChB;EACF;EACA,IAAIF,OAAO,IAAIC,OAAO,EAAE;IACtB,MAAME,EAAE,GAAGF,OAAO,CAACX,CAAC,GAAGU,OAAO,CAACV,CAAC;IAChC,MAAMc,EAAE,GAAGH,OAAO,CAACV,CAAC,GAAGS,OAAO,CAACT,CAAC;IAChC,MAAMc,KAAK,GAAGb,IAAI,CAACc,KAAK,CAACF,EAAE,EAAED,EAAE,CAAC;;IAEhC;IACA,MAAMI,MAAM,GAAGP,OAAO,CAACV,CAAC,GAAGE,IAAI,CAACgB,GAAG,CAACH,KAAK,CAAC,GAAGL,OAAO,CAACS,MAAM;IAC3D,MAAMC,MAAM,GAAGV,OAAO,CAACT,CAAC,GAAGC,IAAI,CAACmB,GAAG,CAACN,KAAK,CAAC,GAAGL,OAAO,CAACS,MAAM;IAC3D,MAAMG,IAAI,GAAGX,OAAO,CAACX,CAAC,GAAGE,IAAI,CAACgB,GAAG,CAACH,KAAK,CAAC,GAAGJ,OAAO,CAACQ,MAAM;IACzD,MAAMI,IAAI,GAAGZ,OAAO,CAACV,CAAC,GAAGC,IAAI,CAACmB,GAAG,CAACN,KAAK,CAAC,GAAGJ,OAAO,CAACQ,MAAM;;IAEzD;IACAtB,GAAG,CAACC,SAAS,CAAC,CAAC;IACfD,GAAG,CAAC2B,WAAW,GAAG,MAAM;IACxB3B,GAAG,CAAC4B,MAAM,CAACR,MAAM,EAAEG,MAAM,CAAC;IAC1BvB,GAAG,CAAC6B,gBAAgB,CAAC,CAACT,MAAM,GAAGK,IAAI,IAAI,CAAC,EAAEF,MAAM,EAAEE,IAAI,EAAEC,IAAI,CAAC,CAAC,CAAC;IAC/D1B,GAAG,CAAC8B,MAAM,CAAC,CAAC;;IAEZ;IACA,MAAMC,SAAS,GAAG,EAAE;IACpB/B,GAAG,CAACgC,IAAI,CAAC,CAAC;IACVhC,GAAG,CAACiC,SAAS,CAACR,IAAI,EAAEC,IAAI,CAAC;IACzB1B,GAAG,CAACkC,MAAM,CAAChB,KAAK,CAAC;IACjBlB,GAAG,CAACC,SAAS,CAAC,CAAC;IACfD,GAAG,CAAC4B,MAAM,CAAC,CAACG,SAAS,EAAE,CAACA,SAAS,GAAG,CAAC,CAAC;IACtC/B,GAAG,CAACmC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;IAChBnC,GAAG,CAACmC,MAAM,CAAC,CAACJ,SAAS,EAAEA,SAAS,GAAG,CAAC,CAAC;IACrC/B,GAAG,CAACO,SAAS,GAAG,MAAM;IACtBP,GAAG,CAACS,IAAI,CAAC,CAAC;IACVT,GAAG,CAACoC,OAAO,CAAC,CAAC;IAEbpC,GAAG,CAACU,IAAI,GAAG,iBAAiB;IAC5BV,GAAG,CAACO,SAAS,GAAG,SAAS;IAEzB,MAAM8B,GAAG,GAAGvB,OAAO,CAACX,CAAC,GAAG,GAAG,GAAGE,IAAI,CAACgB,GAAG,CAACH,KAAK,CAAC;IAC7C,MAAMoB,GAAG,GAAGxB,OAAO,CAACV,CAAC,GAAG,GAAG,GAAGC,IAAI,CAACmB,GAAG,CAACN,KAAK,CAAC;IAC7C,MAAMqB,UAAU,GAAG,CAAC1B,OAAO,CAACV,CAAC,GAAGkC,GAAG,IAAI,CAAC,GAAG,CAACxB,OAAO,CAACT,CAAC,GAAGU,OAAO,CAACV,CAAC,IAAI,EAAE;IACvE,MAAMoC,UAAU,GAAG,CAAC3B,OAAO,CAACT,CAAC,GAAGkC,GAAG,IAAI,CAAC,GAAG,CAACxB,OAAO,CAACX,CAAC,GAAGU,OAAO,CAACV,CAAC,IAAI,EAAE;IACvEH,GAAG,CAACyC,QAAQ,CAAC1B,MAAM,EAAEwB,UAAU,EAAEC,UAAU,CAAC;EAC9C;AACF,CAAC;AAED,SAAQ5B,SAAS,EAAEd,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}