{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\admin\\\\Desktop\\\\graph_app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport GraphComponent from \"./components/graph/GraphComponent.jsx\";\nimport Tools from \"./components/Tools.jsx\";\nimport ExportImportComponent from \"./components/ExportImportComponent.jsx\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [vertexCount, setVertexCount] = useState(5);\n  const [rowHeaders, setRowHeaders] = useState(Array.from({\n    length: vertexCount\n  }, () => \"\"));\n  const [data, setData] = useState([...Array(vertexCount)].map(e => Array(vertexCount).fill(\"\")));\n  const [start, setStart] = useState(\"\");\n  const [end, setEnd] = useState(\"\");\n  function handleStartChange(e) {\n    console(e.target);\n    setStart(e.target.value);\n  }\n  function handleEndChange(e) {\n    setEnd(e.target.value);\n  }\n  const [deleted, setDeleted] = useState(null);\n  const [inserted, setInserted] = useState(null);\n  const [path, setPath] = useState(null);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ExportImportComponent, {\n      headers: rowHeaders,\n      data: data,\n      start: start,\n      end: end,\n      setHeaders: setRowHeaders,\n      setData: setData,\n      setStart: setStart,\n      setEnd: setEnd\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(GraphComponent, {\n        headers: rowHeaders,\n        setHeaders: setRowHeaders,\n        inpData: data,\n        setInpData: setData,\n        start: start,\n        end: end,\n        setStart: setStart,\n        setEnd: setEnd,\n        setDeleted: setDeleted,\n        setInserted: setInserted,\n        path: path,\n        setPath: setPath\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tools, {\n        vertexCount: vertexCount,\n        rowHeaders: rowHeaders,\n        data: data,\n        setRowHeaders: setRowHeaders,\n        setVertexCount: setVertexCount,\n        setData: setData,\n        start: start,\n        end: end,\n        startOnChange: handleStartChange,\n        endOnChange: handleEndChange,\n        deleted: deleted,\n        inserted: inserted,\n        setPath: setPath\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"/0T8dGcNHu7fsm378znIxKSJloA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","GraphComponent","Tools","ExportImportComponent","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","vertexCount","setVertexCount","rowHeaders","setRowHeaders","Array","from","length","data","setData","map","e","fill","start","setStart","end","setEnd","handleStartChange","console","target","value","handleEndChange","deleted","setDeleted","inserted","setInserted","path","setPath","children","headers","setHeaders","fileName","_jsxFileName","lineNumber","columnNumber","className","inpData","setInpData","startOnChange","endOnChange","_c","$RefreshReg$"],"sources":["D:/Users/admin/Desktop/graph_app/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport GraphComponent from \"./components/graph/GraphComponent.jsx\";\r\nimport Tools from \"./components/Tools.jsx\";\r\nimport ExportImportComponent from \"./components/ExportImportComponent.jsx\";\r\n\r\nfunction App() {\r\n  const [vertexCount, setVertexCount] = useState(5);\r\n  const [rowHeaders, setRowHeaders] = useState(\r\n    Array.from({ length: vertexCount }, () => \"\")\r\n  );\r\n  const [data, setData] = useState(\r\n    [...Array(vertexCount)].map((e) => Array(vertexCount).fill(\"\"))\r\n  );\r\n\r\n  const [start, setStart] = useState(\"\");\r\n  const [end, setEnd] = useState(\"\");\r\n  function handleStartChange(e) {\r\n    console(e.target)\r\n    setStart(e.target.value);\r\n  }\r\n  function handleEndChange(e) {\r\n    setEnd(e.target.value);\r\n  }\r\n\r\n  const [deleted, setDeleted] = useState(null);\r\n  const [inserted, setInserted] = useState(null);\r\n\r\n  const [path, setPath] = useState(null);\r\n\r\n  return (\r\n    <>\r\n      <ExportImportComponent\r\n        headers={rowHeaders}\r\n        data={data}\r\n        start={start}\r\n        end={end}\r\n        setHeaders={setRowHeaders}\r\n        setData={setData}\r\n        setStart={setStart}\r\n        setEnd={setEnd}\r\n      />\r\n      <div className=\"container\">\r\n        <GraphComponent\r\n          headers={rowHeaders}\r\n          setHeaders={setRowHeaders}\r\n          inpData={data}\r\n          setInpData={setData}\r\n          start={start}\r\n          end={end}\r\n          setStart={setStart}\r\n          setEnd={setEnd}\r\n          setDeleted={setDeleted}\r\n          setInserted={setInserted}\r\n          path={path}\r\n          setPath={setPath}\r\n        />\r\n        <Tools\r\n          vertexCount={vertexCount}\r\n          rowHeaders={rowHeaders}\r\n          data={data}\r\n          setRowHeaders={setRowHeaders}\r\n          setVertexCount={setVertexCount}\r\n          setData={setData}\r\n          start={start}\r\n          end={end}\r\n          startOnChange={handleStartChange}\r\n          endOnChange={handleEndChange}\r\n          deleted={deleted}\r\n          inserted={inserted}\r\n          setPath={setPath}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}