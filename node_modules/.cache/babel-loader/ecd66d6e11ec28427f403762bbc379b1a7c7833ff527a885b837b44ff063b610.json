{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\admin\\\\Desktop\\\\graph_app\\\\src\\\\components\\\\graph\\\\GraphComponent.jsx\",\n  _s = $RefreshSig$();\n// import { Graph } from \"react-d3-graph\";\n\n// function GraphComponent() {\n//   const data = {\n//     nodes: [{ id: \"Harry\" }, { id: \"Sally\" }, { id: \"Alice\" }],\n//     links: [\n//       { source: \"Harry\", target: \"Sally\", weight: 5 , ma},\n//       { source: \"Harry\", target: \"Alice\" },\n//       { source: \"Sally\", target: \"Harry\", weight: 5 },\n//     ],\n//   };\n\n//   // the graph configuration, just override the ones you need\n//   const myConfig = {\n//     nodeHighlightBehavior: true,\n//     node: {\n//       color: \"black\",\n//       size: 220,\n//       highlightStrokeColor: \"red\",\n//     },\n//     link: {\n//       highlightColor: \"yellow\",\n//       renderLabel: true,\n//       labelProperty: \"weight\",\n//       markerHeight: 5,\n//       markerWidth: 3,\n//       type: \"CURVE_SMOOTH\"\n//     },\n//   };\n\n//   const onClickNode = function (nodeId) {\n//     window.alert(`Clicked node ${nodeId}`);\n//   };\n\n//   const onClickLink = function (source, target) {\n//     window.alert(`Clicked link between ${source} and ${target}`);\n//   };\n\n//   return (\n//     <Graph\n//       id=\"graphId\"\n//       data={data}\n//       config={myConfig}\n//       onClickNode={onClickNode}\n//       onClickLink={onClickLink}\n//     />\n//   );\n// }\n\n// export default GraphComponent;\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default Graph = _s(() => {\n  _s();\n  const [nodes, setNodes] = useState([{\n    id: 'A',\n    x: 50,\n    y: 50\n  }, {\n    id: 'B',\n    x: 150,\n    y: 150\n  }, {\n    id: 'C',\n    x: 250,\n    y: 50\n  }]);\n  const [edges, setEdges] = useState([{\n    from: 'A',\n    to: 'B',\n    weight: 1\n  }, {\n    from: 'A',\n    to: 'C',\n    weight: 2\n  }, {\n    from: 'B',\n    to: 'C',\n    weight: 1\n  }]);\n  const renderEdges = () => {\n    return edges.map((edge, index) => {\n      const fromNode = nodes.find(node => node.id === edge.from);\n      const toNode = nodes.find(node => node.id === edge.to);\n      return /*#__PURE__*/_jsxDEV(\"line\", {\n        x1: fromNode.x,\n        y1: fromNode.y,\n        x2: toNode.x,\n        y2: toNode.y,\n        stroke: \"black\",\n        strokeWidth: \"2\"\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this);\n    });\n  };\n  const renderNodes = () => {\n    return nodes.map(node => /*#__PURE__*/_jsxDEV(\"g\", {\n      children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n        cx: node.x,\n        cy: node.y,\n        r: \"20\",\n        fill: \"lightblue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n        x: node.x,\n        y: node.y,\n        textAnchor: \"middle\",\n        fill: \"black\",\n        dy: \".35em\",\n        children: node.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, node.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    width: \"400\",\n    height: \"200\",\n    children: [renderEdges(), renderNodes(), edges.map((edge, index) => {\n      const fromNode = nodes.find(node => node.id === edge.from);\n      const toNode = nodes.find(node => node.id === edge.to);\n      const midX = (fromNode.x + toNode.x) / 2;\n      const midY = (fromNode.y + toNode.y) / 2;\n      return /*#__PURE__*/_jsxDEV(\"text\", {\n        x: midX,\n        y: midY,\n        fill: \"red\",\n        fontSize: \"12\",\n        textAnchor: \"middle\",\n        children: edge.weight\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}, \"FsWnR4YlyvAT+P4yWKFxtc0m0Xc=\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","Graph","_s","nodes","setNodes","id","x","y","edges","setEdges","from","to","weight","renderEdges","map","edge","index","fromNode","find","node","toNode","x1","y1","x2","y2","stroke","strokeWidth","fileName","_jsxFileName","lineNumber","columnNumber","renderNodes","children","cx","cy","r","fill","textAnchor","dy","width","height","midX","midY","fontSize"],"sources":["D:/Users/admin/Desktop/graph_app/src/components/graph/GraphComponent.jsx"],"sourcesContent":["// import { Graph } from \"react-d3-graph\";\r\n\r\n// function GraphComponent() {\r\n//   const data = {\r\n//     nodes: [{ id: \"Harry\" }, { id: \"Sally\" }, { id: \"Alice\" }],\r\n//     links: [\r\n//       { source: \"Harry\", target: \"Sally\", weight: 5 , ma},\r\n//       { source: \"Harry\", target: \"Alice\" },\r\n//       { source: \"Sally\", target: \"Harry\", weight: 5 },\r\n//     ],\r\n//   };\r\n\r\n//   // the graph configuration, just override the ones you need\r\n//   const myConfig = {\r\n//     nodeHighlightBehavior: true,\r\n//     node: {\r\n//       color: \"black\",\r\n//       size: 220,\r\n//       highlightStrokeColor: \"red\",\r\n//     },\r\n//     link: {\r\n//       highlightColor: \"yellow\",\r\n//       renderLabel: true,\r\n//       labelProperty: \"weight\",\r\n//       markerHeight: 5,\r\n//       markerWidth: 3,\r\n//       type: \"CURVE_SMOOTH\"\r\n//     },\r\n//   };\r\n\r\n//   const onClickNode = function (nodeId) {\r\n//     window.alert(`Clicked node ${nodeId}`);\r\n//   };\r\n\r\n//   const onClickLink = function (source, target) {\r\n//     window.alert(`Clicked link between ${source} and ${target}`);\r\n//   };\r\n\r\n//   return (\r\n//     <Graph\r\n//       id=\"graphId\"\r\n//       data={data}\r\n//       config={myConfig}\r\n//       onClickNode={onClickNode}\r\n//       onClickLink={onClickLink}\r\n//     />\r\n//   );\r\n// }\r\n\r\n// export default GraphComponent;\r\n\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nexport default Graph = () => {\r\n  const [nodes, setNodes] = useState([\r\n    { id: 'A', x: 50, y: 50 },\r\n    { id: 'B', x: 150, y: 150 },\r\n    { id: 'C', x: 250, y: 50 },\r\n  ]);\r\n\r\n  const [edges, setEdges] = useState([\r\n    { from: 'A', to: 'B', weight: 1 },\r\n    { from: 'A', to: 'C', weight: 2 },\r\n    { from: 'B', to: 'C', weight: 1 },\r\n  ]);\r\n\r\n  const renderEdges = () => {\r\n    return edges.map((edge, index) => {\r\n      const fromNode = nodes.find(node => node.id === edge.from);\r\n      const toNode = nodes.find(node => node.id === edge.to);\r\n\r\n      return (\r\n        <line\r\n          key={index}\r\n          x1={fromNode.x}\r\n          y1={fromNode.y}\r\n          x2={toNode.x}\r\n          y2={toNode.y}\r\n          stroke=\"black\"\r\n          strokeWidth=\"2\"\r\n        />\r\n      );\r\n    });\r\n  };\r\n\r\n  const renderNodes = () => {\r\n    return nodes.map((node) => (\r\n      <g key={node.id}>\r\n        <circle cx={node.x} cy={node.y} r=\"20\" fill=\"lightblue\" />\r\n        <text x={node.x} y={node.y} textAnchor=\"middle\" fill=\"black\" dy=\".35em\">\r\n          {node.id}\r\n        </text>\r\n      </g>\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <svg width=\"400\" height=\"200\">\r\n      {renderEdges()}\r\n      {renderNodes()}\r\n      {edges.map((edge, index) => {\r\n        const fromNode = nodes.find(node => node.id === edge.from);\r\n        const toNode = nodes.find(node => node.id === edge.to);\r\n        \r\n        const midX = (fromNode.x + toNode.x) / 2;\r\n        const midY = (fromNode.y + toNode.y) / 2;\r\n\r\n        return (\r\n          <text key={index} x={midX} y={midY} fill=\"red\" fontSize=\"12\" textAnchor=\"middle\">\r\n            {edge.weight}\r\n          </text>\r\n        );\r\n      })}\r\n    </svg>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}