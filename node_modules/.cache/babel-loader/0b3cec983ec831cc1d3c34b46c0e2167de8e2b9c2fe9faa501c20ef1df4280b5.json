{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\admin\\\\Desktop\\\\graph_app\\\\src\\\\components\\\\graph_info\\\\MatrixComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport Matrix from \"./Matrix.jsx\";\nimport Header from \"./Header.jsx\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function MatrixComponent({\n  rowHeaders,\n  setRowHeaders,\n  data,\n  setData,\n  vertexCount,\n  setVertexCount,\n  inserted,\n  deleted\n}) {\n  _s();\n  const input = useRef();\n  const [columnHeaders, setColumnHeaders] = useState(Array.from({\n    length: vertexCount\n  }, () => \"\"));\n  useEffect(() => {\n    setColumnHeaders(rowHeaders);\n  }, [rowHeaders]);\n  useEffect(() => {\n    if (deleted) handleDelete(deleted);\n  }, [deleted]);\n  useEffect(() => {\n    if (inserted) handleInsert(inserted);\n  }, [inserted]);\n  function handleBlur() {\n    const set = new Set();\n    let newHeaders = rowHeaders.map(item => {\n      if (set.has(item)) {\n        return \"\";\n      } else {\n        set.add(item);\n        return item;\n      }\n    });\n    setRowHeaders(newHeaders);\n    setColumnHeaders(newHeaders);\n  }\n\n  // Обработчик изменения значения в ячейке\n  const handleChange = (rowIndex, colIndex, value) => {\n    const newData = data.map((row, rIdx) => {\n      if (rIdx === rowIndex) {\n        const newRow = [...row];\n        newRow[colIndex] = value;\n        return newRow;\n      }\n      return row;\n    });\n    setData(newData);\n  };\n  function handleClick() {\n    let value = input.current.value;\n    value = value < 2 ? 2 : value;\n    value = value > 10 ? 10 : value;\n    setVertexCount(value);\n    setColumnHeaders(Array.from({\n      length: value\n    }, () => \"\"));\n    setRowHeaders(Array.from({\n      length: value\n    }, () => \"\"));\n    setData(Array.from({\n      length: value\n    }, () => Array.from({\n      length: value\n    }, () => \"\")));\n    input.current.value = value;\n  }\n  function handleDelete(i) {\n    const newRows = rowHeaders.filter(v => v !== rowHeaders[i]);\n    setRowHeaders(newRows);\n    const newCols = columnHeaders.filter(v => v !== columnHeaders[i]);\n    setColumnHeaders(newCols);\n    let newData = data.map(innerArray => innerArray.slice());\n    newData.splice(i, 1);\n    for (let j = 0; j < newData.length; j++) {\n      newData[j].splice(i, 1);\n    }\n    setData(newData);\n  }\n  function handleInsert(i, h) {\n    h = h === null ? \"\" : h;\n    const newRows = rowHeaders.slice();\n    newRows.splice(i + 1, 0, h);\n    setRowHeaders(newRows);\n    const newCols = [...columnHeaders];\n    newCols.splice(i + 1, 0, h);\n    setColumnHeaders(newCols);\n    let newData = [...data];\n    newData.splice(i + 1, 0, Array.from({\n      length: columnHeaders.length\n    }, () => \"\"));\n    for (let j = 0; j < newData.length; j++) {\n      newData[j].splice(i + 1, 0, \"\");\n    }\n    setData(newData);\n  }\n  function handleInput(value, index) {\n    const newHeaders = rowHeaders.slice();\n    newHeaders[index] = value;\n    setRowHeaders(newHeaders);\n    setColumnHeaders(newHeaders);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      input: input,\n      vertexCount: vertexCount,\n      onClickHandler: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      className: \"hr\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Matrix, {\n      columnHeaders: columnHeaders,\n      rowHeaders: rowHeaders,\n      data: data,\n      onChange: handleChange,\n      onInput: handleInput,\n      onDelete: handleDelete,\n      onInsert: handleInsert,\n      onBlurFunc: handleBlur\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(MatrixComponent, \"IKV4NFFe5/QF1VcUPuvZrmJDW3g=\");\n_c = MatrixComponent;\nvar _c;\n$RefreshReg$(_c, \"MatrixComponent\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Matrix","Header","jsxDEV","_jsxDEV","Fragment","_Fragment","MatrixComponent","rowHeaders","setRowHeaders","data","setData","vertexCount","setVertexCount","inserted","deleted","_s","input","columnHeaders","setColumnHeaders","Array","from","length","handleDelete","handleInsert","handleBlur","set","Set","newHeaders","map","item","has","add","handleChange","rowIndex","colIndex","value","newData","row","rIdx","newRow","handleClick","current","i","newRows","filter","v","newCols","innerArray","slice","splice","j","h","handleInput","index","children","onClickHandler","fileName","_jsxFileName","lineNumber","columnNumber","className","onChange","onInput","onDelete","onInsert","onBlurFunc","_c","$RefreshReg$"],"sources":["D:/Users/admin/Desktop/graph_app/src/components/graph_info/MatrixComponent.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport Matrix from \"./Matrix.jsx\";\r\nimport Header from \"./Header.jsx\";\r\n\r\nexport default function MatrixComponent({\r\n  rowHeaders,\r\n  setRowHeaders,\r\n  data,\r\n  setData,\r\n  vertexCount,\r\n  setVertexCount,\r\n  inserted,\r\n  deleted,\r\n}) {\r\n  const input = useRef();\r\n\r\n  const [columnHeaders, setColumnHeaders] = useState(\r\n    Array.from({ length: vertexCount }, () => \"\")\r\n  );\r\n\r\n  useEffect(() => {\r\n    setColumnHeaders(rowHeaders);\r\n  }, [rowHeaders]);\r\n\r\n  useEffect(() => {\r\n    if (deleted) handleDelete(deleted);\r\n  }, [deleted]);\r\n\r\n  useEffect(() => {\r\n    if (inserted) handleInsert(inserted);\r\n  }, [inserted]);\r\n\r\n  function handleBlur() {\r\n    const set = new Set();\r\n    let newHeaders = rowHeaders.map((item) => {\r\n      if (set.has(item)) {\r\n        return \"\";\r\n      } else {\r\n        set.add(item);\r\n        return item;\r\n      }\r\n    });\r\n    setRowHeaders(newHeaders);\r\n    setColumnHeaders(newHeaders);\r\n  }\r\n\r\n  // Обработчик изменения значения в ячейке\r\n  const handleChange = (rowIndex, colIndex, value) => {\r\n    const newData = data.map((row, rIdx) => {\r\n      if (rIdx === rowIndex) {\r\n        const newRow = [...row];\r\n        newRow[colIndex] = value;\r\n        return newRow;\r\n      }\r\n      return row;\r\n    });\r\n    setData(newData);\r\n  };\r\n\r\n  function handleClick() {\r\n    let value = input.current.value;\r\n    value = value < 2 ? 2 : value;\r\n    value = value > 10 ? 10 : value;\r\n\r\n    setVertexCount(value);\r\n    setColumnHeaders(Array.from({ length: value }, () => \"\"));\r\n    setRowHeaders(Array.from({ length: value }, () => \"\"));\r\n    setData(\r\n      Array.from({ length: value }, () =>\r\n        Array.from({ length: value }, () => \"\")\r\n      )\r\n    );\r\n\r\n    input.current.value = value;\r\n  }\r\n\r\n  function handleDelete(i) {\r\n    const newRows = rowHeaders.filter((v) => v !== rowHeaders[i]);\r\n    setRowHeaders(newRows);\r\n\r\n    const newCols = columnHeaders.filter((v) => v !== columnHeaders[i]);\r\n    setColumnHeaders(newCols);\r\n\r\n    let newData = data.map((innerArray) => innerArray.slice());\r\n    newData.splice(i, 1);\r\n    for (let j = 0; j < newData.length; j++) {\r\n      newData[j].splice(i, 1);\r\n    }\r\n    setData(newData);\r\n  }\r\n\r\n  function handleInsert(i, h) {\r\n    h = h === null ? \"\" : h;\r\n    const newRows = rowHeaders.slice();\r\n    newRows.splice(i + 1, 0, h);\r\n    setRowHeaders(newRows);\r\n\r\n    const newCols = [...columnHeaders];\r\n    newCols.splice(i + 1, 0, h);\r\n    setColumnHeaders(newCols);\r\n\r\n    let newData = [...data];\r\n    newData.splice(\r\n      i + 1,\r\n      0,\r\n      Array.from({ length: columnHeaders.length }, () => \"\")\r\n    );\r\n\r\n    for (let j = 0; j < newData.length; j++) {\r\n      newData[j].splice(i + 1, 0, \"\");\r\n    }\r\n    setData(newData);\r\n  }\r\n\r\n  function handleInput(value, index) {\r\n    const newHeaders = rowHeaders.slice();\r\n    newHeaders[index] = value;\r\n    setRowHeaders(newHeaders);\r\n    setColumnHeaders(newHeaders);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header\r\n        input={input}\r\n        vertexCount={vertexCount}\r\n        onClickHandler={handleClick}\r\n      />\r\n      <hr className=\"hr\" />\r\n      <Matrix\r\n        columnHeaders={columnHeaders}\r\n        rowHeaders={rowHeaders}\r\n        data={data}\r\n        onChange={handleChange}\r\n        onInput={handleInput}\r\n        onDelete={handleDelete}\r\n        onInsert={handleInsert}\r\n        onBlurFunc={handleBlur}\r\n      />\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}