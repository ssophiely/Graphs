{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\admin\\\\Desktop\\\\graph_app\\\\src\\\\components\\\\graph\\\\GraphComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { generateCoordinates } from \"../../funcs/generateCoords\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function GraphComponent({\n  headers,\n  data\n}) {\n  _s();\n  const canvasRef = useRef(null);\n  const [isDragging, setIsDragging] = useState(false);\n  const [selectedVertex, setSelectedVertex] = useState(null);\n  const [vertexes, setVertexes] = useState([]);\n  const [offset, setOffset] = useState({\n    x: 0,\n    y: 0\n  });\n  const drawCircle = (vert, ctx) => {\n    ctx.beginPath();\n    ctx.arc(vert.x, vert.y, 20, 0, Math.PI * 2); // придумать расположение\n    ctx.fillStyle = \"blue\";\n    ctx.lineWidth = 2;\n    ctx.fill();\n    ctx.fillStyle = \"black\";\n    ctx.font = \"13px Serif\";\n    ctx.fillText(ver.label, vert.x, vert.y - vert.radius - 4);\n    ctx.closePath();\n  };\n  useEffect(() => {\n    let newVertexes = headers.filter(h => {\n      var list = vertexes.map(e => e.label);\n      return !list.includes(h);\n    }).map(e => {\n      let [xc, yc] = generateCoordinates(canvasRef.current, vertexes);\n      return {\n        label: e,\n        x: xc,\n        y: yc,\n        radius: 20\n      };\n    });\n    setVertexes(vertexes.concat(newVertexes));\n  }, [headers, data]);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    vertexes.forEach(item => {\n      drawCircle(item, ctx);\n    });\n  }, [vertexes]);\n  const handleMouseUp = () => {\n    setIsDragging(false);\n    setSelectedVertex(null);\n  };\n  const handleMouseDown = e => {\n    const mousePos = getMousePos(canvasRef.current, e);\n    console.log(mousePos, vertexes);\n    const clickedCircle = vertexes.find(circle => {\n      return (mousePos.x - circle.x) ** 2 + (mousePos.y - circle.y) ** 2 <= circle.radius ** 2;\n    });\n    console.log(clickedCircle);\n    if (clickedCircle) {\n      setIsDragging(true);\n      setSelectedVertex(clickedCircle);\n      setOffset({\n        x: mousePos.x - clickedCircle.x,\n        y: mousePos.y - clickedCircle.y\n      });\n    }\n  };\n  const handleMouseMove = e => {\n    if (isDragging && selectedVertex) {\n      const mousePos = getMousePos(canvasRef.current, e);\n      const newCircles = vertexes.map(circle => {\n        if (circle.label === selectedVertex.label) {\n          const newX = mousePos.x - offset.x;\n          const newY = mousePos.y - offset.y;\n          // Проверка границ\n          const radius = circle.radius;\n          if (newX - radius < 0) return {\n            ...circle,\n            x: radius\n          };\n          if (newY - radius < 0) return {\n            ...circle,\n            y: radius\n          };\n          if (newX + radius > canvasRef.current.width) return {\n            ...circle,\n            x: canvasRef.current.width - radius\n          };\n          if (newY + radius > canvasRef.current.height) return {\n            ...circle,\n            y: canvasRef.current.height - radius\n          };\n          return {\n            ...circle,\n            x: newX,\n            y: newY\n          };\n        }\n        return circle;\n      });\n      setVertexes(newCircles);\n    }\n  };\n  const getMousePos = (canvas, evt) => {\n    const rect = canvas.getBoundingClientRect();\n    return {\n      x: evt.clientX - rect.left,\n      y: evt.clientY - rect.top\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    width: \"800\",\n    height: \"600\",\n    onMouseDown: handleMouseDown,\n    onMouseMove: handleMouseMove,\n    onMouseUp: handleMouseUp\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n}\n_s(GraphComponent, \"VO8wGvqOYaA8dIlnFflrC6Yy6Lw=\");\n_c = GraphComponent;\nvar _c;\n$RefreshReg$(_c, \"GraphComponent\");","map":{"version":3,"names":["React","useEffect","useRef","useState","generateCoordinates","jsxDEV","_jsxDEV","GraphComponent","headers","data","_s","canvasRef","isDragging","setIsDragging","selectedVertex","setSelectedVertex","vertexes","setVertexes","offset","setOffset","x","y","drawCircle","vert","ctx","beginPath","arc","Math","PI","fillStyle","lineWidth","fill","font","fillText","ver","label","radius","closePath","newVertexes","filter","h","list","map","e","includes","xc","yc","current","concat","canvas","getContext","clearRect","width","height","forEach","item","handleMouseUp","handleMouseDown","mousePos","getMousePos","console","log","clickedCircle","find","circle","handleMouseMove","newCircles","newX","newY","evt","rect","getBoundingClientRect","clientX","left","clientY","top","ref","onMouseDown","onMouseMove","onMouseUp","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Users/admin/Desktop/graph_app/src/components/graph/GraphComponent.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport { generateCoordinates } from \"../../funcs/generateCoords\";\r\n\r\nexport default function GraphComponent({ headers, data }) {\r\n  const canvasRef = useRef(null);\r\n\r\n  const [isDragging, setIsDragging] = useState(false);\r\n  const [selectedVertex, setSelectedVertex] = useState(null);\r\n  const [vertexes, setVertexes] = useState([]);\r\n  const [offset, setOffset] = useState({ x: 0, y: 0 });\r\n\r\n  const drawCircle = (vert, ctx) => {\r\n    ctx.beginPath();\r\n    ctx.arc(vert.x, vert.y, 20, 0, Math.PI * 2); // придумать расположение\r\n    ctx.fillStyle = \"blue\";\r\n    ctx.lineWidth = 2;\r\n    ctx.fill();\r\n\r\n    ctx.fillStyle = \"black\";\r\n    ctx.font = \"13px Serif\";\r\n    ctx.fillText(ver.label, vert.x, vert.y - vert.radius-4);\r\n    ctx.closePath();\r\n  };\r\n\r\n  useEffect(() => {\r\n    let newVertexes = headers\r\n      .filter((h) => {\r\n        var list = vertexes.map((e) => e.label);\r\n        return !list.includes(h);\r\n      })\r\n      .map((e) => {\r\n        let [xc, yc] = generateCoordinates(canvasRef.current, vertexes);\r\n        return {\r\n          label: e,\r\n          x: xc,\r\n          y: yc,\r\n          radius: 20,\r\n        };\r\n      });\r\n    setVertexes(vertexes.concat(newVertexes));\r\n  }, [headers, data]);\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext(\"2d\");\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n    vertexes.forEach((item) => {\r\n      drawCircle(item, ctx);\r\n    });\r\n  }, [vertexes]);\r\n\r\n  const handleMouseUp = () => {\r\n    setIsDragging(false);\r\n    setSelectedVertex(null);\r\n  };\r\n\r\n  const handleMouseDown = (e) => {\r\n    const mousePos = getMousePos(canvasRef.current, e);\r\n    console.log(mousePos, vertexes);\r\n    const clickedCircle = vertexes.find((circle) => {\r\n      return (\r\n        (mousePos.x - circle.x) ** 2 + (mousePos.y - circle.y) ** 2 <=\r\n        circle.radius ** 2\r\n      );\r\n    });\r\n    console.log(clickedCircle);\r\n    if (clickedCircle) {\r\n      setIsDragging(true);\r\n      setSelectedVertex(clickedCircle);\r\n      setOffset({\r\n        x: mousePos.x - clickedCircle.x,\r\n        y: mousePos.y - clickedCircle.y,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleMouseMove = (e) => {\r\n    if (isDragging && selectedVertex) {\r\n      const mousePos = getMousePos(canvasRef.current, e);\r\n      const newCircles = vertexes.map((circle) => {\r\n        if (circle.label === selectedVertex.label) {\r\n          const newX = mousePos.x - offset.x;\r\n          const newY = mousePos.y - offset.y;\r\n          // Проверка границ\r\n          const radius = circle.radius;\r\n          if (newX - radius < 0) return { ...circle, x: radius };\r\n          if (newY - radius < 0) return { ...circle, y: radius };\r\n          if (newX + radius > canvasRef.current.width)\r\n            return { ...circle, x: canvasRef.current.width - radius };\r\n          if (newY + radius > canvasRef.current.height)\r\n            return { ...circle, y: canvasRef.current.height - radius };\r\n\r\n          return { ...circle, x: newX, y: newY };\r\n        }\r\n        return circle;\r\n      });\r\n\r\n      setVertexes(newCircles);\r\n    }\r\n  };\r\n\r\n  const getMousePos = (canvas, evt) => {\r\n    const rect = canvas.getBoundingClientRect();\r\n    return {\r\n      x: evt.clientX - rect.left,\r\n      y: evt.clientY - rect.top,\r\n    };\r\n  };\r\n\r\n  return (\r\n    <canvas\r\n      ref={canvasRef}\r\n      width=\"800\"\r\n      height=\"600\"\r\n      onMouseDown={handleMouseDown}\r\n      onMouseMove={handleMouseMove}\r\n      onMouseUp={handleMouseUp}\r\n    />\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,SAASC,mBAAmB,QAAQ,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjE,eAAe,SAASC,cAAcA,CAAC;EAAEC,OAAO;EAAEC;AAAK,CAAC,EAAE;EAAAC,EAAA;EACxD,MAAMC,SAAS,GAAGT,MAAM,CAAC,IAAI,CAAC;EAE9B,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACW,cAAc,EAAEC,iBAAiB,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACe,MAAM,EAAEC,SAAS,CAAC,GAAGhB,QAAQ,CAAC;IAAEiB,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAE;EAAE,CAAC,CAAC;EAEpD,MAAMC,UAAU,GAAGA,CAACC,IAAI,EAAEC,GAAG,KAAK;IAChCA,GAAG,CAACC,SAAS,CAAC,CAAC;IACfD,GAAG,CAACE,GAAG,CAACH,IAAI,CAACH,CAAC,EAAEG,IAAI,CAACF,CAAC,EAAE,EAAE,EAAE,CAAC,EAAEM,IAAI,CAACC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC7CJ,GAAG,CAACK,SAAS,GAAG,MAAM;IACtBL,GAAG,CAACM,SAAS,GAAG,CAAC;IACjBN,GAAG,CAACO,IAAI,CAAC,CAAC;IAEVP,GAAG,CAACK,SAAS,GAAG,OAAO;IACvBL,GAAG,CAACQ,IAAI,GAAG,YAAY;IACvBR,GAAG,CAACS,QAAQ,CAACC,GAAG,CAACC,KAAK,EAAEZ,IAAI,CAACH,CAAC,EAAEG,IAAI,CAACF,CAAC,GAAGE,IAAI,CAACa,MAAM,GAAC,CAAC,CAAC;IACvDZ,GAAG,CAACa,SAAS,CAAC,CAAC;EACjB,CAAC;EAEDpC,SAAS,CAAC,MAAM;IACd,IAAIqC,WAAW,GAAG9B,OAAO,CACtB+B,MAAM,CAAEC,CAAC,IAAK;MACb,IAAIC,IAAI,GAAGzB,QAAQ,CAAC0B,GAAG,CAAEC,CAAC,IAAKA,CAAC,CAACR,KAAK,CAAC;MACvC,OAAO,CAACM,IAAI,CAACG,QAAQ,CAACJ,CAAC,CAAC;IAC1B,CAAC,CAAC,CACDE,GAAG,CAAEC,CAAC,IAAK;MACV,IAAI,CAACE,EAAE,EAAEC,EAAE,CAAC,GAAG1C,mBAAmB,CAACO,SAAS,CAACoC,OAAO,EAAE/B,QAAQ,CAAC;MAC/D,OAAO;QACLmB,KAAK,EAAEQ,CAAC;QACRvB,CAAC,EAAEyB,EAAE;QACLxB,CAAC,EAAEyB,EAAE;QACLV,MAAM,EAAE;MACV,CAAC;IACH,CAAC,CAAC;IACJnB,WAAW,CAACD,QAAQ,CAACgC,MAAM,CAACV,WAAW,CAAC,CAAC;EAC3C,CAAC,EAAE,CAAC9B,OAAO,EAAEC,IAAI,CAAC,CAAC;EAEnBR,SAAS,CAAC,MAAM;IACd,MAAMgD,MAAM,GAAGtC,SAAS,CAACoC,OAAO;IAChC,MAAMvB,GAAG,GAAGyB,MAAM,CAACC,UAAU,CAAC,IAAI,CAAC;IACnC1B,GAAG,CAAC2B,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEF,MAAM,CAACG,KAAK,EAAEH,MAAM,CAACI,MAAM,CAAC;IAEhDrC,QAAQ,CAACsC,OAAO,CAAEC,IAAI,IAAK;MACzBjC,UAAU,CAACiC,IAAI,EAAE/B,GAAG,CAAC;IACvB,CAAC,CAAC;EACJ,CAAC,EAAE,CAACR,QAAQ,CAAC,CAAC;EAEd,MAAMwC,aAAa,GAAGA,CAAA,KAAM;IAC1B3C,aAAa,CAAC,KAAK,CAAC;IACpBE,iBAAiB,CAAC,IAAI,CAAC;EACzB,CAAC;EAED,MAAM0C,eAAe,GAAId,CAAC,IAAK;IAC7B,MAAMe,QAAQ,GAAGC,WAAW,CAAChD,SAAS,CAACoC,OAAO,EAAEJ,CAAC,CAAC;IAClDiB,OAAO,CAACC,GAAG,CAACH,QAAQ,EAAE1C,QAAQ,CAAC;IAC/B,MAAM8C,aAAa,GAAG9C,QAAQ,CAAC+C,IAAI,CAAEC,MAAM,IAAK;MAC9C,OACE,CAACN,QAAQ,CAACtC,CAAC,GAAG4C,MAAM,CAAC5C,CAAC,KAAK,CAAC,GAAG,CAACsC,QAAQ,CAACrC,CAAC,GAAG2C,MAAM,CAAC3C,CAAC,KAAK,CAAC,IAC3D2C,MAAM,CAAC5B,MAAM,IAAI,CAAC;IAEtB,CAAC,CAAC;IACFwB,OAAO,CAACC,GAAG,CAACC,aAAa,CAAC;IAC1B,IAAIA,aAAa,EAAE;MACjBjD,aAAa,CAAC,IAAI,CAAC;MACnBE,iBAAiB,CAAC+C,aAAa,CAAC;MAChC3C,SAAS,CAAC;QACRC,CAAC,EAAEsC,QAAQ,CAACtC,CAAC,GAAG0C,aAAa,CAAC1C,CAAC;QAC/BC,CAAC,EAAEqC,QAAQ,CAACrC,CAAC,GAAGyC,aAAa,CAACzC;MAChC,CAAC,CAAC;IACJ;EACF,CAAC;EAED,MAAM4C,eAAe,GAAItB,CAAC,IAAK;IAC7B,IAAI/B,UAAU,IAAIE,cAAc,EAAE;MAChC,MAAM4C,QAAQ,GAAGC,WAAW,CAAChD,SAAS,CAACoC,OAAO,EAAEJ,CAAC,CAAC;MAClD,MAAMuB,UAAU,GAAGlD,QAAQ,CAAC0B,GAAG,CAAEsB,MAAM,IAAK;QAC1C,IAAIA,MAAM,CAAC7B,KAAK,KAAKrB,cAAc,CAACqB,KAAK,EAAE;UACzC,MAAMgC,IAAI,GAAGT,QAAQ,CAACtC,CAAC,GAAGF,MAAM,CAACE,CAAC;UAClC,MAAMgD,IAAI,GAAGV,QAAQ,CAACrC,CAAC,GAAGH,MAAM,CAACG,CAAC;UAClC;UACA,MAAMe,MAAM,GAAG4B,MAAM,CAAC5B,MAAM;UAC5B,IAAI+B,IAAI,GAAG/B,MAAM,GAAG,CAAC,EAAE,OAAO;YAAE,GAAG4B,MAAM;YAAE5C,CAAC,EAAEgB;UAAO,CAAC;UACtD,IAAIgC,IAAI,GAAGhC,MAAM,GAAG,CAAC,EAAE,OAAO;YAAE,GAAG4B,MAAM;YAAE3C,CAAC,EAAEe;UAAO,CAAC;UACtD,IAAI+B,IAAI,GAAG/B,MAAM,GAAGzB,SAAS,CAACoC,OAAO,CAACK,KAAK,EACzC,OAAO;YAAE,GAAGY,MAAM;YAAE5C,CAAC,EAAET,SAAS,CAACoC,OAAO,CAACK,KAAK,GAAGhB;UAAO,CAAC;UAC3D,IAAIgC,IAAI,GAAGhC,MAAM,GAAGzB,SAAS,CAACoC,OAAO,CAACM,MAAM,EAC1C,OAAO;YAAE,GAAGW,MAAM;YAAE3C,CAAC,EAAEV,SAAS,CAACoC,OAAO,CAACM,MAAM,GAAGjB;UAAO,CAAC;UAE5D,OAAO;YAAE,GAAG4B,MAAM;YAAE5C,CAAC,EAAE+C,IAAI;YAAE9C,CAAC,EAAE+C;UAAK,CAAC;QACxC;QACA,OAAOJ,MAAM;MACf,CAAC,CAAC;MAEF/C,WAAW,CAACiD,UAAU,CAAC;IACzB;EACF,CAAC;EAED,MAAMP,WAAW,GAAGA,CAACV,MAAM,EAAEoB,GAAG,KAAK;IACnC,MAAMC,IAAI,GAAGrB,MAAM,CAACsB,qBAAqB,CAAC,CAAC;IAC3C,OAAO;MACLnD,CAAC,EAAEiD,GAAG,CAACG,OAAO,GAAGF,IAAI,CAACG,IAAI;MAC1BpD,CAAC,EAAEgD,GAAG,CAACK,OAAO,GAAGJ,IAAI,CAACK;IACxB,CAAC;EACH,CAAC;EAED,oBACErE,OAAA;IACEsE,GAAG,EAAEjE,SAAU;IACfyC,KAAK,EAAC,KAAK;IACXC,MAAM,EAAC,KAAK;IACZwB,WAAW,EAAEpB,eAAgB;IAC7BqB,WAAW,EAAEb,eAAgB;IAC7Bc,SAAS,EAAEvB;EAAc;IAAAwB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1B,CAAC;AAEN;AAACzE,EAAA,CArHuBH,cAAc;AAAA6E,EAAA,GAAd7E,cAAc;AAAA,IAAA6E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}