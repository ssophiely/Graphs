{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\admin\\\\Desktop\\\\\\u0433\\u0440\\u0430\\u0444\\u044B\\\\graph_app\\\\src\\\\components\\\\graph_info\\\\MatrixComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport Matrix from \"./Matrix.jsx\";\nimport Header from \"./Header.jsx\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function MatrixComponent() {\n  _s();\n  const [vertexCount, setVertexCount] = useState(5);\n  const input = useRef();\n  const vertexNames = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\"];\n  const [columnHeaders, setcolumnHeaders] = useState(Array.from({\n    length: value\n  }, () => \"\"));\n  const [rowHeaders, setrowHeaders] = useState(vertexNames.slice(0, vertexCount));\n  const [data, setData] = useState([...Array(vertexCount)].map(e => Array(vertexCount).fill(\"\")));\n\n  // Обработчик изменения значения в ячейке\n  const handleChange = (rowIndex, colIndex, value) => {\n    const newData = data.map((row, rIdx) => {\n      if (rIdx === rowIndex) {\n        const newRow = [...row];\n        newRow[colIndex] = value;\n        return newRow;\n      }\n      return row;\n    });\n    setData(newData);\n  };\n  function handleClick() {\n    let value = input.current.value;\n    value = value < 2 ? 2 : value;\n    value = value > 10 ? 10 : value;\n    setVertexCount(value);\n    setcolumnHeaders(vertexNames.slice(0, value));\n    setrowHeaders(vertexNames.slice(0, value));\n    setData(Array.from({\n      length: value\n    }, () => Array.from({\n      length: value\n    }, () => \"\")));\n    input.current.value = value;\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      input: input,\n      vertexCount: vertexCount,\n      onClickHandler: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Matrix, {\n      columnHeaders: columnHeaders,\n      rowHeaders: rowHeaders,\n      data: data,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(MatrixComponent, \"rXfkDRMuzIZTXRL7UzVHB7P48Gk=\");\n_c = MatrixComponent;\nvar _c;\n$RefreshReg$(_c, \"MatrixComponent\");","map":{"version":3,"names":["React","useState","useRef","Matrix","Header","jsxDEV","_jsxDEV","Fragment","_Fragment","MatrixComponent","_s","vertexCount","setVertexCount","input","vertexNames","columnHeaders","setcolumnHeaders","Array","from","length","value","rowHeaders","setrowHeaders","slice","data","setData","map","e","fill","handleChange","rowIndex","colIndex","newData","row","rIdx","newRow","handleClick","current","children","onClickHandler","fileName","_jsxFileName","lineNumber","columnNumber","onChange","_c","$RefreshReg$"],"sources":["D:/Users/admin/Desktop/графы/graph_app/src/components/graph_info/MatrixComponent.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport Matrix from \"./Matrix.jsx\";\r\nimport Header from \"./Header.jsx\";\r\n\r\nexport default function MatrixComponent() {\r\n  const [vertexCount, setVertexCount] = useState(5);\r\n  const input = useRef();\r\n\r\n  const vertexNames = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\"];\r\n  const [columnHeaders, setcolumnHeaders] = useState(\r\n    Array.from({ length: value }, () => \"\")\r\n  );\r\n  const [rowHeaders, setrowHeaders] = useState(\r\n    vertexNames.slice(0, vertexCount)\r\n  );\r\n  const [data, setData] = useState(\r\n    [...Array(vertexCount)].map((e) => Array(vertexCount).fill(\"\"))\r\n  );\r\n\r\n  // Обработчик изменения значения в ячейке\r\n  const handleChange = (rowIndex, colIndex, value) => {\r\n    const newData = data.map((row, rIdx) => {\r\n      if (rIdx === rowIndex) {\r\n        const newRow = [...row];\r\n        newRow[colIndex] = value;\r\n        return newRow;\r\n      }\r\n      return row;\r\n    });\r\n    setData(newData);\r\n  };\r\n\r\n  function handleClick() {\r\n    let value = input.current.value;\r\n    value = value < 2 ? 2 : value;\r\n    value = value > 10 ? 10 : value;\r\n\r\n    setVertexCount(value);\r\n    setcolumnHeaders(vertexNames.slice(0, value));\r\n    setrowHeaders(vertexNames.slice(0, value));\r\n    setData(\r\n      Array.from({ length: value }, () =>\r\n        Array.from({ length: value }, () => \"\")\r\n      )\r\n    );\r\n\r\n    input.current.value = value;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header\r\n        input={input}\r\n        vertexCount={vertexCount}\r\n        onClickHandler={handleClick}\r\n      />\r\n      <Matrix\r\n        columnHeaders={columnHeaders}\r\n        rowHeaders={rowHeaders}\r\n        data={data}\r\n        onChange={handleChange}\r\n      />\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}