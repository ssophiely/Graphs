{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\admin\\\\Desktop\\\\graph_app\\\\src\\\\components\\\\graph\\\\GraphComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { generateCoordinates, getMousePos } from \"../../funcs/generateCoords\";\nimport VertexContextMenu from \"./VertexContextMenu.jsx\";\nimport CanvasContextMenu from \"./CanvasContextMenu.jsx\";\nimport { drawArrow, drawCircle } from \"../../funcs/drawing.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function GraphComponent({\n  headers,\n  setHeaders,\n  inpData,\n  setInpData,\n  start,\n  end,\n  setStart,\n  setEnd,\n  setDeleted,\n  setInserted\n}) {\n  _s();\n  var _data$clickedVertex$i, _data$clickedVertex$i2, _data$clickedVertex$i3;\n  const canvasRef = useRef(null);\n  const [isDragging, setIsDragging] = useState(false);\n  const [selectedVertex, setSelectedVertex] = useState(null);\n  const [vertexes, setVertexes] = useState([]);\n  const [offset, setOffset] = useState({\n    x: 0,\n    y: 0\n  });\n  const [names, setNames] = useState(headers);\n  const [data, setData] = useState(inpData);\n  const [context, setContext] = React.useState(false);\n  const [xyPosition, setxyPosition] = React.useState({\n    x: 0,\n    y: 0\n  });\n  const [clickedVertex, setClickedVertex] = useState(null);\n  const [menuOn, setMenuOn] = useState(true);\n  const [canvasContext, setCanvasContext] = React.useState(false);\n  const [canvasXYPosition, setCanvasXYPosition] = React.useState({\n    x: 0,\n    y: 0\n  });\n  const [clickedCoords, setClickedCoords] = useState(null);\n\n  // контекстные меню по клику\n  const showContext = (event, contextFunc, xyFunc) => {\n    contextFunc(false);\n    const positionChange = {\n      x: event.pageX,\n      y: event.pageY\n    };\n    xyFunc(positionChange);\n    contextFunc(true);\n  };\n  function handleClick(e) {\n    e.preventDefault();\n    const mousePos = getMousePos(canvasRef.current, e);\n    const clickedCircle = vertexes.find(circle => {\n      return (mousePos.x - circle.x) ** 2 + (mousePos.y - circle.y) ** 2 <= circle.radius ** 2;\n    });\n    if (clickedCircle) {\n      if (!menuOn) {\n        setContext(false);\n        setMenuOn(true);\n        return;\n      }\n      setCanvasContext(false);\n      setClickedVertex(clickedCircle);\n      showContext(e, setContext, setxyPosition);\n    } else {\n      showContext(e, setCanvasContext, setCanvasXYPosition);\n      setContext(false);\n      setMenuOn(true);\n    }\n  }\n\n  // выбор вершины начальной\n  const handleStart = () => {\n    setVertexes(vertexes.map(v => {\n      if (v.label === clickedVertex.label) {\n        if (v.label === end) {\n          setEnd(\"\");\n        }\n        setStart(v.label);\n        return {\n          ...v,\n          fillStyle: \"LightCyan\"\n        };\n      }\n      if (v.label === end) {\n        return {\n          ...v,\n          fillStyle: \"MediumTurquoise\"\n        };\n      }\n      return {\n        ...v,\n        fillStyle: \"PaleTurquoise\"\n      };\n    }));\n  };\n\n  // выбор вершины конечной\n  const handleEnd = () => {\n    setVertexes(vertexes.map(v => {\n      if (v.label === clickedVertex.label) {\n        if (v.label === start) {\n          setStart(\"\");\n        }\n        setEnd(v.label);\n        return {\n          ...v,\n          fillStyle: \"MediumTurquoise\"\n        };\n      }\n      if (v.label === start) {\n        return {\n          ...v,\n          fillStyle: \"LightCyan\"\n        };\n      }\n      return {\n        ...v,\n        fillStyle: \"PaleTurquoise\"\n      };\n    }));\n  };\n\n  // удаление вершины\n  const removeVertex = () => {\n    const h = headers.map(x => {\n      if (x === clickedVertex.label) return \"\";else return x;\n    });\n    setHeaders(h);\n    setDeleted(clickedVertex.id);\n    setTimeout(() => {\n      setDeleted(null);\n    }, 500);\n    if (clickedVertex.label === start) setStart(\"\");\n    if (clickedVertex.label === end) setEnd(\"\");\n  };\n\n  // добавление вершины\n  const addVertex = label => {\n    const newHeaders = headers.slice();\n    if (headers.includes(\"\")) {\n      const ind = headers.indexOf(\"\");\n      newHeaders[ind] = label;\n      setHeaders(prev => {\n        setClickedCoords({\n          x: canvasXYPosition.x,\n          y: canvasXYPosition.y,\n          headers: newHeaders\n        });\n        return newHeaders;\n      });\n    } else {\n      setClickedCoords({\n        x: canvasXYPosition.x,\n        y: canvasXYPosition.y,\n        headers: newHeaders\n      });\n      setTimeout(() => {\n        setInserted({\n          ind: names.length - 1,\n          val: label\n        });\n      }, 200);\n      setTimeout(() => {\n        setInserted(null);\n      }, 100);\n    }\n  };\n\n  // операции с ребрами\n  function handleDelArc(label) {}\n  useEffect(() => {\n    if (headers.length !== names.length) {\n      let newVertexes = headers.map((h, ind) => {\n        if (h !== \"\") {\n          const vertex = vertexes.find(v => v.label === h);\n          if (vertex) {\n            vertex.id = ind;\n            return vertex;\n          }\n          if (!names.includes(h)) {\n            let [xc, yc] = clickedCoords === null ? generateCoordinates(canvasRef.current, vertexes) : [clickedCoords.x, clickedCoords.y];\n            setClickedCoords(null);\n            return {\n              label: h,\n              x: xc,\n              y: yc,\n              radius: 20,\n              id: ind,\n              fillStyle: \"PaleTurquoise\"\n            };\n          }\n        }\n        return null;\n      });\n      setNames(headers);\n      setVertexes(newVertexes.filter(el => el !== null));\n      return;\n    }\n    let newVertexes = headers.map((h, ind) => {\n      if (h !== \"\") {\n        const vertex = vertexes.find(v => v.id === ind);\n        if (vertex) {\n          vertex.label = h;\n          return vertex;\n        }\n        let [xc, yc] = clickedCoords === null ? generateCoordinates(canvasRef.current, vertexes) : [clickedCoords.x, clickedCoords.y];\n        setClickedCoords(null);\n        return {\n          label: h,\n          x: xc,\n          y: yc,\n          radius: 20,\n          id: ind,\n          fillStyle: \"PaleTurquoise\"\n        };\n      }\n      return null;\n    });\n    setVertexes(newVertexes.filter(el => el !== null));\n    setNames(headers);\n  }, [headers]);\n\n  // поменяли веса в таблице\n  useEffect(() => {\n    setData(inpData);\n    canvasRef.current.getContext(\"2d\").clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n    vertexes.forEach(item => {\n      drawCircle(item, canvasRef.current.getContext(\"2d\"));\n    });\n    for (let i = 0; i < inpData.length; i++) {\n      for (let j = 0; j < inpData[i].length; j++) {\n        const circle1 = vertexes.find(v => v.id === i);\n        const circle2 = vertexes.find(v => v.id === j);\n        const weight = parseInt(inpData[i][j]) ? parseInt(inpData[i][j]) : 0;\n        drawArrow(circle1, circle2, weight, canvasRef.current.getContext(\"2d\"));\n      }\n    }\n  }, [inpData]);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    vertexes.forEach(item => {\n      drawCircle(item, ctx);\n    });\n    for (let i = 0; i < (data === null || data === void 0 ? void 0 : data.length); i++) {\n      for (let j = 0; j < ((_data$i = data[i]) === null || _data$i === void 0 ? void 0 : _data$i.length); j++) {\n        var _data$i;\n        const circle1 = vertexes.find(v => v.id === i);\n        const circle2 = vertexes.find(v => v.id === j);\n        const weight = parseInt(data[i][j]) ? parseInt(data[i][j]) : 0;\n        drawArrow(circle1, circle2, weight, canvasRef.current.getContext(\"2d\"));\n      }\n    }\n  }, [vertexes]);\n  const handleMouseUp = () => {\n    setIsDragging(false);\n    setSelectedVertex(null);\n  };\n  const handleMouseDown = e => {\n    const mousePos = getMousePos(canvasRef.current, e);\n    const clickedCircle = vertexes.find(circle => {\n      return (mousePos.x - circle.x) ** 2 + (mousePos.y - circle.y) ** 2 <= circle.radius ** 2;\n    });\n    if (clickedCircle) {\n      setIsDragging(true);\n      setSelectedVertex(clickedCircle);\n      setOffset({\n        x: mousePos.x - clickedCircle.x,\n        y: mousePos.y - clickedCircle.y\n      });\n    }\n  };\n  const handleMouseMove = e => {\n    if (isDragging && selectedVertex) {\n      setMenuOn(false);\n      const mousePos = getMousePos(canvasRef.current, e);\n      const newCircles = vertexes.map(circle => {\n        if (circle.label === selectedVertex.label) {\n          const newX = mousePos.x - offset.x;\n          const newY = mousePos.y - offset.y;\n          // Проверка границ\n          const radius = circle.radius;\n          if (newX - radius < 0) return {\n            ...circle,\n            x: radius\n          };\n          if (newY - radius < 0) return {\n            ...circle,\n            y: radius\n          };\n          if (newX + radius > canvasRef.current.width) return {\n            ...circle,\n            x: canvasRef.current.width - radius\n          };\n          if (newY + radius > canvasRef.current.height) return {\n            ...circle,\n            y: canvasRef.current.height - radius\n          };\n          return {\n            ...circle,\n            x: newX,\n            y: newY\n          };\n        }\n        return circle;\n      });\n      setVertexes(newCircles);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: \"880\",\n      height: \"600\",\n      onMouseDown: handleMouseDown,\n      onMouseMove: handleMouseMove,\n      onMouseUp: handleMouseUp,\n      onContextMenu: e => handleClick(e),\n      onClick: e => {\n        setContext(false);\n        setCanvasContext(false);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(VertexContextMenu, {\n      context: context,\n      xyPosition: xyPosition,\n      setContext: setContext,\n      del: vertexes.length > 2,\n      addArc: (_data$clickedVertex$i = data[clickedVertex === null || clickedVertex === void 0 ? void 0 : clickedVertex.id]) === null || _data$clickedVertex$i === void 0 ? void 0 : _data$clickedVertex$i.some((el, ind) => {\n        return [\"\", \"0\"].includes(el) && headers[ind] != \"\" && headers[ind] != (clickedVertex === null || clickedVertex === void 0 ? void 0 : clickedVertex.label);\n      }),\n      delArc: (_data$clickedVertex$i2 = data[clickedVertex === null || clickedVertex === void 0 ? void 0 : clickedVertex.id]) === null || _data$clickedVertex$i2 === void 0 ? void 0 : _data$clickedVertex$i2.some(el => ![\"\", \"0\"].includes(el)),\n      changeArc: (_data$clickedVertex$i3 = data[clickedVertex === null || clickedVertex === void 0 ? void 0 : clickedVertex.id]) === null || _data$clickedVertex$i3 === void 0 ? void 0 : _data$clickedVertex$i3.some(el => ![\"\", \"0\"].includes(el)),\n      onStart: handleStart,\n      onEnd: handleEnd,\n      onDelete: removeVertex,\n      onDelArc: handleDelArc\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CanvasContextMenu, {\n      context: canvasContext,\n      xyPosition: canvasXYPosition,\n      setContext: setCanvasContext,\n      insert: vertexes.length < 10,\n      onInsert: addVertex\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 312,\n    columnNumber: 5\n  }, this);\n}\n_s(GraphComponent, \"/mEDUvxH6Ml1dB6SX6c3fwvCtxI=\");\n_c = GraphComponent;\nvar _c;\n$RefreshReg$(_c, \"GraphComponent\");","map":{"version":3,"names":["React","useEffect","useRef","useState","generateCoordinates","getMousePos","VertexContextMenu","CanvasContextMenu","drawArrow","drawCircle","jsxDEV","_jsxDEV","GraphComponent","headers","setHeaders","inpData","setInpData","start","end","setStart","setEnd","setDeleted","setInserted","_s","_data$clickedVertex$i","_data$clickedVertex$i2","_data$clickedVertex$i3","canvasRef","isDragging","setIsDragging","selectedVertex","setSelectedVertex","vertexes","setVertexes","offset","setOffset","x","y","names","setNames","data","setData","context","setContext","xyPosition","setxyPosition","clickedVertex","setClickedVertex","menuOn","setMenuOn","canvasContext","setCanvasContext","canvasXYPosition","setCanvasXYPosition","clickedCoords","setClickedCoords","showContext","event","contextFunc","xyFunc","positionChange","pageX","pageY","handleClick","e","preventDefault","mousePos","current","clickedCircle","find","circle","radius","handleStart","map","v","label","fillStyle","handleEnd","removeVertex","h","id","setTimeout","addVertex","newHeaders","slice","includes","ind","indexOf","prev","length","val","handleDelArc","newVertexes","vertex","xc","yc","filter","el","getContext","clearRect","width","height","forEach","item","i","j","circle1","circle2","weight","parseInt","canvas","ctx","_data$i","handleMouseUp","handleMouseDown","handleMouseMove","newCircles","newX","newY","children","ref","onMouseDown","onMouseMove","onMouseUp","onContextMenu","onClick","fileName","_jsxFileName","lineNumber","columnNumber","del","addArc","some","delArc","changeArc","onStart","onEnd","onDelete","onDelArc","insert","onInsert","_c","$RefreshReg$"],"sources":["D:/Users/admin/Desktop/graph_app/src/components/graph/GraphComponent.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport { generateCoordinates, getMousePos } from \"../../funcs/generateCoords\";\r\nimport VertexContextMenu from \"./VertexContextMenu.jsx\";\r\nimport CanvasContextMenu from \"./CanvasContextMenu.jsx\";\r\nimport { drawArrow, drawCircle } from \"../../funcs/drawing.js\";\r\n\r\nexport default function GraphComponent({\r\n  headers,\r\n  setHeaders,\r\n  inpData,\r\n  setInpData,\r\n  start,\r\n  end,\r\n  setStart,\r\n  setEnd,\r\n  setDeleted,\r\n  setInserted,\r\n}) {\r\n  const canvasRef = useRef(null);\r\n\r\n  const [isDragging, setIsDragging] = useState(false);\r\n  const [selectedVertex, setSelectedVertex] = useState(null);\r\n  const [vertexes, setVertexes] = useState([]);\r\n  const [offset, setOffset] = useState({ x: 0, y: 0 });\r\n  const [names, setNames] = useState(headers);\r\n  const [data, setData] = useState(inpData);\r\n\r\n  const [context, setContext] = React.useState(false);\r\n  const [xyPosition, setxyPosition] = React.useState({ x: 0, y: 0 });\r\n  const [clickedVertex, setClickedVertex] = useState(null);\r\n  const [menuOn, setMenuOn] = useState(true);\r\n\r\n  const [canvasContext, setCanvasContext] = React.useState(false);\r\n  const [canvasXYPosition, setCanvasXYPosition] = React.useState({\r\n    x: 0,\r\n    y: 0,\r\n  });\r\n\r\n  const [clickedCoords, setClickedCoords] = useState(null);\r\n\r\n  // контекстные меню по клику\r\n  const showContext = (event, contextFunc, xyFunc) => {\r\n    contextFunc(false);\r\n    const positionChange = {\r\n      x: event.pageX,\r\n      y: event.pageY,\r\n    };\r\n    xyFunc(positionChange);\r\n    contextFunc(true);\r\n  };\r\n\r\n  function handleClick(e) {\r\n    e.preventDefault();\r\n    const mousePos = getMousePos(canvasRef.current, e);\r\n    const clickedCircle = vertexes.find((circle) => {\r\n      return (\r\n        (mousePos.x - circle.x) ** 2 + (mousePos.y - circle.y) ** 2 <=\r\n        circle.radius ** 2\r\n      );\r\n    });\r\n    if (clickedCircle) {\r\n      if (!menuOn) {\r\n        setContext(false);\r\n        setMenuOn(true);\r\n        return;\r\n      }\r\n      setCanvasContext(false);\r\n      setClickedVertex(clickedCircle);\r\n      showContext(e, setContext, setxyPosition);\r\n    } else {\r\n      showContext(e, setCanvasContext, setCanvasXYPosition);\r\n      setContext(false);\r\n      setMenuOn(true);\r\n    }\r\n  }\r\n\r\n  // выбор вершины начальной\r\n  const handleStart = () => {\r\n    setVertexes(\r\n      vertexes.map((v) => {\r\n        if (v.label === clickedVertex.label) {\r\n          if (v.label === end) {\r\n            setEnd(\"\");\r\n          }\r\n          setStart(v.label);\r\n          return { ...v, fillStyle: \"LightCyan\" };\r\n        }\r\n        if (v.label === end) {\r\n          return { ...v, fillStyle: \"MediumTurquoise\" };\r\n        }\r\n        return { ...v, fillStyle: \"PaleTurquoise\" };\r\n      })\r\n    );\r\n  };\r\n\r\n  // выбор вершины конечной\r\n  const handleEnd = () => {\r\n    setVertexes(\r\n      vertexes.map((v) => {\r\n        if (v.label === clickedVertex.label) {\r\n          if (v.label === start) {\r\n            setStart(\"\");\r\n          }\r\n          setEnd(v.label);\r\n          return { ...v, fillStyle: \"MediumTurquoise\" };\r\n        }\r\n        if (v.label === start) {\r\n          return { ...v, fillStyle: \"LightCyan\" };\r\n        }\r\n        return { ...v, fillStyle: \"PaleTurquoise\" };\r\n      })\r\n    );\r\n  };\r\n\r\n  // удаление вершины\r\n  const removeVertex = () => {\r\n    const h = headers.map((x) => {\r\n      if (x === clickedVertex.label) return \"\";\r\n      else return x;\r\n    });\r\n    setHeaders(h);\r\n    setDeleted(clickedVertex.id);\r\n    setTimeout(() => {\r\n      setDeleted(null);\r\n    }, 500);\r\n    if (clickedVertex.label === start) setStart(\"\");\r\n    if (clickedVertex.label === end) setEnd(\"\");\r\n  };\r\n\r\n  // добавление вершины\r\n  const addVertex = (label) => {\r\n    const newHeaders = headers.slice();\r\n    if (headers.includes(\"\")) {\r\n      const ind = headers.indexOf(\"\");\r\n      newHeaders[ind] = label;\r\n      setHeaders((prev) => {\r\n        setClickedCoords({\r\n          x: canvasXYPosition.x,\r\n          y: canvasXYPosition.y,\r\n          headers: newHeaders,\r\n        });\r\n        return newHeaders;\r\n      });\r\n    } else {\r\n      setClickedCoords({\r\n        x: canvasXYPosition.x,\r\n        y: canvasXYPosition.y,\r\n        headers: newHeaders,\r\n      });\r\n      setTimeout(() => {\r\n        setInserted({ ind: names.length - 1, val: label });\r\n      }, 200);\r\n      setTimeout(() => {\r\n        setInserted(null);\r\n      }, 100);\r\n    }\r\n  };\r\n\r\n  // операции с ребрами\r\n  function handleDelArc(label){\r\n\r\n    \r\n  }\r\n\r\n  useEffect(() => {\r\n    if (headers.length !== names.length) {\r\n      let newVertexes = headers.map((h, ind) => {\r\n        if (h !== \"\") {\r\n          const vertex = vertexes.find((v) => v.label === h);\r\n          if (vertex) {\r\n            vertex.id = ind;\r\n            return vertex;\r\n          }\r\n          if (!names.includes(h)) {\r\n            let [xc, yc] =\r\n              clickedCoords === null\r\n                ? generateCoordinates(canvasRef.current, vertexes)\r\n                : [clickedCoords.x, clickedCoords.y];\r\n            setClickedCoords(null);\r\n            return {\r\n              label: h,\r\n              x: xc,\r\n              y: yc,\r\n              radius: 20,\r\n              id: ind,\r\n              fillStyle: \"PaleTurquoise\",\r\n            };\r\n          }\r\n        }\r\n        return null;\r\n      });\r\n      setNames(headers);\r\n      setVertexes(newVertexes.filter((el) => el !== null));\r\n      return;\r\n    }\r\n    let newVertexes = headers.map((h, ind) => {\r\n      if (h !== \"\") {\r\n        const vertex = vertexes.find((v) => v.id === ind);\r\n        if (vertex) {\r\n          vertex.label = h;\r\n          return vertex;\r\n        }\r\n        let [xc, yc] =\r\n          clickedCoords === null\r\n            ? generateCoordinates(canvasRef.current, vertexes)\r\n            : [clickedCoords.x, clickedCoords.y];\r\n        setClickedCoords(null);\r\n        return {\r\n          label: h,\r\n          x: xc,\r\n          y: yc,\r\n          radius: 20,\r\n          id: ind,\r\n          fillStyle: \"PaleTurquoise\",\r\n        };\r\n      }\r\n      return null;\r\n    });\r\n    setVertexes(newVertexes.filter((el) => el !== null));\r\n    setNames(headers);\r\n  }, [headers]);\r\n\r\n  // поменяли веса в таблице\r\n  useEffect(() => {\r\n    setData(inpData);\r\n\r\n    canvasRef.current\r\n      .getContext(\"2d\")\r\n      .clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\r\n    vertexes.forEach((item) => {\r\n      drawCircle(item, canvasRef.current.getContext(\"2d\"));\r\n    });\r\n\r\n    for (let i = 0; i < inpData.length; i++) {\r\n      for (let j = 0; j < inpData[i].length; j++) {\r\n        const circle1 = vertexes.find((v) => v.id === i);\r\n        const circle2 = vertexes.find((v) => v.id === j);\r\n        const weight = parseInt(inpData[i][j]) ? parseInt(inpData[i][j]) : 0;\r\n        drawArrow(circle1, circle2, weight, canvasRef.current.getContext(\"2d\"));\r\n      }\r\n    }\r\n  }, [inpData]);\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext(\"2d\");\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n    vertexes.forEach((item) => {\r\n      drawCircle(item, ctx);\r\n    });\r\n    for (let i = 0; i < data?.length; i++) {\r\n      for (let j = 0; j < data[i]?.length; j++) {\r\n        const circle1 = vertexes.find((v) => v.id === i);\r\n        const circle2 = vertexes.find((v) => v.id === j);\r\n        const weight = parseInt(data[i][j]) ? parseInt(data[i][j]) : 0;\r\n        drawArrow(circle1, circle2, weight, canvasRef.current.getContext(\"2d\"));\r\n      }\r\n    }\r\n  }, [vertexes]);\r\n\r\n  const handleMouseUp = () => {\r\n    setIsDragging(false);\r\n    setSelectedVertex(null);\r\n  };\r\n\r\n  const handleMouseDown = (e) => {\r\n    const mousePos = getMousePos(canvasRef.current, e);\r\n    const clickedCircle = vertexes.find((circle) => {\r\n      return (\r\n        (mousePos.x - circle.x) ** 2 + (mousePos.y - circle.y) ** 2 <=\r\n        circle.radius ** 2\r\n      );\r\n    });\r\n    if (clickedCircle) {\r\n      setIsDragging(true);\r\n      setSelectedVertex(clickedCircle);\r\n      setOffset({\r\n        x: mousePos.x - clickedCircle.x,\r\n        y: mousePos.y - clickedCircle.y,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleMouseMove = (e) => {\r\n    if (isDragging && selectedVertex) {\r\n      setMenuOn(false);\r\n      const mousePos = getMousePos(canvasRef.current, e);\r\n      const newCircles = vertexes.map((circle) => {\r\n        if (circle.label === selectedVertex.label) {\r\n          const newX = mousePos.x - offset.x;\r\n          const newY = mousePos.y - offset.y;\r\n          // Проверка границ\r\n          const radius = circle.radius;\r\n          if (newX - radius < 0) return { ...circle, x: radius };\r\n          if (newY - radius < 0) return { ...circle, y: radius };\r\n          if (newX + radius > canvasRef.current.width)\r\n            return { ...circle, x: canvasRef.current.width - radius };\r\n          if (newY + radius > canvasRef.current.height)\r\n            return { ...circle, y: canvasRef.current.height - radius };\r\n\r\n          return { ...circle, x: newX, y: newY };\r\n        }\r\n        return circle;\r\n      });\r\n\r\n      setVertexes(newCircles);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <canvas\r\n        ref={canvasRef}\r\n        width=\"880\"\r\n        height=\"600\"\r\n        onMouseDown={handleMouseDown}\r\n        onMouseMove={handleMouseMove}\r\n        onMouseUp={handleMouseUp}\r\n        onContextMenu={(e) => handleClick(e)}\r\n        onClick={(e) => {\r\n          setContext(false);\r\n          setCanvasContext(false);\r\n        }}\r\n      />\r\n      <VertexContextMenu\r\n        context={context}\r\n        xyPosition={xyPosition}\r\n        setContext={setContext}\r\n        del={vertexes.length > 2}\r\n        addArc={data[clickedVertex?.id]?.some((el, ind) => {\r\n          return (\r\n            [\"\", \"0\"].includes(el) &&\r\n            headers[ind] != \"\" &&\r\n            headers[ind] != clickedVertex?.label\r\n          );\r\n        })}\r\n        delArc={data[clickedVertex?.id]?.some((el) => ![\"\", \"0\"].includes(el))}\r\n        changeArc={data[clickedVertex?.id]?.some((el) => ![\"\", \"0\"].includes(el))}\r\n        onStart={handleStart}\r\n        onEnd={handleEnd}\r\n        onDelete={removeVertex}\r\n        onDelArc={handleDelArc}\r\n      />\r\n      <CanvasContextMenu\r\n        context={canvasContext}\r\n        xyPosition={canvasXYPosition}\r\n        setContext={setCanvasContext}\r\n        insert={vertexes.length < 10}\r\n        onInsert={addVertex}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}