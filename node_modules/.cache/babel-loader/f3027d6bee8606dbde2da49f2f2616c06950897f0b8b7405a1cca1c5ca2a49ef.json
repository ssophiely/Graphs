{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\admin\\\\Desktop\\\\graph_app\\\\src\\\\components\\\\graph\\\\GraphComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { generateCoordinates } from \"../../funcs/generateCoords\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function GraphComponent({\n  headers,\n  inpData\n}) {\n  _s();\n  const canvasRef = useRef(null);\n  const [isDragging, setIsDragging] = useState(false);\n  const [selectedVertex, setSelectedVertex] = useState(null);\n  const [vertexes, setVertexes] = useState([]);\n  const [offset, setOffset] = useState({\n    x: 0,\n    y: 0\n  });\n  const [names, setNames] = useState(headers);\n  const [data, setData] = useState(inpData);\n\n  // рисуем круг\n  const drawCircle = (vert, ctx) => {\n    ctx.beginPath();\n    ctx.arc(vert.x, vert.y, 20, 0, Math.PI * 2);\n    ctx.fillStyle = \"blue\";\n    ctx.lineWidth = 2;\n    ctx.fill();\n    ctx.fillStyle = \"black\";\n    ctx.font = \"13px Serif\";\n    ctx.fillText(vert.label, vert.x, vert.y - vert.radius - 4);\n    ctx.closePath();\n  };\n\n  // рисуем стрелку\n  const drawArrow = (circle1, circle2, weight, ctx) => {\n    console.log(circle1, circle2, weight);\n    if (weight === 0) {\n      return;\n    }\n    if (circle1 && circle2) {\n      const dx = circle2.x - circle1.x;\n      const dy = circle2.y - circle1.y;\n      const angle = Math.atan2(dy, dx);\n\n      // Позиции конечных точек стрелки\n      const startX = circle1.x + Math.cos(angle) * circle1.radius;\n      const startY = circle1.y + Math.sin(angle) * circle1.radius;\n      const endX = circle2.x - Math.cos(angle) * circle2.radius;\n      const endY = circle2.y - Math.sin(angle) * circle2.radius;\n\n      // Рисуем дугу\n      ctx.beginPath();\n      ctx.strokeStyle = \"grey\";\n      ctx.moveTo(startX, startY);\n      ctx.quadraticCurveTo((startX + endX) / 2, startY, endX, endY); // искажение для формирования дуги\n      ctx.stroke();\n\n      // Рисуем стрелку\n      const arrowSize = 15;\n      ctx.save();\n      ctx.translate(endX, endY);\n      ctx.rotate(angle);\n      ctx.beginPath();\n      ctx.moveTo(-arrowSize, -arrowSize / 2);\n      ctx.lineTo(0, 0);\n      ctx.lineTo(-arrowSize, arrowSize / 2);\n      ctx.fillStyle = \"grey\";\n      ctx.fill();\n      ctx.restore();\n      ctx.font = \"15px Serif\";\n      ctx.fillStyle = \"black\";\n      const midWeightX = (circle1.x + toX) / 2 + (circle1.y - toPos.y) / 50;\n      const midWeightY = (circle1.y + toY) / 2 + (toPos.x - circle1.x) / 50;\n      ctx.fillText(weight, midWeightX, midWeightY);\n    }\n  };\n  useEffect(() => {\n    if (headers.length !== names.length) {\n      let newVertexes = headers.map((h, ind) => {\n        if (h !== \"\") {\n          const vertex = vertexes.find(v => v.label === h);\n          if (vertex) {\n            vertex.id = ind;\n            return vertex;\n          }\n          console.log(\"error!\");\n        }\n        return null;\n      });\n      setNames(headers);\n      setVertexes(newVertexes.filter(el => el !== null));\n      return;\n    }\n    let newVertexes = headers.map((h, ind) => {\n      if (h !== \"\") {\n        const vertex = vertexes.find(v => v.id === ind);\n        if (vertex) {\n          vertex.label = h;\n          return vertex;\n        }\n        let [xc, yc] = generateCoordinates(canvasRef.current, vertexes);\n        return {\n          label: h,\n          x: xc,\n          y: yc,\n          radius: 20,\n          id: ind\n        };\n      }\n      return null;\n    });\n    setVertexes(newVertexes.filter(el => el !== null));\n    setNames(headers);\n  }, [headers]);\n\n  // поменяли веса в таблице\n  useEffect(() => {\n    console.log(inpData);\n    setData(inpData);\n    for (let i = 0; i < data.length; i++) {\n      for (let j = 0; j < data[i].length; j++) {\n        const circle1 = vertexes.find(v => v.id === i);\n        const circle2 = vertexes.find(v => v.id === j);\n        const weight = parseInt(data[i][j]) ? parseInt(data[i][j]) : 0;\n        drawArrow(circle1, circle2, weight, canvasRef.current.getContext(\"2d\"));\n      }\n    }\n  }, [inpData]);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    vertexes.forEach(item => {\n      drawCircle(item, ctx);\n    });\n    for (let i = 0; i < (data === null || data === void 0 ? void 0 : data.length); i++) {\n      for (let j = 0; j < ((_data$i = data[i]) === null || _data$i === void 0 ? void 0 : _data$i.length); j++) {\n        var _data$i;\n        const circle1 = vertexes.find(v => v.id === i);\n        const circle2 = vertexes.find(v => v.id === j);\n        const weight = parseInt(data[i][j]) ? parseInt(data[i][j]) : 0;\n        drawArrow(circle1, circle2, weight, canvasRef.current.getContext(\"2d\"));\n      }\n    }\n  }, [vertexes]);\n  const handleMouseUp = () => {\n    setIsDragging(false);\n    setSelectedVertex(null);\n  };\n  const handleMouseDown = e => {\n    const mousePos = getMousePos(canvasRef.current, e);\n    const clickedCircle = vertexes.find(circle => {\n      return (mousePos.x - circle.x) ** 2 + (mousePos.y - circle.y) ** 2 <= circle.radius ** 2;\n    });\n    if (clickedCircle) {\n      setIsDragging(true);\n      setSelectedVertex(clickedCircle);\n      setOffset({\n        x: mousePos.x - clickedCircle.x,\n        y: mousePos.y - clickedCircle.y\n      });\n    }\n  };\n  const handleMouseMove = e => {\n    if (isDragging && selectedVertex) {\n      const mousePos = getMousePos(canvasRef.current, e);\n      const newCircles = vertexes.map(circle => {\n        if (circle.label === selectedVertex.label) {\n          const newX = mousePos.x - offset.x;\n          const newY = mousePos.y - offset.y;\n          // Проверка границ\n          const radius = circle.radius;\n          if (newX - radius < 0) return {\n            ...circle,\n            x: radius\n          };\n          if (newY - radius < 0) return {\n            ...circle,\n            y: radius\n          };\n          if (newX + radius > canvasRef.current.width) return {\n            ...circle,\n            x: canvasRef.current.width - radius\n          };\n          if (newY + radius > canvasRef.current.height) return {\n            ...circle,\n            y: canvasRef.current.height - radius\n          };\n          return {\n            ...circle,\n            x: newX,\n            y: newY\n          };\n        }\n        return circle;\n      });\n      setVertexes(newCircles);\n    }\n  };\n  const getMousePos = (canvas, evt) => {\n    const rect = canvas.getBoundingClientRect();\n    return {\n      x: evt.clientX - rect.left,\n      y: evt.clientY - rect.top\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    width: \"880\",\n    height: \"600\",\n    onMouseDown: handleMouseDown,\n    onMouseMove: handleMouseMove,\n    onMouseUp: handleMouseUp\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 204,\n    columnNumber: 5\n  }, this);\n}\n_s(GraphComponent, \"I3zEmGc9gGWT7CbCxiZ7W77qjOw=\");\n_c = GraphComponent;\nvar _c;\n$RefreshReg$(_c, \"GraphComponent\");","map":{"version":3,"names":["React","useEffect","useRef","useState","generateCoordinates","jsxDEV","_jsxDEV","GraphComponent","headers","inpData","_s","canvasRef","isDragging","setIsDragging","selectedVertex","setSelectedVertex","vertexes","setVertexes","offset","setOffset","x","y","names","setNames","data","setData","drawCircle","vert","ctx","beginPath","arc","Math","PI","fillStyle","lineWidth","fill","font","fillText","label","radius","closePath","drawArrow","circle1","circle2","weight","console","log","dx","dy","angle","atan2","startX","cos","startY","sin","endX","endY","strokeStyle","moveTo","quadraticCurveTo","stroke","arrowSize","save","translate","rotate","lineTo","restore","midWeightX","toX","toPos","midWeightY","toY","length","newVertexes","map","h","ind","vertex","find","v","id","filter","el","xc","yc","current","i","j","parseInt","getContext","canvas","clearRect","width","height","forEach","item","_data$i","handleMouseUp","handleMouseDown","e","mousePos","getMousePos","clickedCircle","circle","handleMouseMove","newCircles","newX","newY","evt","rect","getBoundingClientRect","clientX","left","clientY","top","ref","onMouseDown","onMouseMove","onMouseUp","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Users/admin/Desktop/graph_app/src/components/graph/GraphComponent.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport { generateCoordinates } from \"../../funcs/generateCoords\";\r\n\r\nexport default function GraphComponent({ headers, inpData }) {\r\n  const canvasRef = useRef(null);\r\n\r\n  const [isDragging, setIsDragging] = useState(false);\r\n  const [selectedVertex, setSelectedVertex] = useState(null);\r\n  const [vertexes, setVertexes] = useState([]);\r\n  const [offset, setOffset] = useState({ x: 0, y: 0 });\r\n  const [names, setNames] = useState(headers);\r\n  const [data, setData] = useState(inpData);\r\n\r\n  // рисуем круг\r\n  const drawCircle = (vert, ctx) => {\r\n    ctx.beginPath();\r\n    ctx.arc(vert.x, vert.y, 20, 0, Math.PI * 2);\r\n    ctx.fillStyle = \"blue\";\r\n    ctx.lineWidth = 2;\r\n    ctx.fill();\r\n\r\n    ctx.fillStyle = \"black\";\r\n    ctx.font = \"13px Serif\";\r\n    ctx.fillText(vert.label, vert.x, vert.y - vert.radius - 4);\r\n    ctx.closePath();\r\n  };\r\n\r\n  // рисуем стрелку\r\n  const drawArrow = (circle1, circle2, weight, ctx) => {\r\n    console.log(circle1, circle2, weight);\r\n    if (weight === 0) {\r\n      return;\r\n    }\r\n    if (circle1 && circle2) {\r\n      const dx = circle2.x - circle1.x;\r\n      const dy = circle2.y - circle1.y;\r\n      const angle = Math.atan2(dy, dx);\r\n\r\n      // Позиции конечных точек стрелки\r\n      const startX = circle1.x + Math.cos(angle) * circle1.radius;\r\n      const startY = circle1.y + Math.sin(angle) * circle1.radius;\r\n      const endX = circle2.x - Math.cos(angle) * circle2.radius;\r\n      const endY = circle2.y - Math.sin(angle) * circle2.radius;\r\n\r\n      // Рисуем дугу\r\n      ctx.beginPath();\r\n      ctx.strokeStyle = \"grey\";\r\n      ctx.moveTo(startX, startY);\r\n      ctx.quadraticCurveTo((startX + endX) / 2, startY, endX, endY); // искажение для формирования дуги\r\n      ctx.stroke();\r\n\r\n      // Рисуем стрелку\r\n      const arrowSize = 15;\r\n      ctx.save();\r\n      ctx.translate(endX, endY);\r\n      ctx.rotate(angle);\r\n      ctx.beginPath();\r\n      ctx.moveTo(-arrowSize, -arrowSize / 2);\r\n      ctx.lineTo(0, 0);\r\n      ctx.lineTo(-arrowSize, arrowSize / 2);\r\n      ctx.fillStyle = \"grey\";\r\n      ctx.fill();\r\n      ctx.restore();\r\n\r\n      ctx.font = \"15px Serif\";\r\n      ctx.fillStyle = \"black\";\r\n      const midWeightX =\r\n        (circle1.x + toX) / 2 + (circle1.y - toPos.y) / 50;\r\n      const midWeightY =\r\n        (circle1.y + toY) / 2 + (toPos.x - circle1.x) / 50;\r\n      ctx.fillText(weight, midWeightX, midWeightY);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (headers.length !== names.length) {\r\n      let newVertexes = headers.map((h, ind) => {\r\n        if (h !== \"\") {\r\n          const vertex = vertexes.find((v) => v.label === h);\r\n          if (vertex) {\r\n            vertex.id = ind;\r\n            return vertex;\r\n          }\r\n          console.log(\"error!\");\r\n        }\r\n        return null;\r\n      });\r\n      setNames(headers);\r\n      setVertexes(newVertexes.filter((el) => el !== null));\r\n      return;\r\n    }\r\n\r\n    let newVertexes = headers.map((h, ind) => {\r\n      if (h !== \"\") {\r\n        const vertex = vertexes.find((v) => v.id === ind);\r\n        if (vertex) {\r\n          vertex.label = h;\r\n          return vertex;\r\n        }\r\n        let [xc, yc] = generateCoordinates(canvasRef.current, vertexes);\r\n        return {\r\n          label: h,\r\n          x: xc,\r\n          y: yc,\r\n          radius: 20,\r\n          id: ind,\r\n        };\r\n      }\r\n      return null;\r\n    });\r\n    setVertexes(newVertexes.filter((el) => el !== null));\r\n    setNames(headers);\r\n  }, [headers]);\r\n\r\n  // поменяли веса в таблице\r\n  useEffect(() => {\r\n    console.log(inpData);\r\n    setData(inpData);\r\n    for (let i = 0; i < data.length; i++) {\r\n      for (let j = 0; j < data[i].length; j++) {\r\n        const circle1 = vertexes.find((v) => v.id === i);\r\n        const circle2 = vertexes.find((v) => v.id === j);\r\n        const weight = parseInt(data[i][j]) ? parseInt(data[i][j]) : 0;\r\n        drawArrow(circle1, circle2, weight, canvasRef.current.getContext(\"2d\"));\r\n      }\r\n    }\r\n  }, [inpData]);\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext(\"2d\");\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n    vertexes.forEach((item) => {\r\n      drawCircle(item, ctx);\r\n    });\r\n    for (let i = 0; i < data?.length; i++) {\r\n      for (let j = 0; j < data[i]?.length; j++) {\r\n        const circle1 = vertexes.find((v) => v.id === i);\r\n        const circle2 = vertexes.find((v) => v.id === j);\r\n        const weight = parseInt(data[i][j]) ? parseInt(data[i][j]) : 0;\r\n        drawArrow(circle1, circle2, weight, canvasRef.current.getContext(\"2d\"));\r\n      }\r\n    }\r\n  }, [vertexes]);\r\n\r\n  const handleMouseUp = () => {\r\n    setIsDragging(false);\r\n    setSelectedVertex(null);\r\n  };\r\n\r\n  const handleMouseDown = (e) => {\r\n    const mousePos = getMousePos(canvasRef.current, e);\r\n    const clickedCircle = vertexes.find((circle) => {\r\n      return (\r\n        (mousePos.x - circle.x) ** 2 + (mousePos.y - circle.y) ** 2 <=\r\n        circle.radius ** 2\r\n      );\r\n    });\r\n    if (clickedCircle) {\r\n      setIsDragging(true);\r\n      setSelectedVertex(clickedCircle);\r\n      setOffset({\r\n        x: mousePos.x - clickedCircle.x,\r\n        y: mousePos.y - clickedCircle.y,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleMouseMove = (e) => {\r\n    if (isDragging && selectedVertex) {\r\n      const mousePos = getMousePos(canvasRef.current, e);\r\n      const newCircles = vertexes.map((circle) => {\r\n        if (circle.label === selectedVertex.label) {\r\n          const newX = mousePos.x - offset.x;\r\n          const newY = mousePos.y - offset.y;\r\n          // Проверка границ\r\n          const radius = circle.radius;\r\n          if (newX - radius < 0) return { ...circle, x: radius };\r\n          if (newY - radius < 0) return { ...circle, y: radius };\r\n          if (newX + radius > canvasRef.current.width)\r\n            return { ...circle, x: canvasRef.current.width - radius };\r\n          if (newY + radius > canvasRef.current.height)\r\n            return { ...circle, y: canvasRef.current.height - radius };\r\n\r\n          return { ...circle, x: newX, y: newY };\r\n        }\r\n        return circle;\r\n      });\r\n\r\n      setVertexes(newCircles);\r\n    }\r\n  };\r\n\r\n  const getMousePos = (canvas, evt) => {\r\n    const rect = canvas.getBoundingClientRect();\r\n    return {\r\n      x: evt.clientX - rect.left,\r\n      y: evt.clientY - rect.top,\r\n    };\r\n  };\r\n\r\n  return (\r\n    <canvas\r\n      ref={canvasRef}\r\n      width=\"880\"\r\n      height=\"600\"\r\n      onMouseDown={handleMouseDown}\r\n      onMouseMove={handleMouseMove}\r\n      onMouseUp={handleMouseUp}\r\n    />\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}