{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\admin\\\\Desktop\\\\\\u0433\\u0440\\u0430\\u0444\\u044B\\\\graph_app\\\\src\\\\components\\\\matrix\\\\Matrix.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport Mat from \"./Mat.js\";\nimport Header from \"./Header.jsx\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Matrix() {\n  _s();\n  const [vertexCount, setVertexCount] = useState(5);\n  const input = useRef();\n  function onClickHandler() {\n    let value = input.current.value;\n    value = value < 2 ? 2 : value;\n    value = value > 10 ? 10 : value;\n    setVertexCount(value);\n    input.current.value = value;\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      input: input,\n      vertexCount: vertexCount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Mat, {\n      count: vertexCount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Matrix, \"KR8e7QeF5aoczzrbFav//o04zgs=\");\n_c = Matrix;\nvar _c;\n$RefreshReg$(_c, \"Matrix\");","map":{"version":3,"names":["React","useState","useRef","Mat","Header","jsxDEV","_jsxDEV","Fragment","_Fragment","Matrix","_s","vertexCount","setVertexCount","input","onClickHandler","value","current","children","fileName","_jsxFileName","lineNumber","columnNumber","count","_c","$RefreshReg$"],"sources":["D:/Users/admin/Desktop/графы/graph_app/src/components/matrix/Matrix.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport Mat from \"./Mat.js\";\r\nimport Header from \"./Header.jsx\";\r\n\r\nexport default function Matrix() {\r\n  const [vertexCount, setVertexCount] = useState(5);\r\n  const input = useRef();\r\n\r\n  function onClickHandler() {\r\n    let value = input.current.value;\r\n    value = value < 2 ? 2 : value;\r\n    value = value > 10 ? 10 : value;\r\n\r\n    setVertexCount(value);\r\n    input.current.value = value;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header input={input} vertexCount={vertexCount}/>\r\n      <Mat count={vertexCount} />\r\n    </>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC/C,OAAOC,GAAG,MAAM,UAAU;AAC1B,OAAOC,MAAM,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAElC,eAAe,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAC/B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAMY,KAAK,GAAGX,MAAM,CAAC,CAAC;EAEtB,SAASY,cAAcA,CAAA,EAAG;IACxB,IAAIC,KAAK,GAAGF,KAAK,CAACG,OAAO,CAACD,KAAK;IAC/BA,KAAK,GAAGA,KAAK,GAAG,CAAC,GAAG,CAAC,GAAGA,KAAK;IAC7BA,KAAK,GAAGA,KAAK,GAAG,EAAE,GAAG,EAAE,GAAGA,KAAK;IAE/BH,cAAc,CAACG,KAAK,CAAC;IACrBF,KAAK,CAACG,OAAO,CAACD,KAAK,GAAGA,KAAK;EAC7B;EAEA,oBACET,OAAA,CAAAE,SAAA;IAAAS,QAAA,gBACEX,OAAA,CAACF,MAAM;MAACS,KAAK,EAAEA,KAAM;MAACF,WAAW,EAAEA;IAAY;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACjDf,OAAA,CAACH,GAAG;MAACmB,KAAK,EAAEX;IAAY;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eAC3B,CAAC;AAEP;AAACX,EAAA,CAnBuBD,MAAM;AAAAc,EAAA,GAANd,MAAM;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}