{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\admin\\\\Desktop\\\\graph_app\\\\src\\\\components\\\\graph\\\\GraphComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { generateCoordinates } from \"../../funcs/generateCoords\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function GraphComponent({\n  headers,\n  data\n}) {\n  _s();\n  const canvasRef = useRef(null);\n  const [isDragging, setIsDragging] = useState(false);\n  const [selectedVertex, setSelectedVertex] = useState(null);\n  const [vertexes, setVertexes] = useState([]);\n  const [offset, setOffset] = useState({\n    x: 0,\n    y: 0\n  });\n  const [names, setNames] = useState(headers);\n\n  // рисуем круг\n  const drawCircle = (vert, ctx) => {\n    ctx.beginPath();\n    ctx.arc(vert.x, vert.y, 20, 0, Math.PI * 2); // придумать расположение\n    ctx.fillStyle = \"blue\";\n    ctx.lineWidth = 2;\n    ctx.fill();\n    ctx.fillStyle = \"black\";\n    ctx.font = \"13px Serif\";\n    ctx.fillText(vert.label, vert.x, vert.y - vert.radius - 4);\n    ctx.closePath();\n  };\n\n  // рисуем стрелку\n  const drawArrow = (arr, context) => {\n    const from = arr[0];\n    const to = arr[1];\n    if (from && to) {\n      const headlen = 15; // Длина головы стрелки\n      const dx = to.x - from.x;\n      const dy = to.y - from.y;\n      const angle = Math.atan2(dy, dx);\n      context.beginPath();\n      context.moveTo(from.x, from.y);\n      context.lineTo(to.x + to.radius, to.y - to.radius);\n      context.lineWidth = 2;\n      context.strokeStyle = \"black\";\n      context.stroke();\n\n      // Рисуем голову стрелки\n      context.beginPath();\n      context.moveTo(to.x, to.y);\n      context.lineTo(to.x - headlen * Math.cos(angle - Math.PI / 6), to.y - headlen * Math.sin(angle - Math.PI / 6));\n      context.lineTo(to.x - headlen * Math.cos(angle + Math.PI / 6), to.y - headlen * Math.sin(angle + Math.PI / 6));\n      context.lineTo(to.x, to.y);\n      context.fillStyle = \"black\";\n      context.fill();\n    }\n  };\n  useEffect(() => {\n    // из таблицы удалили строку\n    if (headers.length !== names.length) {\n      let newVertexes = headers.map((h, ind) => {\n        if (h !== \"\") {\n          const vertex = vertexes.find(v => v.label === h);\n          if (vertex) {\n            vertex.id = ind;\n            return vertex;\n          }\n          console.log(\"error!\");\n        }\n        return null;\n      });\n      setNames(headers);\n      setVertexes(newVertexes.filter(el => el !== null));\n      console.log(newVertexes);\n      return;\n    }\n    let newVertexes = headers.map((h, ind) => {\n      if (h !== \"\") {\n        const vertex = vertexes.find(v => v.id === ind);\n        if (vertex) {\n          vertex.label = h;\n          return vertex;\n        }\n        let [xc, yc] = generateCoordinates(canvasRef.current, vertexes);\n        return {\n          label: h,\n          x: xc,\n          y: yc,\n          radius: 20,\n          id: ind\n        };\n      }\n      return null;\n    });\n    setVertexes(newVertexes.filter(el => el !== null));\n    setNames(headers);\n  }, [headers]);\n  useEffect(() => {}, [data]);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    vertexes.forEach(item => {\n      drawCircle(item, ctx);\n    });\n    drawArrow(vertexes, ctx);\n  }, [vertexes]);\n  const handleMouseUp = () => {\n    setIsDragging(false);\n    setSelectedVertex(null);\n  };\n  const handleMouseDown = e => {\n    const mousePos = getMousePos(canvasRef.current, e);\n    console.log(mousePos, vertexes);\n    const clickedCircle = vertexes.find(circle => {\n      return (mousePos.x - circle.x) ** 2 + (mousePos.y - circle.y) ** 2 <= circle.radius ** 2;\n    });\n    console.log(clickedCircle);\n    if (clickedCircle) {\n      setIsDragging(true);\n      setSelectedVertex(clickedCircle);\n      setOffset({\n        x: mousePos.x - clickedCircle.x,\n        y: mousePos.y - clickedCircle.y\n      });\n    }\n  };\n  const handleMouseMove = e => {\n    if (isDragging && selectedVertex) {\n      const mousePos = getMousePos(canvasRef.current, e);\n      const newCircles = vertexes.map(circle => {\n        if (circle.label === selectedVertex.label) {\n          const newX = mousePos.x - offset.x;\n          const newY = mousePos.y - offset.y;\n          // Проверка границ\n          const radius = circle.radius;\n          if (newX - radius < 0) return {\n            ...circle,\n            x: radius\n          };\n          if (newY - radius < 0) return {\n            ...circle,\n            y: radius\n          };\n          if (newX + radius > canvasRef.current.width) return {\n            ...circle,\n            x: canvasRef.current.width - radius\n          };\n          if (newY + radius > canvasRef.current.height) return {\n            ...circle,\n            y: canvasRef.current.height - radius\n          };\n          return {\n            ...circle,\n            x: newX,\n            y: newY\n          };\n        }\n        return circle;\n      });\n      setVertexes(newCircles);\n    }\n  };\n  const getMousePos = (canvas, evt) => {\n    const rect = canvas.getBoundingClientRect();\n    return {\n      x: evt.clientX - rect.left,\n      y: evt.clientY - rect.top\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    width: \"880\",\n    height: \"600\",\n    onMouseDown: handleMouseDown,\n    onMouseMove: handleMouseMove,\n    onMouseUp: handleMouseUp\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 5\n  }, this);\n}\n_s(GraphComponent, \"rJ5znkpL4MiJtthQpB/wT6pHwYU=\");\n_c = GraphComponent;\nvar _c;\n$RefreshReg$(_c, \"GraphComponent\");","map":{"version":3,"names":["React","useEffect","useRef","useState","generateCoordinates","jsxDEV","_jsxDEV","GraphComponent","headers","data","_s","canvasRef","isDragging","setIsDragging","selectedVertex","setSelectedVertex","vertexes","setVertexes","offset","setOffset","x","y","names","setNames","drawCircle","vert","ctx","beginPath","arc","Math","PI","fillStyle","lineWidth","fill","font","fillText","label","radius","closePath","drawArrow","arr","context","from","to","headlen","dx","dy","angle","atan2","moveTo","lineTo","strokeStyle","stroke","cos","sin","length","newVertexes","map","h","ind","vertex","find","v","id","console","log","filter","el","xc","yc","current","canvas","getContext","clearRect","width","height","forEach","item","handleMouseUp","handleMouseDown","e","mousePos","getMousePos","clickedCircle","circle","handleMouseMove","newCircles","newX","newY","evt","rect","getBoundingClientRect","clientX","left","clientY","top","ref","onMouseDown","onMouseMove","onMouseUp","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Users/admin/Desktop/graph_app/src/components/graph/GraphComponent.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport { generateCoordinates } from \"../../funcs/generateCoords\";\r\n\r\nexport default function GraphComponent({ headers, data }) {\r\n  const canvasRef = useRef(null);\r\n\r\n  const [isDragging, setIsDragging] = useState(false);\r\n  const [selectedVertex, setSelectedVertex] = useState(null);\r\n  const [vertexes, setVertexes] = useState([]);\r\n  const [offset, setOffset] = useState({ x: 0, y: 0 });\r\n  const [names, setNames] = useState(headers);\r\n\r\n  // рисуем круг\r\n  const drawCircle = (vert, ctx) => {\r\n    ctx.beginPath();\r\n    ctx.arc(vert.x, vert.y, 20, 0, Math.PI * 2); // придумать расположение\r\n    ctx.fillStyle = \"blue\";\r\n    ctx.lineWidth = 2;\r\n    ctx.fill();\r\n\r\n    ctx.fillStyle = \"black\";\r\n    ctx.font = \"13px Serif\";\r\n    ctx.fillText(vert.label, vert.x, vert.y - vert.radius - 4);\r\n    ctx.closePath();\r\n  };\r\n\r\n  // рисуем стрелку\r\n  const drawArrow = (arr, context) => {\r\n    const from = arr[0];\r\n    const to = arr[1];\r\n    if (from && to) {\r\n      const headlen = 15; // Длина головы стрелки\r\n      const dx = to.x - from.x;\r\n      const dy = to.y - from.y;\r\n      const angle = Math.atan2(dy, dx);\r\n\r\n      context.beginPath();\r\n      context.moveTo(from.x, from.y);\r\n      context.lineTo(to.x+to.radius, to.y-to.radius);\r\n      context.lineWidth = 2;\r\n      context.strokeStyle = \"black\";\r\n      context.stroke();\r\n\r\n      // Рисуем голову стрелки\r\n      context.beginPath();\r\n      context.moveTo(to.x, to.y);\r\n      context.lineTo(\r\n        to.x - headlen * Math.cos(angle - Math.PI / 6),\r\n        to.y - headlen * Math.sin(angle - Math.PI / 6)\r\n      );\r\n      context.lineTo(\r\n        to.x - headlen * Math.cos(angle + Math.PI / 6),\r\n        to.y - headlen * Math.sin(angle + Math.PI / 6)\r\n      );\r\n      context.lineTo(to.x, to.y);\r\n      context.fillStyle = \"black\";\r\n      context.fill();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // из таблицы удалили строку\r\n    if (headers.length !== names.length) {\r\n      let newVertexes = headers.map((h, ind) => {\r\n        if (h !== \"\") {\r\n          const vertex = vertexes.find((v) => v.label === h);\r\n          if (vertex) {\r\n            vertex.id = ind;\r\n            return vertex;\r\n          }\r\n          console.log(\"error!\");\r\n        }\r\n        return null;\r\n      });\r\n      setNames(headers);\r\n      setVertexes(newVertexes.filter((el) => el !== null));\r\n      console.log(newVertexes);\r\n      return;\r\n    }\r\n\r\n    let newVertexes = headers.map((h, ind) => {\r\n      if (h !== \"\") {\r\n        const vertex = vertexes.find((v) => v.id === ind);\r\n        if (vertex) {\r\n          vertex.label = h;\r\n          return vertex;\r\n        }\r\n        let [xc, yc] = generateCoordinates(canvasRef.current, vertexes);\r\n        return {\r\n          label: h,\r\n          x: xc,\r\n          y: yc,\r\n          radius: 20,\r\n          id: ind,\r\n        };\r\n      }\r\n      return null;\r\n    });\r\n    setVertexes(newVertexes.filter((el) => el !== null));\r\n    setNames(headers);\r\n  }, [headers]);\r\n\r\n  useEffect(() => {}, [data]);\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext(\"2d\");\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n    vertexes.forEach((item) => {\r\n      drawCircle(item, ctx);\r\n    });\r\n    drawArrow(vertexes, ctx);\r\n  }, [vertexes]);\r\n\r\n  const handleMouseUp = () => {\r\n    setIsDragging(false);\r\n    setSelectedVertex(null);\r\n  };\r\n\r\n  const handleMouseDown = (e) => {\r\n    const mousePos = getMousePos(canvasRef.current, e);\r\n    console.log(mousePos, vertexes);\r\n    const clickedCircle = vertexes.find((circle) => {\r\n      return (\r\n        (mousePos.x - circle.x) ** 2 + (mousePos.y - circle.y) ** 2 <=\r\n        circle.radius ** 2\r\n      );\r\n    });\r\n    console.log(clickedCircle);\r\n    if (clickedCircle) {\r\n      setIsDragging(true);\r\n      setSelectedVertex(clickedCircle);\r\n      setOffset({\r\n        x: mousePos.x - clickedCircle.x,\r\n        y: mousePos.y - clickedCircle.y,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleMouseMove = (e) => {\r\n    if (isDragging && selectedVertex) {\r\n      const mousePos = getMousePos(canvasRef.current, e);\r\n      const newCircles = vertexes.map((circle) => {\r\n        if (circle.label === selectedVertex.label) {\r\n          const newX = mousePos.x - offset.x;\r\n          const newY = mousePos.y - offset.y;\r\n          // Проверка границ\r\n          const radius = circle.radius;\r\n          if (newX - radius < 0) return { ...circle, x: radius };\r\n          if (newY - radius < 0) return { ...circle, y: radius };\r\n          if (newX + radius > canvasRef.current.width)\r\n            return { ...circle, x: canvasRef.current.width - radius };\r\n          if (newY + radius > canvasRef.current.height)\r\n            return { ...circle, y: canvasRef.current.height - radius };\r\n\r\n          return { ...circle, x: newX, y: newY };\r\n        }\r\n        return circle;\r\n      });\r\n\r\n      setVertexes(newCircles);\r\n    }\r\n  };\r\n\r\n  const getMousePos = (canvas, evt) => {\r\n    const rect = canvas.getBoundingClientRect();\r\n    return {\r\n      x: evt.clientX - rect.left,\r\n      y: evt.clientY - rect.top,\r\n    };\r\n  };\r\n\r\n  return (\r\n    <canvas\r\n      ref={canvasRef}\r\n      width=\"880\"\r\n      height=\"600\"\r\n      onMouseDown={handleMouseDown}\r\n      onMouseMove={handleMouseMove}\r\n      onMouseUp={handleMouseUp}\r\n    />\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,SAASC,mBAAmB,QAAQ,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjE,eAAe,SAASC,cAAcA,CAAC;EAAEC,OAAO;EAAEC;AAAK,CAAC,EAAE;EAAAC,EAAA;EACxD,MAAMC,SAAS,GAAGT,MAAM,CAAC,IAAI,CAAC;EAE9B,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACW,cAAc,EAAEC,iBAAiB,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACe,MAAM,EAAEC,SAAS,CAAC,GAAGhB,QAAQ,CAAC;IAAEiB,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAE;EAAE,CAAC,CAAC;EACpD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGpB,QAAQ,CAACK,OAAO,CAAC;;EAE3C;EACA,MAAMgB,UAAU,GAAGA,CAACC,IAAI,EAAEC,GAAG,KAAK;IAChCA,GAAG,CAACC,SAAS,CAAC,CAAC;IACfD,GAAG,CAACE,GAAG,CAACH,IAAI,CAACL,CAAC,EAAEK,IAAI,CAACJ,CAAC,EAAE,EAAE,EAAE,CAAC,EAAEQ,IAAI,CAACC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC7CJ,GAAG,CAACK,SAAS,GAAG,MAAM;IACtBL,GAAG,CAACM,SAAS,GAAG,CAAC;IACjBN,GAAG,CAACO,IAAI,CAAC,CAAC;IAEVP,GAAG,CAACK,SAAS,GAAG,OAAO;IACvBL,GAAG,CAACQ,IAAI,GAAG,YAAY;IACvBR,GAAG,CAACS,QAAQ,CAACV,IAAI,CAACW,KAAK,EAAEX,IAAI,CAACL,CAAC,EAAEK,IAAI,CAACJ,CAAC,GAAGI,IAAI,CAACY,MAAM,GAAG,CAAC,CAAC;IAC1DX,GAAG,CAACY,SAAS,CAAC,CAAC;EACjB,CAAC;;EAED;EACA,MAAMC,SAAS,GAAGA,CAACC,GAAG,EAAEC,OAAO,KAAK;IAClC,MAAMC,IAAI,GAAGF,GAAG,CAAC,CAAC,CAAC;IACnB,MAAMG,EAAE,GAAGH,GAAG,CAAC,CAAC,CAAC;IACjB,IAAIE,IAAI,IAAIC,EAAE,EAAE;MACd,MAAMC,OAAO,GAAG,EAAE,CAAC,CAAC;MACpB,MAAMC,EAAE,GAAGF,EAAE,CAACvB,CAAC,GAAGsB,IAAI,CAACtB,CAAC;MACxB,MAAM0B,EAAE,GAAGH,EAAE,CAACtB,CAAC,GAAGqB,IAAI,CAACrB,CAAC;MACxB,MAAM0B,KAAK,GAAGlB,IAAI,CAACmB,KAAK,CAACF,EAAE,EAAED,EAAE,CAAC;MAEhCJ,OAAO,CAACd,SAAS,CAAC,CAAC;MACnBc,OAAO,CAACQ,MAAM,CAACP,IAAI,CAACtB,CAAC,EAAEsB,IAAI,CAACrB,CAAC,CAAC;MAC9BoB,OAAO,CAACS,MAAM,CAACP,EAAE,CAACvB,CAAC,GAACuB,EAAE,CAACN,MAAM,EAAEM,EAAE,CAACtB,CAAC,GAACsB,EAAE,CAACN,MAAM,CAAC;MAC9CI,OAAO,CAACT,SAAS,GAAG,CAAC;MACrBS,OAAO,CAACU,WAAW,GAAG,OAAO;MAC7BV,OAAO,CAACW,MAAM,CAAC,CAAC;;MAEhB;MACAX,OAAO,CAACd,SAAS,CAAC,CAAC;MACnBc,OAAO,CAACQ,MAAM,CAACN,EAAE,CAACvB,CAAC,EAAEuB,EAAE,CAACtB,CAAC,CAAC;MAC1BoB,OAAO,CAACS,MAAM,CACZP,EAAE,CAACvB,CAAC,GAAGwB,OAAO,GAAGf,IAAI,CAACwB,GAAG,CAACN,KAAK,GAAGlB,IAAI,CAACC,EAAE,GAAG,CAAC,CAAC,EAC9Ca,EAAE,CAACtB,CAAC,GAAGuB,OAAO,GAAGf,IAAI,CAACyB,GAAG,CAACP,KAAK,GAAGlB,IAAI,CAACC,EAAE,GAAG,CAAC,CAC/C,CAAC;MACDW,OAAO,CAACS,MAAM,CACZP,EAAE,CAACvB,CAAC,GAAGwB,OAAO,GAAGf,IAAI,CAACwB,GAAG,CAACN,KAAK,GAAGlB,IAAI,CAACC,EAAE,GAAG,CAAC,CAAC,EAC9Ca,EAAE,CAACtB,CAAC,GAAGuB,OAAO,GAAGf,IAAI,CAACyB,GAAG,CAACP,KAAK,GAAGlB,IAAI,CAACC,EAAE,GAAG,CAAC,CAC/C,CAAC;MACDW,OAAO,CAACS,MAAM,CAACP,EAAE,CAACvB,CAAC,EAAEuB,EAAE,CAACtB,CAAC,CAAC;MAC1BoB,OAAO,CAACV,SAAS,GAAG,OAAO;MAC3BU,OAAO,CAACR,IAAI,CAAC,CAAC;IAChB;EACF,CAAC;EAEDhC,SAAS,CAAC,MAAM;IACd;IACA,IAAIO,OAAO,CAAC+C,MAAM,KAAKjC,KAAK,CAACiC,MAAM,EAAE;MACnC,IAAIC,WAAW,GAAGhD,OAAO,CAACiD,GAAG,CAAC,CAACC,CAAC,EAAEC,GAAG,KAAK;QACxC,IAAID,CAAC,KAAK,EAAE,EAAE;UACZ,MAAME,MAAM,GAAG5C,QAAQ,CAAC6C,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAAC1B,KAAK,KAAKsB,CAAC,CAAC;UAClD,IAAIE,MAAM,EAAE;YACVA,MAAM,CAACG,EAAE,GAAGJ,GAAG;YACf,OAAOC,MAAM;UACf;UACAI,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;QACvB;QACA,OAAO,IAAI;MACb,CAAC,CAAC;MACF1C,QAAQ,CAACf,OAAO,CAAC;MACjBS,WAAW,CAACuC,WAAW,CAACU,MAAM,CAAEC,EAAE,IAAKA,EAAE,KAAK,IAAI,CAAC,CAAC;MACpDH,OAAO,CAACC,GAAG,CAACT,WAAW,CAAC;MACxB;IACF;IAEA,IAAIA,WAAW,GAAGhD,OAAO,CAACiD,GAAG,CAAC,CAACC,CAAC,EAAEC,GAAG,KAAK;MACxC,IAAID,CAAC,KAAK,EAAE,EAAE;QACZ,MAAME,MAAM,GAAG5C,QAAQ,CAAC6C,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKJ,GAAG,CAAC;QACjD,IAAIC,MAAM,EAAE;UACVA,MAAM,CAACxB,KAAK,GAAGsB,CAAC;UAChB,OAAOE,MAAM;QACf;QACA,IAAI,CAACQ,EAAE,EAAEC,EAAE,CAAC,GAAGjE,mBAAmB,CAACO,SAAS,CAAC2D,OAAO,EAAEtD,QAAQ,CAAC;QAC/D,OAAO;UACLoB,KAAK,EAAEsB,CAAC;UACRtC,CAAC,EAAEgD,EAAE;UACL/C,CAAC,EAAEgD,EAAE;UACLhC,MAAM,EAAE,EAAE;UACV0B,EAAE,EAAEJ;QACN,CAAC;MACH;MACA,OAAO,IAAI;IACb,CAAC,CAAC;IACF1C,WAAW,CAACuC,WAAW,CAACU,MAAM,CAAEC,EAAE,IAAKA,EAAE,KAAK,IAAI,CAAC,CAAC;IACpD5C,QAAQ,CAACf,OAAO,CAAC;EACnB,CAAC,EAAE,CAACA,OAAO,CAAC,CAAC;EAEbP,SAAS,CAAC,MAAM,CAAC,CAAC,EAAE,CAACQ,IAAI,CAAC,CAAC;EAE3BR,SAAS,CAAC,MAAM;IACd,MAAMsE,MAAM,GAAG5D,SAAS,CAAC2D,OAAO;IAChC,MAAM5C,GAAG,GAAG6C,MAAM,CAACC,UAAU,CAAC,IAAI,CAAC;IACnC9C,GAAG,CAAC+C,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEF,MAAM,CAACG,KAAK,EAAEH,MAAM,CAACI,MAAM,CAAC;IAEhD3D,QAAQ,CAAC4D,OAAO,CAAEC,IAAI,IAAK;MACzBrD,UAAU,CAACqD,IAAI,EAAEnD,GAAG,CAAC;IACvB,CAAC,CAAC;IACFa,SAAS,CAACvB,QAAQ,EAAEU,GAAG,CAAC;EAC1B,CAAC,EAAE,CAACV,QAAQ,CAAC,CAAC;EAEd,MAAM8D,aAAa,GAAGA,CAAA,KAAM;IAC1BjE,aAAa,CAAC,KAAK,CAAC;IACpBE,iBAAiB,CAAC,IAAI,CAAC;EACzB,CAAC;EAED,MAAMgE,eAAe,GAAIC,CAAC,IAAK;IAC7B,MAAMC,QAAQ,GAAGC,WAAW,CAACvE,SAAS,CAAC2D,OAAO,EAAEU,CAAC,CAAC;IAClDhB,OAAO,CAACC,GAAG,CAACgB,QAAQ,EAAEjE,QAAQ,CAAC;IAC/B,MAAMmE,aAAa,GAAGnE,QAAQ,CAAC6C,IAAI,CAAEuB,MAAM,IAAK;MAC9C,OACE,CAACH,QAAQ,CAAC7D,CAAC,GAAGgE,MAAM,CAAChE,CAAC,KAAK,CAAC,GAAG,CAAC6D,QAAQ,CAAC5D,CAAC,GAAG+D,MAAM,CAAC/D,CAAC,KAAK,CAAC,IAC3D+D,MAAM,CAAC/C,MAAM,IAAI,CAAC;IAEtB,CAAC,CAAC;IACF2B,OAAO,CAACC,GAAG,CAACkB,aAAa,CAAC;IAC1B,IAAIA,aAAa,EAAE;MACjBtE,aAAa,CAAC,IAAI,CAAC;MACnBE,iBAAiB,CAACoE,aAAa,CAAC;MAChChE,SAAS,CAAC;QACRC,CAAC,EAAE6D,QAAQ,CAAC7D,CAAC,GAAG+D,aAAa,CAAC/D,CAAC;QAC/BC,CAAC,EAAE4D,QAAQ,CAAC5D,CAAC,GAAG8D,aAAa,CAAC9D;MAChC,CAAC,CAAC;IACJ;EACF,CAAC;EAED,MAAMgE,eAAe,GAAIL,CAAC,IAAK;IAC7B,IAAIpE,UAAU,IAAIE,cAAc,EAAE;MAChC,MAAMmE,QAAQ,GAAGC,WAAW,CAACvE,SAAS,CAAC2D,OAAO,EAAEU,CAAC,CAAC;MAClD,MAAMM,UAAU,GAAGtE,QAAQ,CAACyC,GAAG,CAAE2B,MAAM,IAAK;QAC1C,IAAIA,MAAM,CAAChD,KAAK,KAAKtB,cAAc,CAACsB,KAAK,EAAE;UACzC,MAAMmD,IAAI,GAAGN,QAAQ,CAAC7D,CAAC,GAAGF,MAAM,CAACE,CAAC;UAClC,MAAMoE,IAAI,GAAGP,QAAQ,CAAC5D,CAAC,GAAGH,MAAM,CAACG,CAAC;UAClC;UACA,MAAMgB,MAAM,GAAG+C,MAAM,CAAC/C,MAAM;UAC5B,IAAIkD,IAAI,GAAGlD,MAAM,GAAG,CAAC,EAAE,OAAO;YAAE,GAAG+C,MAAM;YAAEhE,CAAC,EAAEiB;UAAO,CAAC;UACtD,IAAImD,IAAI,GAAGnD,MAAM,GAAG,CAAC,EAAE,OAAO;YAAE,GAAG+C,MAAM;YAAE/D,CAAC,EAAEgB;UAAO,CAAC;UACtD,IAAIkD,IAAI,GAAGlD,MAAM,GAAG1B,SAAS,CAAC2D,OAAO,CAACI,KAAK,EACzC,OAAO;YAAE,GAAGU,MAAM;YAAEhE,CAAC,EAAET,SAAS,CAAC2D,OAAO,CAACI,KAAK,GAAGrC;UAAO,CAAC;UAC3D,IAAImD,IAAI,GAAGnD,MAAM,GAAG1B,SAAS,CAAC2D,OAAO,CAACK,MAAM,EAC1C,OAAO;YAAE,GAAGS,MAAM;YAAE/D,CAAC,EAAEV,SAAS,CAAC2D,OAAO,CAACK,MAAM,GAAGtC;UAAO,CAAC;UAE5D,OAAO;YAAE,GAAG+C,MAAM;YAAEhE,CAAC,EAAEmE,IAAI;YAAElE,CAAC,EAAEmE;UAAK,CAAC;QACxC;QACA,OAAOJ,MAAM;MACf,CAAC,CAAC;MAEFnE,WAAW,CAACqE,UAAU,CAAC;IACzB;EACF,CAAC;EAED,MAAMJ,WAAW,GAAGA,CAACX,MAAM,EAAEkB,GAAG,KAAK;IACnC,MAAMC,IAAI,GAAGnB,MAAM,CAACoB,qBAAqB,CAAC,CAAC;IAC3C,OAAO;MACLvE,CAAC,EAAEqE,GAAG,CAACG,OAAO,GAAGF,IAAI,CAACG,IAAI;MAC1BxE,CAAC,EAAEoE,GAAG,CAACK,OAAO,GAAGJ,IAAI,CAACK;IACxB,CAAC;EACH,CAAC;EAED,oBACEzF,OAAA;IACE0F,GAAG,EAAErF,SAAU;IACf+D,KAAK,EAAC,KAAK;IACXC,MAAM,EAAC,KAAK;IACZsB,WAAW,EAAElB,eAAgB;IAC7BmB,WAAW,EAAEb,eAAgB;IAC7Bc,SAAS,EAAErB;EAAc;IAAAsB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1B,CAAC;AAEN;AAAC7F,EAAA,CApLuBH,cAAc;AAAAiG,EAAA,GAAdjG,cAAc;AAAA,IAAAiG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}