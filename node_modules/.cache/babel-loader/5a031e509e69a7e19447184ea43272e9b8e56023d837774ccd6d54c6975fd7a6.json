{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\admin\\\\Desktop\\\\graph_app\\\\src\\\\components\\\\graph\\\\GraphComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { generateCoordinates, getMousePos } from \"../../funcs/generateCoords\";\nimport VertexContextMenu from \"./VertexContextMenu.jsx\";\nimport CanvasContextMenu from \"./CanvasContextMenu.jsx\";\nimport { drawArrow, drawCircle } from \"../../funcs/drawing.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function GraphComponent({\n  headers,\n  setHeaders,\n  inpData,\n  setInpData,\n  start,\n  end,\n  setStart,\n  setEnd,\n  setDeleted,\n  setInserted\n}) {\n  _s();\n  var _inpData$clickedVerte, _inpData$clickedVerte2;\n  const canvasRef = useRef(null);\n  const [isDragging, setIsDragging] = useState(false);\n  const [selectedVertex, setSelectedVertex] = useState(null);\n  const [vertexes, setVertexes] = useState([]);\n  const [offset, setOffset] = useState({\n    x: 0,\n    y: 0\n  });\n  const [names, setNames] = useState(headers);\n  const [context, setContext] = React.useState(false);\n  const [xyPosition, setxyPosition] = React.useState({\n    x: 0,\n    y: 0\n  });\n  const [clickedVertex, setClickedVertex] = useState(null);\n  const [menuOn, setMenuOn] = useState(true);\n  const [canvasContext, setCanvasContext] = React.useState(false);\n  const [canvasXYPosition, setCanvasXYPosition] = React.useState({\n    x: 0,\n    y: 0\n  });\n  const [clickedCoords, setClickedCoords] = useState(null);\n\n  // контекстные меню по клику\n  const showContext = (event, contextFunc, xyFunc) => {\n    contextFunc(false);\n    const positionChange = {\n      x: event.pageX,\n      y: event.pageY\n    };\n    xyFunc(positionChange);\n    contextFunc(true);\n  };\n  function handleClick(e) {\n    e.preventDefault();\n    const mousePos = getMousePos(canvasRef.current, e);\n    const clickedCircle = vertexes.find(circle => {\n      return (mousePos.x - circle.x) ** 2 + (mousePos.y - circle.y) ** 2 <= circle.radius ** 2;\n    });\n    if (clickedCircle) {\n      if (!menuOn) {\n        setContext(false);\n        setMenuOn(true);\n        return;\n      }\n      setCanvasContext(false);\n      setClickedVertex(clickedCircle);\n      showContext(e, setContext, setxyPosition);\n    } else {\n      showContext(e, setCanvasContext, setCanvasXYPosition);\n      setContext(false);\n      setMenuOn(true);\n    }\n  }\n\n  // выбор вершины начальной\n  const handleStart = () => {\n    setVertexes(vertexes.map(v => {\n      if (v.label === clickedVertex.label) {\n        if (v.label === end) {\n          setEnd(\"\");\n        }\n        setStart(v.label);\n        return {\n          ...v,\n          fillStyle: \"LightCyan\"\n        };\n      }\n      if (v.label === end) {\n        return {\n          ...v,\n          fillStyle: \"MediumTurquoise\"\n        };\n      }\n      return {\n        ...v,\n        fillStyle: \"PaleTurquoise\"\n      };\n    }));\n  };\n\n  // выбор вершины конечной\n  const handleEnd = () => {\n    setVertexes(vertexes.map(v => {\n      if (v.label === clickedVertex.label) {\n        if (v.label === start) {\n          setStart(\"\");\n        }\n        setEnd(v.label);\n        return {\n          ...v,\n          fillStyle: \"MediumTurquoise\"\n        };\n      }\n      if (v.label === start) {\n        return {\n          ...v,\n          fillStyle: \"LightCyan\"\n        };\n      }\n      return {\n        ...v,\n        fillStyle: \"PaleTurquoise\"\n      };\n    }));\n  };\n\n  // удаление вершины\n  const removeVertex = () => {\n    const h = headers.map(x => {\n      if (x === clickedVertex.label) return \"\";else return x;\n    });\n    setHeaders(h);\n    setDeleted(clickedVertex.id);\n    setTimeout(() => {\n      setDeleted(null);\n    }, 500);\n    if (clickedVertex.label === start) setStart(\"\");\n    if (clickedVertex.label === end) setEnd(\"\");\n  };\n\n  // добавление вершины\n  const addVertex = label => {\n    const newHeaders = headers.slice();\n    if (headers.includes(\"\")) {\n      const ind = headers.indexOf(\"\");\n      newHeaders[ind] = label;\n      setHeaders(prev => {\n        setClickedCoords({\n          x: canvasXYPosition.x,\n          y: canvasXYPosition.y,\n          headers: newHeaders\n        });\n        return newHeaders;\n      });\n    } else {\n      setClickedCoords({\n        x: canvasXYPosition.x,\n        y: canvasXYPosition.y,\n        headers: newHeaders\n      });\n      setTimeout(() => {\n        setInserted({\n          ind: names.length - 1,\n          val: label\n        });\n      }, 200);\n      setTimeout(() => {\n        setInserted(null);\n      }, 100);\n    }\n  };\n\n  // операции с ребрами -----------------------------------------------------\n  // изменение веса ребра\n  function handleChangeArc(label, value) {\n    const newData = inpData.map((row, rIdx) => {\n      if (rIdx === clickedVertex.id) {\n        const newRow = [...row];\n        const colIndex = headers.indexOf(label);\n        newRow[colIndex] = value;\n        return newRow;\n      }\n      return row;\n    });\n    setInpData(newData);\n  }\n  useEffect(() => {\n    if (headers.length !== names.length) {\n      let newVertexes = headers.map((h, ind) => {\n        if (h !== \"\") {\n          const vertex = vertexes.find(v => v.label === h);\n          if (vertex) {\n            vertex.id = ind;\n            return vertex;\n          }\n          if (!names.includes(h)) {\n            let [xc, yc] = clickedCoords === null ? generateCoordinates(canvasRef.current, vertexes) : [clickedCoords.x, clickedCoords.y];\n            setClickedCoords(null);\n            return {\n              label: h,\n              x: xc,\n              y: yc,\n              radius: 20,\n              id: ind,\n              fillStyle: \"PaleTurquoise\"\n            };\n          }\n        }\n        return null;\n      });\n      setNames(headers);\n      setVertexes(newVertexes.filter(el => el !== null));\n      return;\n    }\n    let newVertexes = headers.map((h, ind) => {\n      if (h !== \"\") {\n        const vertex = vertexes.find(v => v.id === ind);\n        if (vertex) {\n          vertex.label = h;\n          return vertex;\n        }\n        let [xc, yc] = clickedCoords === null ? generateCoordinates(canvasRef.current, vertexes) : [clickedCoords.x, clickedCoords.y];\n        setClickedCoords(null);\n        return {\n          label: h,\n          x: xc,\n          y: yc,\n          radius: 20,\n          id: ind,\n          fillStyle: \"PaleTurquoise\"\n        };\n      }\n      return null;\n    });\n    setVertexes(newVertexes.filter(el => el !== null));\n    setNames(headers);\n  }, [headers]);\n\n  // поменяли веса в таблице\n  useEffect(() => {\n    canvasRef.current.getContext(\"2d\").clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n    vertexes.forEach(item => {\n      drawCircle(item, canvasRef.current.getContext(\"2d\"));\n    });\n    for (let i = 0; i < inpData.length; i++) {\n      for (let j = 0; j < inpData[i].length; j++) {\n        const circle1 = vertexes.find(v => v.id === i);\n        const circle2 = vertexes.find(v => v.id === j);\n        const weight = parseInt(inpData[i][j]) ? parseInt(inpData[i][j]) : 0;\n        drawArrow(circle1, circle2, weight, canvasRef.current.getContext(\"2d\"));\n      }\n    }\n  }, [inpData]);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    vertexes.forEach(item => {\n      drawCircle(item, ctx);\n    });\n    for (let i = 0; i < (inpData === null || inpData === void 0 ? void 0 : inpData.length); i++) {\n      for (let j = 0; j < ((_inpData$i = inpData[i]) === null || _inpData$i === void 0 ? void 0 : _inpData$i.length); j++) {\n        var _inpData$i;\n        const circle1 = vertexes.find(v => v.id === i);\n        const circle2 = vertexes.find(v => v.id === j);\n        const weight = parseInt(inpData[i][j]) ? parseInt(inpData[i][j]) : 0;\n        drawArrow(circle1, circle2, weight, canvasRef.current.getContext(\"2d\"));\n      }\n    }\n  }, [vertexes]);\n  const handleMouseUp = () => {\n    setIsDragging(false);\n    setSelectedVertex(null);\n  };\n  const handleMouseDown = e => {\n    const mousePos = getMousePos(canvasRef.current, e);\n    const clickedCircle = vertexes.find(circle => {\n      return (mousePos.x - circle.x) ** 2 + (mousePos.y - circle.y) ** 2 <= circle.radius ** 2;\n    });\n    if (clickedCircle) {\n      setIsDragging(true);\n      setSelectedVertex(clickedCircle);\n      setOffset({\n        x: mousePos.x - clickedCircle.x,\n        y: mousePos.y - clickedCircle.y\n      });\n    }\n  };\n  const handleMouseMove = e => {\n    if (isDragging && selectedVertex) {\n      setMenuOn(false);\n      const mousePos = getMousePos(canvasRef.current, e);\n      const newCircles = vertexes.map(circle => {\n        if (circle.label === selectedVertex.label) {\n          const newX = mousePos.x - offset.x;\n          const newY = mousePos.y - offset.y;\n          // Проверка границ\n          const radius = circle.radius;\n          if (newX - radius < 0) return {\n            ...circle,\n            x: radius\n          };\n          if (newY - radius < 0) return {\n            ...circle,\n            y: radius\n          };\n          if (newX + radius > canvasRef.current.width) return {\n            ...circle,\n            x: canvasRef.current.width - radius\n          };\n          if (newY + radius > canvasRef.current.height) return {\n            ...circle,\n            y: canvasRef.current.height - radius\n          };\n          return {\n            ...circle,\n            x: newX,\n            y: newY\n          };\n        }\n        return circle;\n      });\n      setVertexes(newCircles);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: \"880\",\n      height: \"600\",\n      onMouseDown: handleMouseDown,\n      onMouseMove: handleMouseMove,\n      onMouseUp: handleMouseUp,\n      onContextMenu: e => handleClick(e),\n      onClick: e => {\n        setContext(false);\n        setCanvasContext(false);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(VertexContextMenu, {\n      context: context,\n      xyPosition: xyPosition,\n      setContext: setContext,\n      del: vertexes.length > 2,\n      addArc: (_inpData$clickedVerte = inpData[clickedVertex === null || clickedVertex === void 0 ? void 0 : clickedVertex.id]) === null || _inpData$clickedVerte === void 0 ? void 0 : _inpData$clickedVerte.some((el, ind) => {\n        return [\"\", \"0\"].includes(el) && headers[ind] != \"\" && headers[ind] != (clickedVertex === null || clickedVertex === void 0 ? void 0 : clickedVertex.label);\n      }),\n      changeArc: (_inpData$clickedVerte2 = inpData[clickedVertex === null || clickedVertex === void 0 ? void 0 : clickedVertex.id]) === null || _inpData$clickedVerte2 === void 0 ? void 0 : _inpData$clickedVerte2.some(el => ![\"\", \"0\"].includes(el)),\n      onStart: handleStart,\n      onEnd: handleEnd,\n      onDelete: removeVertex,\n      onChangeArc: handleChangeArc,\n      names: headers.filter((h, ind) => {\n        if (!clickedVertex) return false;\n        return ![\"\", \"0\"].includes(inpData[clickedVertex === null || clickedVertex === void 0 ? void 0 : clickedVertex.id][ind]);\n      }),\n      notReachedNames: headers.filter((h, ind) => {\n        if (!clickedVertex) return false;\n        return [\"\", \"0\"].includes(inpData[clickedVertex === null || clickedVertex === void 0 ? void 0 : clickedVertex.id][ind]) && [\"\", clickedVertex.label].includes(headers[ind]);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CanvasContextMenu, {\n      context: canvasContext,\n      xyPosition: canvasXYPosition,\n      setContext: setCanvasContext,\n      insert: vertexes.length < 10,\n      onInsert: addVertex\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 318,\n    columnNumber: 5\n  }, this);\n}\n_s(GraphComponent, \"qR0R8N0pKxjmfQtIfjV1SPgUSKU=\");\n_c = GraphComponent;\nvar _c;\n$RefreshReg$(_c, \"GraphComponent\");","map":{"version":3,"names":["React","useEffect","useRef","useState","generateCoordinates","getMousePos","VertexContextMenu","CanvasContextMenu","drawArrow","drawCircle","jsxDEV","_jsxDEV","GraphComponent","headers","setHeaders","inpData","setInpData","start","end","setStart","setEnd","setDeleted","setInserted","_s","_inpData$clickedVerte","_inpData$clickedVerte2","canvasRef","isDragging","setIsDragging","selectedVertex","setSelectedVertex","vertexes","setVertexes","offset","setOffset","x","y","names","setNames","context","setContext","xyPosition","setxyPosition","clickedVertex","setClickedVertex","menuOn","setMenuOn","canvasContext","setCanvasContext","canvasXYPosition","setCanvasXYPosition","clickedCoords","setClickedCoords","showContext","event","contextFunc","xyFunc","positionChange","pageX","pageY","handleClick","e","preventDefault","mousePos","current","clickedCircle","find","circle","radius","handleStart","map","v","label","fillStyle","handleEnd","removeVertex","h","id","setTimeout","addVertex","newHeaders","slice","includes","ind","indexOf","prev","length","val","handleChangeArc","value","newData","row","rIdx","newRow","colIndex","newVertexes","vertex","xc","yc","filter","el","getContext","clearRect","width","height","forEach","item","i","j","circle1","circle2","weight","parseInt","canvas","ctx","_inpData$i","handleMouseUp","handleMouseDown","handleMouseMove","newCircles","newX","newY","children","ref","onMouseDown","onMouseMove","onMouseUp","onContextMenu","onClick","fileName","_jsxFileName","lineNumber","columnNumber","del","addArc","some","changeArc","onStart","onEnd","onDelete","onChangeArc","notReachedNames","insert","onInsert","_c","$RefreshReg$"],"sources":["D:/Users/admin/Desktop/graph_app/src/components/graph/GraphComponent.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport { generateCoordinates, getMousePos } from \"../../funcs/generateCoords\";\r\nimport VertexContextMenu from \"./VertexContextMenu.jsx\";\r\nimport CanvasContextMenu from \"./CanvasContextMenu.jsx\";\r\nimport { drawArrow, drawCircle } from \"../../funcs/drawing.js\";\r\n\r\nexport default function GraphComponent({\r\n  headers,\r\n  setHeaders,\r\n  inpData,\r\n  setInpData,\r\n  start,\r\n  end,\r\n  setStart,\r\n  setEnd,\r\n  setDeleted,\r\n  setInserted,\r\n}) {\r\n  const canvasRef = useRef(null);\r\n\r\n  const [isDragging, setIsDragging] = useState(false);\r\n  const [selectedVertex, setSelectedVertex] = useState(null);\r\n  const [vertexes, setVertexes] = useState([]);\r\n  const [offset, setOffset] = useState({ x: 0, y: 0 });\r\n  const [names, setNames] = useState(headers);\r\n\r\n  const [context, setContext] = React.useState(false);\r\n  const [xyPosition, setxyPosition] = React.useState({ x: 0, y: 0 });\r\n  const [clickedVertex, setClickedVertex] = useState(null);\r\n  const [menuOn, setMenuOn] = useState(true);\r\n\r\n  const [canvasContext, setCanvasContext] = React.useState(false);\r\n  const [canvasXYPosition, setCanvasXYPosition] = React.useState({\r\n    x: 0,\r\n    y: 0,\r\n  });\r\n\r\n  const [clickedCoords, setClickedCoords] = useState(null);\r\n\r\n  // контекстные меню по клику\r\n  const showContext = (event, contextFunc, xyFunc) => {\r\n    contextFunc(false);\r\n    const positionChange = {\r\n      x: event.pageX,\r\n      y: event.pageY,\r\n    };\r\n    xyFunc(positionChange);\r\n    contextFunc(true);\r\n  };\r\n\r\n  function handleClick(e) {\r\n    e.preventDefault();\r\n    const mousePos = getMousePos(canvasRef.current, e);\r\n    const clickedCircle = vertexes.find((circle) => {\r\n      return (\r\n        (mousePos.x - circle.x) ** 2 + (mousePos.y - circle.y) ** 2 <=\r\n        circle.radius ** 2\r\n      );\r\n    });\r\n    if (clickedCircle) {\r\n      if (!menuOn) {\r\n        setContext(false);\r\n        setMenuOn(true);\r\n        return;\r\n      }\r\n      setCanvasContext(false);\r\n      setClickedVertex(clickedCircle);\r\n      showContext(e, setContext, setxyPosition);\r\n    } else {\r\n      showContext(e, setCanvasContext, setCanvasXYPosition);\r\n      setContext(false);\r\n      setMenuOn(true);\r\n    }\r\n  }\r\n\r\n  // выбор вершины начальной\r\n  const handleStart = () => {\r\n    setVertexes(\r\n      vertexes.map((v) => {\r\n        if (v.label === clickedVertex.label) {\r\n          if (v.label === end) {\r\n            setEnd(\"\");\r\n          }\r\n          setStart(v.label);\r\n          return { ...v, fillStyle: \"LightCyan\" };\r\n        }\r\n        if (v.label === end) {\r\n          return { ...v, fillStyle: \"MediumTurquoise\" };\r\n        }\r\n        return { ...v, fillStyle: \"PaleTurquoise\" };\r\n      })\r\n    );\r\n  };\r\n\r\n  // выбор вершины конечной\r\n  const handleEnd = () => {\r\n    setVertexes(\r\n      vertexes.map((v) => {\r\n        if (v.label === clickedVertex.label) {\r\n          if (v.label === start) {\r\n            setStart(\"\");\r\n          }\r\n          setEnd(v.label);\r\n          return { ...v, fillStyle: \"MediumTurquoise\" };\r\n        }\r\n        if (v.label === start) {\r\n          return { ...v, fillStyle: \"LightCyan\" };\r\n        }\r\n        return { ...v, fillStyle: \"PaleTurquoise\" };\r\n      })\r\n    );\r\n  };\r\n\r\n  // удаление вершины\r\n  const removeVertex = () => {\r\n    const h = headers.map((x) => {\r\n      if (x === clickedVertex.label) return \"\";\r\n      else return x;\r\n    });\r\n    setHeaders(h);\r\n    setDeleted(clickedVertex.id);\r\n    setTimeout(() => {\r\n      setDeleted(null);\r\n    }, 500);\r\n    if (clickedVertex.label === start) setStart(\"\");\r\n    if (clickedVertex.label === end) setEnd(\"\");\r\n  };\r\n\r\n  // добавление вершины\r\n  const addVertex = (label) => {\r\n    const newHeaders = headers.slice();\r\n    if (headers.includes(\"\")) {\r\n      const ind = headers.indexOf(\"\");\r\n      newHeaders[ind] = label;\r\n      setHeaders((prev) => {\r\n        setClickedCoords({\r\n          x: canvasXYPosition.x,\r\n          y: canvasXYPosition.y,\r\n          headers: newHeaders,\r\n        });\r\n        return newHeaders;\r\n      });\r\n    } else {\r\n      setClickedCoords({\r\n        x: canvasXYPosition.x,\r\n        y: canvasXYPosition.y,\r\n        headers: newHeaders,\r\n      });\r\n      setTimeout(() => {\r\n        setInserted({ ind: names.length - 1, val: label });\r\n      }, 200);\r\n      setTimeout(() => {\r\n        setInserted(null);\r\n      }, 100);\r\n    }\r\n  };\r\n\r\n  // операции с ребрами -----------------------------------------------------\r\n  // изменение веса ребра\r\n  function handleChangeArc(label, value) {\r\n    const newData = inpData.map((row, rIdx) => {\r\n      if (rIdx === clickedVertex.id) {\r\n        const newRow = [...row];\r\n        const colIndex = headers.indexOf(label);\r\n        newRow[colIndex] = value;\r\n        return newRow;\r\n      }\r\n      return row;\r\n    });\r\n    setInpData(newData);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (headers.length !== names.length) {\r\n      let newVertexes = headers.map((h, ind) => {\r\n        if (h !== \"\") {\r\n          const vertex = vertexes.find((v) => v.label === h);\r\n          if (vertex) {\r\n            vertex.id = ind;\r\n            return vertex;\r\n          }\r\n          if (!names.includes(h)) {\r\n            let [xc, yc] =\r\n              clickedCoords === null\r\n                ? generateCoordinates(canvasRef.current, vertexes)\r\n                : [clickedCoords.x, clickedCoords.y];\r\n            setClickedCoords(null);\r\n            return {\r\n              label: h,\r\n              x: xc,\r\n              y: yc,\r\n              radius: 20,\r\n              id: ind,\r\n              fillStyle: \"PaleTurquoise\",\r\n            };\r\n          }\r\n        }\r\n        return null;\r\n      });\r\n      setNames(headers);\r\n      setVertexes(newVertexes.filter((el) => el !== null));\r\n      return;\r\n    }\r\n    let newVertexes = headers.map((h, ind) => {\r\n      if (h !== \"\") {\r\n        const vertex = vertexes.find((v) => v.id === ind);\r\n        if (vertex) {\r\n          vertex.label = h;\r\n          return vertex;\r\n        }\r\n        let [xc, yc] =\r\n          clickedCoords === null\r\n            ? generateCoordinates(canvasRef.current, vertexes)\r\n            : [clickedCoords.x, clickedCoords.y];\r\n        setClickedCoords(null);\r\n        return {\r\n          label: h,\r\n          x: xc,\r\n          y: yc,\r\n          radius: 20,\r\n          id: ind,\r\n          fillStyle: \"PaleTurquoise\",\r\n        };\r\n      }\r\n      return null;\r\n    });\r\n    setVertexes(newVertexes.filter((el) => el !== null));\r\n    setNames(headers);\r\n  }, [headers]);\r\n\r\n  // поменяли веса в таблице\r\n  useEffect(() => {\r\n    canvasRef.current\r\n      .getContext(\"2d\")\r\n      .clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\r\n    vertexes.forEach((item) => {\r\n      drawCircle(item, canvasRef.current.getContext(\"2d\"));\r\n    });\r\n\r\n    for (let i = 0; i < inpData.length; i++) {\r\n      for (let j = 0; j < inpData[i].length; j++) {\r\n        const circle1 = vertexes.find((v) => v.id === i);\r\n        const circle2 = vertexes.find((v) => v.id === j);\r\n        const weight = parseInt(inpData[i][j]) ? parseInt(inpData[i][j]) : 0;\r\n        drawArrow(circle1, circle2, weight, canvasRef.current.getContext(\"2d\"));\r\n      }\r\n    }\r\n  }, [inpData]);\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext(\"2d\");\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n    vertexes.forEach((item) => {\r\n      drawCircle(item, ctx);\r\n    });\r\n    for (let i = 0; i < inpData?.length; i++) {\r\n      for (let j = 0; j < inpData[i]?.length; j++) {\r\n        const circle1 = vertexes.find((v) => v.id === i);\r\n        const circle2 = vertexes.find((v) => v.id === j);\r\n        const weight = parseInt(inpData[i][j]) ? parseInt(inpData[i][j]) : 0;\r\n        drawArrow(circle1, circle2, weight, canvasRef.current.getContext(\"2d\"));\r\n      }\r\n    }\r\n  }, [vertexes]);\r\n\r\n  const handleMouseUp = () => {\r\n    setIsDragging(false);\r\n    setSelectedVertex(null);\r\n  };\r\n\r\n  const handleMouseDown = (e) => {\r\n    const mousePos = getMousePos(canvasRef.current, e);\r\n    const clickedCircle = vertexes.find((circle) => {\r\n      return (\r\n        (mousePos.x - circle.x) ** 2 + (mousePos.y - circle.y) ** 2 <=\r\n        circle.radius ** 2\r\n      );\r\n    });\r\n    if (clickedCircle) {\r\n      setIsDragging(true);\r\n      setSelectedVertex(clickedCircle);\r\n      setOffset({\r\n        x: mousePos.x - clickedCircle.x,\r\n        y: mousePos.y - clickedCircle.y,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleMouseMove = (e) => {\r\n    if (isDragging && selectedVertex) {\r\n      setMenuOn(false);\r\n      const mousePos = getMousePos(canvasRef.current, e);\r\n      const newCircles = vertexes.map((circle) => {\r\n        if (circle.label === selectedVertex.label) {\r\n          const newX = mousePos.x - offset.x;\r\n          const newY = mousePos.y - offset.y;\r\n          // Проверка границ\r\n          const radius = circle.radius;\r\n          if (newX - radius < 0) return { ...circle, x: radius };\r\n          if (newY - radius < 0) return { ...circle, y: radius };\r\n          if (newX + radius > canvasRef.current.width)\r\n            return { ...circle, x: canvasRef.current.width - radius };\r\n          if (newY + radius > canvasRef.current.height)\r\n            return { ...circle, y: canvasRef.current.height - radius };\r\n\r\n          return { ...circle, x: newX, y: newY };\r\n        }\r\n        return circle;\r\n      });\r\n\r\n      setVertexes(newCircles);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <canvas\r\n        ref={canvasRef}\r\n        width=\"880\"\r\n        height=\"600\"\r\n        onMouseDown={handleMouseDown}\r\n        onMouseMove={handleMouseMove}\r\n        onMouseUp={handleMouseUp}\r\n        onContextMenu={(e) => handleClick(e)}\r\n        onClick={(e) => {\r\n          setContext(false);\r\n          setCanvasContext(false);\r\n        }}\r\n      />\r\n      <VertexContextMenu\r\n        context={context}\r\n        xyPosition={xyPosition}\r\n        setContext={setContext}\r\n        del={vertexes.length > 2}\r\n        addArc={inpData[clickedVertex?.id]?.some((el, ind) => {\r\n          return (\r\n            [\"\", \"0\"].includes(el) &&\r\n            headers[ind] != \"\" &&\r\n            headers[ind] != clickedVertex?.label\r\n          );\r\n        })}\r\n        changeArc={inpData[clickedVertex?.id]?.some(\r\n          (el) => ![\"\", \"0\"].includes(el)\r\n        )}\r\n        onStart={handleStart}\r\n        onEnd={handleEnd}\r\n        onDelete={removeVertex}\r\n        onChangeArc={handleChangeArc}\r\n        names={headers.filter((h, ind) => {\r\n          if (!clickedVertex) return false;\r\n          return ![\"\", \"0\"].includes(inpData[clickedVertex?.id][ind]);\r\n        })}\r\n        notReachedNames={headers.filter((h, ind) => {\r\n          if (!clickedVertex) return false;\r\n          return (\r\n            [\"\", \"0\"].includes(inpData[clickedVertex?.id][ind]) &&\r\n            [\"\", clickedVertex.label].includes(headers[ind])\r\n          );\r\n        })}\r\n      />\r\n      <CanvasContextMenu\r\n        context={canvasContext}\r\n        xyPosition={canvasXYPosition}\r\n        setContext={setCanvasContext}\r\n        insert={vertexes.length < 10}\r\n        onInsert={addVertex}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}