{"ast":null,"code":"export function floyd(data) {\n  console.log(data);\n  data = data.map((r, i) => {\n    return r.map((v, j) => {\n      if (i == j) return 0;\n      if (v == \"\" || v == 0) return Infinity;\n      return parseInt(v);\n    });\n  });\n  console.log(data);\n  const n = data.length;\n  let D = Array.from({\n    length: n\n  }, () => Array.from({\n    length: n\n  }, () => Infinity));\n  for (let i = 0; i < n; i++) {\n    for (let j = 0; j < n; j++) {\n      if (i === j) D[i][j] = 0;else D[i][j] = data[i][j];\n    }\n  }\n  for (let k = 0; k < n; k++) {\n    for (let i = 0; i < n; i++) {\n      for (let j = 0; j < n; j++) {\n        if (D[i][k] !== Infinity && D[k][j] !== Infinity && D[i][j] !== Infinity) D[i][j] = Math.min(D[i][j], D[i][k] + D[k][j]);\n      }\n    }\n  }\n  return D;\n}\n\n// 1 2 3 4","map":{"version":3,"names":["floyd","data","console","log","map","r","i","v","j","Infinity","parseInt","n","length","D","Array","from","k","Math","min"],"sources":["D:/Users/admin/Desktop/graph_app/src/algorithms/floyd.js"],"sourcesContent":["export function floyd(data) {\r\n  console.log(data);\r\n  data = data.map((r, i) => {\r\n    return r.map((v, j) => {\r\n      if (i == j) return 0;\r\n      if (v == \"\" || v == 0) return Infinity;\r\n      return parseInt(v);\r\n    });\r\n  });\r\n  console.log(data);\r\n\r\n  const n = data.length;\r\n  let D = Array.from({ length: n }, () =>\r\n    Array.from({ length: n }, () => Infinity)\r\n  );\r\n\r\n  for (let i = 0; i < n; i++) {\r\n    for (let j = 0; j < n; j++) {\r\n      if (i === j) D[i][j] = 0;\r\n      else D[i][j] = data[i][j];\r\n    }\r\n  }\r\n\r\n  for (let k = 0; k < n; k++) {\r\n    for (let i = 0; i < n; i++) {\r\n      for (let j = 0; j < n; j++) {\r\n        if (\r\n          D[i][k] !== Infinity &&\r\n          D[k][j] !== Infinity &&\r\n          D[i][j] !== Infinity\r\n        )\r\n          D[i][j] = Math.min(D[i][j], D[i][k] + D[k][j]);\r\n      }\r\n    }\r\n  }\r\n\r\n  return D;\r\n}\r\n\r\n// 1 2 3 4\r\n"],"mappings":"AAAA,OAAO,SAASA,KAAKA,CAACC,IAAI,EAAE;EAC1BC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;EACjBA,IAAI,GAAGA,IAAI,CAACG,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;IACxB,OAAOD,CAAC,CAACD,GAAG,CAAC,CAACG,CAAC,EAAEC,CAAC,KAAK;MACrB,IAAIF,CAAC,IAAIE,CAAC,EAAE,OAAO,CAAC;MACpB,IAAID,CAAC,IAAI,EAAE,IAAIA,CAAC,IAAI,CAAC,EAAE,OAAOE,QAAQ;MACtC,OAAOC,QAAQ,CAACH,CAAC,CAAC;IACpB,CAAC,CAAC;EACJ,CAAC,CAAC;EACFL,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;EAEjB,MAAMU,CAAC,GAAGV,IAAI,CAACW,MAAM;EACrB,IAAIC,CAAC,GAAGC,KAAK,CAACC,IAAI,CAAC;IAAEH,MAAM,EAAED;EAAE,CAAC,EAAE,MAChCG,KAAK,CAACC,IAAI,CAAC;IAAEH,MAAM,EAAED;EAAE,CAAC,EAAE,MAAMF,QAAQ,CAC1C,CAAC;EAED,KAAK,IAAIH,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGK,CAAC,EAAEL,CAAC,EAAE,EAAE;IAC1B,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGG,CAAC,EAAEH,CAAC,EAAE,EAAE;MAC1B,IAAIF,CAAC,KAAKE,CAAC,EAAEK,CAAC,CAACP,CAAC,CAAC,CAACE,CAAC,CAAC,GAAG,CAAC,CAAC,KACpBK,CAAC,CAACP,CAAC,CAAC,CAACE,CAAC,CAAC,GAAGP,IAAI,CAACK,CAAC,CAAC,CAACE,CAAC,CAAC;IAC3B;EACF;EAEA,KAAK,IAAIQ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,CAAC,EAAEK,CAAC,EAAE,EAAE;IAC1B,KAAK,IAAIV,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGK,CAAC,EAAEL,CAAC,EAAE,EAAE;MAC1B,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGG,CAAC,EAAEH,CAAC,EAAE,EAAE;QAC1B,IACEK,CAAC,CAACP,CAAC,CAAC,CAACU,CAAC,CAAC,KAAKP,QAAQ,IACpBI,CAAC,CAACG,CAAC,CAAC,CAACR,CAAC,CAAC,KAAKC,QAAQ,IACpBI,CAAC,CAACP,CAAC,CAAC,CAACE,CAAC,CAAC,KAAKC,QAAQ,EAEpBI,CAAC,CAACP,CAAC,CAAC,CAACE,CAAC,CAAC,GAAGS,IAAI,CAACC,GAAG,CAACL,CAAC,CAACP,CAAC,CAAC,CAACE,CAAC,CAAC,EAAEK,CAAC,CAACP,CAAC,CAAC,CAACU,CAAC,CAAC,GAAGH,CAAC,CAACG,CAAC,CAAC,CAACR,CAAC,CAAC,CAAC;MAClD;IACF;EACF;EAEA,OAAOK,CAAC;AACV;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}