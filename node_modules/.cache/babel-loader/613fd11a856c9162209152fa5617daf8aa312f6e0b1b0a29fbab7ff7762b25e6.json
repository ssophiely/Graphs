{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\admin\\\\Desktop\\\\graph_app\\\\src\\\\components\\\\graph\\\\GraphComponent.jsx\",\n  _s = $RefreshSig$();\n// import { Graph } from \"react-d3-graph\";\n\n// function GraphComponent() {\n//   const data = {\n//     nodes: [{ id: \"Harry\" }, { id: \"Sally\" }, { id: \"Alice\" }],\n//     links: [\n//       { source: \"Harry\", target: \"Sally\", weight: 5 , ma},\n//       { source: \"Harry\", target: \"Alice\" },\n//       { source: \"Sally\", target: \"Harry\", weight: 5 },\n//     ],\n//   };\n\n//   // the graph configuration, just override the ones you need\n//   const myConfig = {\n//     nodeHighlightBehavior: true,\n//     node: {\n//       color: \"black\",\n//       size: 220,\n//       highlightStrokeColor: \"red\",\n//     },\n//     link: {\n//       highlightColor: \"yellow\",\n//       renderLabel: true,\n//       labelProperty: \"weight\",\n//       markerHeight: 5,\n//       markerWidth: 3,\n//       type: \"CURVE_SMOOTH\"\n//     },\n//   };\n\n//   const onClickNode = function (nodeId) {\n//     window.alert(`Clicked node ${nodeId}`);\n//   };\n\n//   const onClickLink = function (source, target) {\n//     window.alert(`Clicked link between ${source} and ${target}`);\n//   };\n\n//   return (\n//     <Graph\n//       id=\"graphId\"\n//       data={data}\n//       config={myConfig}\n//       onClickNode={onClickNode}\n//       onClickLink={onClickLink}\n//     />\n//   );\n// }\n\n// export default GraphComponent;\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst nodesData = [{\n  id: 'A',\n  x: 100,\n  y: 100\n}, {\n  id: 'B',\n  x: 300,\n  y: 100\n}, {\n  id: 'C',\n  x: 200,\n  y: 300\n}];\nconst linksData = [{\n  source: 'A',\n  target: 'B',\n  weight: 5\n}, {\n  source: 'B',\n  target: 'C',\n  weight: 3\n}, {\n  source: 'C',\n  target: 'A',\n  weight: 2\n}];\nexport function GraphComponent() {\n  _s();\n  const svgRef = useRef();\n  const [nodes, setNodes] = useState(nodesData);\n  const [links, setLinks] = useState(linksData);\n  useEffect(() => {\n    const svg = d3.select(svgRef.current).attr('width', 600).attr('height', 400);\n    svg.selectAll('*').remove(); // Очистка предыдущего содержимого\n\n    const link = svg.append('g').selectAll('line').data(links).enter().append('line').attr('stroke', '#999').attr('stroke-width', d => d.weight).attr('marker-end', 'url(#arrow)');\n    const node = svg.append('g').selectAll('circle').data(nodes).enter().append('circle').attr('r', 10).attr('fill', 'blue').call(d3.drag().on('start', dragstarted).on('drag', dragged).on('end', dragended));\n    node.append('title').text(d => d.id);\n    const text = svg.append('g').selectAll('text').data(nodes).enter().append('text').attr('dx', 12).attr('dy', '.35em').text(d => d.id);\n    const arrowHead = svg.append('defs').append('marker').attr('id', 'arrow').attr('viewBox', '0 -5 10 10').attr('refX', 15).attr('refY', 0).attr('orient', 'auto').attr('markerWidth', 6).attr('markerHeight', 6).append('polygon').attr('points', '0,-5 10,0 0,5').attr('fill', '#999');\n\n    // Обновляем позицию вершин и рёбер\n    function updateGraph() {\n      link.attr('x1', d => nodes.find(n => n.id === d.source).x).attr('y1', d => nodes.find(n => n.id === d.source).y).attr('x2', d => nodes.find(n => n.id === d.target).x).attr('y2', d => nodes.find(n => n.id === d.target).y);\n      node.attr('cx', d => d.x).attr('cy', d => d.y);\n      text.attr('x', d => d.x).attr('y', d => d.y);\n    }\n\n    // Обработчики перетаскивания\n    function dragstarted(event, d) {\n      d3.select(this).raise().classed('active', true);\n    }\n    function dragged(event, d) {\n      d.x = event.x;\n      d.y = event.y;\n      updateGraph();\n    }\n    function dragended(event, d) {\n      d3.select(this).classed('active', false);\n    }\n    updateGraph(); // Вызов для первоначального отображения\n  }, [nodes, links]);\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    ref: svgRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 9\n  }, this);\n}\n_s(GraphComponent, \"3bhiv/bEWjWswjRWC0fH2e7645o=\");\n_c = GraphComponent;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"GraphComponent\");","map":{"version":3,"names":["React","useEffect","useRef","useState","d3","jsxDEV","_jsxDEV","nodesData","id","x","y","linksData","source","target","weight","GraphComponent","_s","svgRef","nodes","setNodes","links","setLinks","svg","select","current","attr","selectAll","remove","link","append","data","enter","d","node","call","drag","on","dragstarted","dragged","dragended","text","arrowHead","updateGraph","find","n","event","raise","classed","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","$RefreshReg$"],"sources":["D:/Users/admin/Desktop/graph_app/src/components/graph/GraphComponent.jsx"],"sourcesContent":["// import { Graph } from \"react-d3-graph\";\r\n\r\n// function GraphComponent() {\r\n//   const data = {\r\n//     nodes: [{ id: \"Harry\" }, { id: \"Sally\" }, { id: \"Alice\" }],\r\n//     links: [\r\n//       { source: \"Harry\", target: \"Sally\", weight: 5 , ma},\r\n//       { source: \"Harry\", target: \"Alice\" },\r\n//       { source: \"Sally\", target: \"Harry\", weight: 5 },\r\n//     ],\r\n//   };\r\n\r\n//   // the graph configuration, just override the ones you need\r\n//   const myConfig = {\r\n//     nodeHighlightBehavior: true,\r\n//     node: {\r\n//       color: \"black\",\r\n//       size: 220,\r\n//       highlightStrokeColor: \"red\",\r\n//     },\r\n//     link: {\r\n//       highlightColor: \"yellow\",\r\n//       renderLabel: true,\r\n//       labelProperty: \"weight\",\r\n//       markerHeight: 5,\r\n//       markerWidth: 3,\r\n//       type: \"CURVE_SMOOTH\"\r\n//     },\r\n//   };\r\n\r\n//   const onClickNode = function (nodeId) {\r\n//     window.alert(`Clicked node ${nodeId}`);\r\n//   };\r\n\r\n//   const onClickLink = function (source, target) {\r\n//     window.alert(`Clicked link between ${source} and ${target}`);\r\n//   };\r\n\r\n//   return (\r\n//     <Graph\r\n//       id=\"graphId\"\r\n//       data={data}\r\n//       config={myConfig}\r\n//       onClickNode={onClickNode}\r\n//       onClickLink={onClickLink}\r\n//     />\r\n//   );\r\n// }\r\n\r\n// export default GraphComponent;\r\n\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport * as d3 from 'd3';\r\n\r\nconst nodesData = [\r\n    { id: 'A', x: 100, y: 100 },\r\n    { id: 'B', x: 300, y: 100 },\r\n    { id: 'C', x: 200, y: 300 }\r\n];\r\n\r\nconst linksData = [\r\n    { source: 'A', target: 'B', weight: 5 },\r\n    { source: 'B', target: 'C', weight: 3 },\r\n    { source: 'C', target: 'A', weight: 2 }\r\n];\r\n\r\nexport function GraphComponent() {\r\n    const svgRef = useRef();\r\n    const [nodes, setNodes] = useState(nodesData);\r\n    const [links, setLinks] = useState(linksData);\r\n\r\n    useEffect(() => {\r\n        const svg = d3.select(svgRef.current)\r\n            .attr('width', 600)\r\n            .attr('height', 400);\r\n\r\n        svg.selectAll('*').remove(); // Очистка предыдущего содержимого\r\n\r\n        const link = svg.append('g')\r\n            .selectAll('line')\r\n            .data(links)\r\n            .enter()\r\n            .append('line')\r\n            .attr('stroke', '#999')\r\n            .attr('stroke-width', d => d.weight)\r\n            .attr('marker-end', 'url(#arrow)');\r\n\r\n        const node = svg.append('g')\r\n            .selectAll('circle')\r\n            .data(nodes)\r\n            .enter()\r\n            .append('circle')\r\n            .attr('r', 10)\r\n            .attr('fill', 'blue')\r\n            .call(d3.drag()\r\n                .on('start', dragstarted)\r\n                .on('drag', dragged)\r\n                .on('end', dragended));\r\n\r\n        node.append('title')\r\n            .text(d => d.id);\r\n\r\n        const text = svg.append('g')\r\n            .selectAll('text')\r\n            .data(nodes)\r\n            .enter()\r\n            .append('text')\r\n            .attr('dx', 12)\r\n            .attr('dy', '.35em')\r\n            .text(d => d.id);\r\n\r\n        const arrowHead = svg.append('defs').append('marker')\r\n            .attr('id', 'arrow')\r\n            .attr('viewBox', '0 -5 10 10')\r\n            .attr('refX', 15)\r\n            .attr('refY', 0)\r\n            .attr('orient', 'auto')\r\n            .attr('markerWidth', 6)\r\n            .attr('markerHeight', 6)\r\n            .append('polygon')\r\n            .attr('points', '0,-5 10,0 0,5')\r\n            .attr('fill', '#999');\r\n\r\n        // Обновляем позицию вершин и рёбер\r\n        function updateGraph() {\r\n            link\r\n                .attr('x1', d => nodes.find(n => n.id === d.source).x)\r\n                .attr('y1', d => nodes.find(n => n.id === d.source).y)\r\n                .attr('x2', d => nodes.find(n => n.id === d.target).x)\r\n                .attr('y2', d => nodes.find(n => n.id === d.target).y);\r\n\r\n            node\r\n                .attr('cx', d => d.x)\r\n                .attr('cy', d => d.y);\r\n\r\n            text\r\n                .attr('x', d => d.x)\r\n                .attr('y', d => d.y);\r\n        }\r\n\r\n        // Обработчики перетаскивания\r\n        function dragstarted(event, d) {\r\n            d3.select(this).raise().classed('active', true);\r\n        }\r\n\r\n        function dragged(event, d) {\r\n            d.x = event.x;\r\n            d.y = event.y;\r\n            updateGraph();\r\n        }\r\n\r\n        function dragended(event, d) {\r\n            d3.select(this).classed('active', false);\r\n        }\r\n\r\n        updateGraph(); // Вызов для первоначального отображения\r\n\r\n    }, [nodes, links]);\r\n\r\n    return (\r\n        <svg ref={svgRef}></svg>\r\n    );\r\n}\r\n\r\nexport default App;"],"mappings":";;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAO,KAAKC,EAAE,MAAM,IAAI;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,SAAS,GAAG,CACd;EAAEC,EAAE,EAAE,GAAG;EAAEC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE;AAAI,CAAC,EAC3B;EAAEF,EAAE,EAAE,GAAG;EAAEC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE;AAAI,CAAC,EAC3B;EAAEF,EAAE,EAAE,GAAG;EAAEC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE;AAAI,CAAC,CAC9B;AAED,MAAMC,SAAS,GAAG,CACd;EAAEC,MAAM,EAAE,GAAG;EAAEC,MAAM,EAAE,GAAG;EAAEC,MAAM,EAAE;AAAE,CAAC,EACvC;EAAEF,MAAM,EAAE,GAAG;EAAEC,MAAM,EAAE,GAAG;EAAEC,MAAM,EAAE;AAAE,CAAC,EACvC;EAAEF,MAAM,EAAE,GAAG;EAAEC,MAAM,EAAE,GAAG;EAAEC,MAAM,EAAE;AAAE,CAAC,CAC1C;AAED,OAAO,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EAC7B,MAAMC,MAAM,GAAGf,MAAM,CAAC,CAAC;EACvB,MAAM,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAACI,SAAS,CAAC;EAC7C,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAACQ,SAAS,CAAC;EAE7CV,SAAS,CAAC,MAAM;IACZ,MAAMqB,GAAG,GAAGlB,EAAE,CAACmB,MAAM,CAACN,MAAM,CAACO,OAAO,CAAC,CAChCC,IAAI,CAAC,OAAO,EAAE,GAAG,CAAC,CAClBA,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC;IAExBH,GAAG,CAACI,SAAS,CAAC,GAAG,CAAC,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC;;IAE7B,MAAMC,IAAI,GAAGN,GAAG,CAACO,MAAM,CAAC,GAAG,CAAC,CACvBH,SAAS,CAAC,MAAM,CAAC,CACjBI,IAAI,CAACV,KAAK,CAAC,CACXW,KAAK,CAAC,CAAC,CACPF,MAAM,CAAC,MAAM,CAAC,CACdJ,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC,CACtBA,IAAI,CAAC,cAAc,EAAEO,CAAC,IAAIA,CAAC,CAAClB,MAAM,CAAC,CACnCW,IAAI,CAAC,YAAY,EAAE,aAAa,CAAC;IAEtC,MAAMQ,IAAI,GAAGX,GAAG,CAACO,MAAM,CAAC,GAAG,CAAC,CACvBH,SAAS,CAAC,QAAQ,CAAC,CACnBI,IAAI,CAACZ,KAAK,CAAC,CACXa,KAAK,CAAC,CAAC,CACPF,MAAM,CAAC,QAAQ,CAAC,CAChBJ,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,CACbA,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,CACpBS,IAAI,CAAC9B,EAAE,CAAC+B,IAAI,CAAC,CAAC,CACVC,EAAE,CAAC,OAAO,EAAEC,WAAW,CAAC,CACxBD,EAAE,CAAC,MAAM,EAAEE,OAAO,CAAC,CACnBF,EAAE,CAAC,KAAK,EAAEG,SAAS,CAAC,CAAC;IAE9BN,IAAI,CAACJ,MAAM,CAAC,OAAO,CAAC,CACfW,IAAI,CAACR,CAAC,IAAIA,CAAC,CAACxB,EAAE,CAAC;IAEpB,MAAMgC,IAAI,GAAGlB,GAAG,CAACO,MAAM,CAAC,GAAG,CAAC,CACvBH,SAAS,CAAC,MAAM,CAAC,CACjBI,IAAI,CAACZ,KAAK,CAAC,CACXa,KAAK,CAAC,CAAC,CACPF,MAAM,CAAC,MAAM,CAAC,CACdJ,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC,CACdA,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC,CACnBe,IAAI,CAACR,CAAC,IAAIA,CAAC,CAACxB,EAAE,CAAC;IAEpB,MAAMiC,SAAS,GAAGnB,GAAG,CAACO,MAAM,CAAC,MAAM,CAAC,CAACA,MAAM,CAAC,QAAQ,CAAC,CAChDJ,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC,CACnBA,IAAI,CAAC,SAAS,EAAE,YAAY,CAAC,CAC7BA,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC,CAChBA,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,CACfA,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC,CACtBA,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC,CACtBA,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC,CACvBI,MAAM,CAAC,SAAS,CAAC,CACjBJ,IAAI,CAAC,QAAQ,EAAE,eAAe,CAAC,CAC/BA,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC;;IAEzB;IACA,SAASiB,WAAWA,CAAA,EAAG;MACnBd,IAAI,CACCH,IAAI,CAAC,IAAI,EAAEO,CAAC,IAAId,KAAK,CAACyB,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACpC,EAAE,KAAKwB,CAAC,CAACpB,MAAM,CAAC,CAACH,CAAC,CAAC,CACrDgB,IAAI,CAAC,IAAI,EAAEO,CAAC,IAAId,KAAK,CAACyB,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACpC,EAAE,KAAKwB,CAAC,CAACpB,MAAM,CAAC,CAACF,CAAC,CAAC,CACrDe,IAAI,CAAC,IAAI,EAAEO,CAAC,IAAId,KAAK,CAACyB,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACpC,EAAE,KAAKwB,CAAC,CAACnB,MAAM,CAAC,CAACJ,CAAC,CAAC,CACrDgB,IAAI,CAAC,IAAI,EAAEO,CAAC,IAAId,KAAK,CAACyB,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACpC,EAAE,KAAKwB,CAAC,CAACnB,MAAM,CAAC,CAACH,CAAC,CAAC;MAE1DuB,IAAI,CACCR,IAAI,CAAC,IAAI,EAAEO,CAAC,IAAIA,CAAC,CAACvB,CAAC,CAAC,CACpBgB,IAAI,CAAC,IAAI,EAAEO,CAAC,IAAIA,CAAC,CAACtB,CAAC,CAAC;MAEzB8B,IAAI,CACCf,IAAI,CAAC,GAAG,EAAEO,CAAC,IAAIA,CAAC,CAACvB,CAAC,CAAC,CACnBgB,IAAI,CAAC,GAAG,EAAEO,CAAC,IAAIA,CAAC,CAACtB,CAAC,CAAC;IAC5B;;IAEA;IACA,SAAS2B,WAAWA,CAACQ,KAAK,EAAEb,CAAC,EAAE;MAC3B5B,EAAE,CAACmB,MAAM,CAAC,IAAI,CAAC,CAACuB,KAAK,CAAC,CAAC,CAACC,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC;IACnD;IAEA,SAAST,OAAOA,CAACO,KAAK,EAAEb,CAAC,EAAE;MACvBA,CAAC,CAACvB,CAAC,GAAGoC,KAAK,CAACpC,CAAC;MACbuB,CAAC,CAACtB,CAAC,GAAGmC,KAAK,CAACnC,CAAC;MACbgC,WAAW,CAAC,CAAC;IACjB;IAEA,SAASH,SAASA,CAACM,KAAK,EAAEb,CAAC,EAAE;MACzB5B,EAAE,CAACmB,MAAM,CAAC,IAAI,CAAC,CAACwB,OAAO,CAAC,QAAQ,EAAE,KAAK,CAAC;IAC5C;IAEAL,WAAW,CAAC,CAAC,CAAC,CAAC;EAEnB,CAAC,EAAE,CAACxB,KAAK,EAAEE,KAAK,CAAC,CAAC;EAElB,oBACId,OAAA;IAAK0C,GAAG,EAAE/B;EAAO;IAAAgC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAEhC;AAACpC,EAAA,CAhGeD,cAAc;AAAAsC,EAAA,GAAdtC,cAAc;AAkG9B,eAAeuC,GAAG;AAAC,IAAAD,EAAA;AAAAE,YAAA,CAAAF,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}