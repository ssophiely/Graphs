{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\admin\\\\Desktop\\\\\\u0433\\u0440\\u0430\\u0444\\u044B\\\\graph_app\\\\src\\\\components\\\\graph_info\\\\MatrixComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport Matrix from \"./Matrix.jsx\";\nimport Header from \"./Header.jsx\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function MatrixComponent() {\n  _s();\n  const [vertexCount, setVertexCount] = useState(5);\n  const input = useRef();\n  const vertexNames = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\"];\n  const [columnHeaders, setcolumnHeaders] = useState(vertexNames.slice(0, vertexCount));\n  const [rowHeaders, setrowHeaders] = useState(vertexNames.slice(0, vertexCount));\n  const [data, setData] = useState([...Array(vertexCount)].map(e => Array(vertexCount).fill(\"\")));\n\n  // Обработчик изменения значения в ячейке\n  const handleChange = (rowIndex, colIndex, value) => {\n    const newData = data.map((row, rIdx) => {\n      if (rIdx === rowIndex) {\n        const newRow = [...row];\n        newRow[colIndex] = value;\n        return newRow;\n      }\n      return row;\n    });\n    setData(newData);\n  };\n  const createMatrix = size => {\n    return Array.from({\n      length: size\n    }, () => Array.from({\n      length: size\n    }, () => 0));\n  };\n  function handleClick() {\n    let value = input.current.value;\n    value = value < 2 ? 2 : value;\n    value = value > 10 ? 10 : value;\n    setVertexCount(value);\n    setcolumnHeaders(vertexNames.slice(0, value));\n    setrowHeaders(vertexNames.slice(0, value));\n    console.log(createMatrix());\n    setData([...Array(vertexCount)].map(e => Array(vertexCount).fill(\"\")));\n    input.current.value = value;\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      input: input,\n      vertexCount: vertexCount,\n      onClickHandler: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Matrix, {\n      columnHeaders: columnHeaders,\n      rowHeaders: rowHeaders,\n      data: data,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(MatrixComponent, \"5aT6H5JnfAajN0Q+SzUzLxMXcos=\");\n_c = MatrixComponent;\nvar _c;\n$RefreshReg$(_c, \"MatrixComponent\");","map":{"version":3,"names":["React","useState","useRef","Matrix","Header","jsxDEV","_jsxDEV","Fragment","_Fragment","MatrixComponent","_s","vertexCount","setVertexCount","input","vertexNames","columnHeaders","setcolumnHeaders","slice","rowHeaders","setrowHeaders","data","setData","Array","map","e","fill","handleChange","rowIndex","colIndex","value","newData","row","rIdx","newRow","createMatrix","size","from","length","handleClick","current","console","log","children","onClickHandler","fileName","_jsxFileName","lineNumber","columnNumber","onChange","_c","$RefreshReg$"],"sources":["D:/Users/admin/Desktop/графы/graph_app/src/components/graph_info/MatrixComponent.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport Matrix from \"./Matrix.jsx\";\r\nimport Header from \"./Header.jsx\";\r\n\r\nexport default function MatrixComponent() {\r\n  const [vertexCount, setVertexCount] = useState(5);\r\n  const input = useRef();\r\n\r\n  const vertexNames = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\"];\r\n  const [columnHeaders, setcolumnHeaders] = useState(\r\n    vertexNames.slice(0, vertexCount)\r\n  );\r\n  const [rowHeaders, setrowHeaders] = useState(\r\n    vertexNames.slice(0, vertexCount)\r\n  );\r\n  const [data, setData] = useState(\r\n    [...Array(vertexCount)].map((e) => Array(vertexCount).fill(\"\"))\r\n  );\r\n\r\n  // Обработчик изменения значения в ячейке\r\n  const handleChange = (rowIndex, colIndex, value) => {\r\n    const newData = data.map((row, rIdx) => {\r\n      if (rIdx === rowIndex) {\r\n        const newRow = [...row];\r\n        newRow[colIndex] = value;\r\n        return newRow;\r\n      }\r\n      return row;\r\n    });\r\n    setData(newData);\r\n  };\r\n\r\n  const createMatrix = (size) => {\r\n    return Array.from({ length: size }, () => Array.from({ length: size }, () => 0));\r\n  };\r\n\r\n  function handleClick() {\r\n    let value = input.current.value;\r\n    value = value < 2 ? 2 : value;\r\n    value = value > 10 ? 10 : value;\r\n\r\n    setVertexCount(value);\r\n\r\n    setcolumnHeaders(vertexNames.slice(0, value));\r\n    setrowHeaders(vertexNames.slice(0, value));\r\n\r\n    console.log(createMatrix());\r\n\r\n    setData([...Array(vertexCount)].map((e) => Array(vertexCount).fill(\"\")));\r\n    input.current.value = value;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header\r\n        input={input}\r\n        vertexCount={vertexCount}\r\n        onClickHandler={handleClick}\r\n      />\r\n      <Matrix\r\n        columnHeaders={columnHeaders}\r\n        rowHeaders={rowHeaders}\r\n        data={data}\r\n        onChange={handleChange}\r\n      />\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}